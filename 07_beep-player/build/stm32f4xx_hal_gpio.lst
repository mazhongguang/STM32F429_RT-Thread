ARM GAS  /tmp/ccwN2N3p.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_gpio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_GPIO_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_GPIO_Init:
  26              	.LFB119:
  27              		.file 1 "HALLIB/Src/stm32f4xx_hal_gpio.c"
   1:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
   2:HALLIB/Src/stm32f4xx_hal_gpio.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @file    stm32f4xx_hal_gpio.c
   4:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief   GPIO HAL module driver.
   6:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *          This file provides firmware functions to manage the following 
   7:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *          functionalities of the General Purpose Input/Output (GPIO) peripheral:
   8:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *           + Initialization and de-initialization functions
   9:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *           + IO operation functions
  10:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
  11:HALLIB/Src/stm32f4xx_hal_gpio.c ****   @verbatim
  12:HALLIB/Src/stm32f4xx_hal_gpio.c ****   ==============================================================================
  13:HALLIB/Src/stm32f4xx_hal_gpio.c ****                     ##### GPIO Peripheral features #####
  14:HALLIB/Src/stm32f4xx_hal_gpio.c ****   ==============================================================================
  15:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..] 
  16:HALLIB/Src/stm32f4xx_hal_gpio.c ****   Subject to the specific hardware characteristics of each I/O port listed in the datasheet, each
  17:HALLIB/Src/stm32f4xx_hal_gpio.c ****   port bit of the General Purpose IO (GPIO) Ports, can be individually configured by software
  18:HALLIB/Src/stm32f4xx_hal_gpio.c ****   in several modes:
  19:HALLIB/Src/stm32f4xx_hal_gpio.c ****   (+) Input mode 
  20:HALLIB/Src/stm32f4xx_hal_gpio.c ****   (+) Analog mode
  21:HALLIB/Src/stm32f4xx_hal_gpio.c ****   (+) Output mode
  22:HALLIB/Src/stm32f4xx_hal_gpio.c ****   (+) Alternate function mode
  23:HALLIB/Src/stm32f4xx_hal_gpio.c ****   (+) External interrupt/event lines
  24:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
  25:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..]  
  26:HALLIB/Src/stm32f4xx_hal_gpio.c ****   During and just after reset, the alternate functions and external interrupt  
  27:HALLIB/Src/stm32f4xx_hal_gpio.c ****   lines are not active and the I/O ports are configured in input floating mode.
  28:HALLIB/Src/stm32f4xx_hal_gpio.c ****   
  29:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..]   
  30:HALLIB/Src/stm32f4xx_hal_gpio.c ****   All GPIO pins have weak internal pull-up and pull-down resistors, which can be 
  31:HALLIB/Src/stm32f4xx_hal_gpio.c ****   activated or not.
ARM GAS  /tmp/ccwN2N3p.s 			page 2


  32:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
  33:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..]
  34:HALLIB/Src/stm32f4xx_hal_gpio.c ****   In Output or Alternate mode, each IO can be configured on open-drain or push-pull
  35:HALLIB/Src/stm32f4xx_hal_gpio.c ****   type and the IO speed can be selected depending on the VDD value.
  36:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
  37:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..]  
  38:HALLIB/Src/stm32f4xx_hal_gpio.c ****   All ports have external interrupt/event capability. To use external interrupt 
  39:HALLIB/Src/stm32f4xx_hal_gpio.c ****   lines, the port must be configured in input mode. All available GPIO pins are 
  40:HALLIB/Src/stm32f4xx_hal_gpio.c ****   connected to the 16 external interrupt/event lines from EXTI0 to EXTI15.
  41:HALLIB/Src/stm32f4xx_hal_gpio.c ****   
  42:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..]
  43:HALLIB/Src/stm32f4xx_hal_gpio.c ****   The external interrupt/event controller consists of up to 23 edge detectors 
  44:HALLIB/Src/stm32f4xx_hal_gpio.c ****   (16 lines are connected to GPIO) for generating event/interrupt requests (each 
  45:HALLIB/Src/stm32f4xx_hal_gpio.c ****   input line can be independently configured to select the type (interrupt or event) 
  46:HALLIB/Src/stm32f4xx_hal_gpio.c ****   and the corresponding trigger event (rising or falling or both). Each line can 
  47:HALLIB/Src/stm32f4xx_hal_gpio.c ****   also be masked independently. 
  48:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
  49:HALLIB/Src/stm32f4xx_hal_gpio.c ****                      ##### How to use this driver #####
  50:HALLIB/Src/stm32f4xx_hal_gpio.c ****   ==============================================================================  
  51:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..]
  52:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) Enable the GPIO AHB clock using the following function: __HAL_RCC_GPIOx_CLK_ENABLE(). 
  53:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
  54:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) Configure the GPIO pin(s) using HAL_GPIO_Init().
  55:HALLIB/Src/stm32f4xx_hal_gpio.c ****         (++) Configure the IO mode using "Mode" member from GPIO_InitTypeDef structure
  56:HALLIB/Src/stm32f4xx_hal_gpio.c ****         (++) Activate Pull-up, Pull-down resistor using "Pull" member from GPIO_InitTypeDef 
  57:HALLIB/Src/stm32f4xx_hal_gpio.c ****              structure.
  58:HALLIB/Src/stm32f4xx_hal_gpio.c ****         (++) In case of Output or alternate function mode selection: the speed is 
  59:HALLIB/Src/stm32f4xx_hal_gpio.c ****              configured through "Speed" member from GPIO_InitTypeDef structure.
  60:HALLIB/Src/stm32f4xx_hal_gpio.c ****         (++) In alternate mode is selection, the alternate function connected to the IO
  61:HALLIB/Src/stm32f4xx_hal_gpio.c ****              is configured through "Alternate" member from GPIO_InitTypeDef structure.
  62:HALLIB/Src/stm32f4xx_hal_gpio.c ****         (++) Analog mode is required when a pin is to be used as ADC channel 
  63:HALLIB/Src/stm32f4xx_hal_gpio.c ****              or DAC output.
  64:HALLIB/Src/stm32f4xx_hal_gpio.c ****         (++) In case of external interrupt/event selection the "Mode" member from 
  65:HALLIB/Src/stm32f4xx_hal_gpio.c ****              GPIO_InitTypeDef structure select the type (interrupt or event) and 
  66:HALLIB/Src/stm32f4xx_hal_gpio.c ****              the corresponding trigger event (rising or falling or both).
  67:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
  68:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) In case of external interrupt/event mode selection, configure NVIC IRQ priority 
  69:HALLIB/Src/stm32f4xx_hal_gpio.c ****         mapped to the EXTI line using HAL_NVIC_SetPriority() and enable it using
  70:HALLIB/Src/stm32f4xx_hal_gpio.c ****         HAL_NVIC_EnableIRQ().
  71:HALLIB/Src/stm32f4xx_hal_gpio.c ****          
  72:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) To get the level of a pin configured in input mode use HAL_GPIO_ReadPin().
  73:HALLIB/Src/stm32f4xx_hal_gpio.c ****             
  74:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) To set/reset the level of a pin configured in output mode use 
  75:HALLIB/Src/stm32f4xx_hal_gpio.c ****         HAL_GPIO_WritePin()/HAL_GPIO_TogglePin().
  76:HALLIB/Src/stm32f4xx_hal_gpio.c ****     
  77:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) To lock pin configuration until next reset use HAL_GPIO_LockPin().
  78:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
  79:HALLIB/Src/stm32f4xx_hal_gpio.c ****                  
  80:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) During and just after reset, the alternate functions are not 
  81:HALLIB/Src/stm32f4xx_hal_gpio.c ****         active and the GPIO pins are configured in input floating mode (except JTAG
  82:HALLIB/Src/stm32f4xx_hal_gpio.c ****         pins).
  83:HALLIB/Src/stm32f4xx_hal_gpio.c ****   
  84:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as general purpose 
  85:HALLIB/Src/stm32f4xx_hal_gpio.c ****         (PC14 and PC15, respectively) when the LSE oscillator is off. The LSE has 
  86:HALLIB/Src/stm32f4xx_hal_gpio.c ****         priority over the GPIO function.
  87:HALLIB/Src/stm32f4xx_hal_gpio.c ****   
  88:HALLIB/Src/stm32f4xx_hal_gpio.c ****     (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
ARM GAS  /tmp/ccwN2N3p.s 			page 3


  89:HALLIB/Src/stm32f4xx_hal_gpio.c ****         general purpose PH0 and PH1, respectively, when the HSE oscillator is off. 
  90:HALLIB/Src/stm32f4xx_hal_gpio.c ****         The HSE has priority over the GPIO function.
  91:HALLIB/Src/stm32f4xx_hal_gpio.c ****   
  92:HALLIB/Src/stm32f4xx_hal_gpio.c ****   @endverbatim
  93:HALLIB/Src/stm32f4xx_hal_gpio.c ****   ******************************************************************************
  94:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @attention
  95:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
  96:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  97:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * All rights reserved.</center></h2>
  98:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
  99:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 100:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * the "License"; You may not use this file except in compliance with the
 101:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * License. You may obtain a copy of the License at:
 102:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *                        opensource.org/licenses/BSD-3-Clause
 103:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
 104:HALLIB/Src/stm32f4xx_hal_gpio.c ****   ******************************************************************************
 105:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */ 
 106:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 107:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Includes ------------------------------------------------------------------*/
 108:HALLIB/Src/stm32f4xx_hal_gpio.c **** #include "stm32f4xx_hal.h"
 109:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 110:HALLIB/Src/stm32f4xx_hal_gpio.c **** /** @addtogroup STM32F4xx_HAL_Driver
 111:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @{
 112:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 113:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 114:HALLIB/Src/stm32f4xx_hal_gpio.c **** /** @defgroup GPIO GPIO
 115:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief GPIO HAL module driver
 116:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @{
 117:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 118:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 119:HALLIB/Src/stm32f4xx_hal_gpio.c **** #ifdef HAL_GPIO_MODULE_ENABLED
 120:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 121:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Private typedef -----------------------------------------------------------*/
 122:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Private define ------------------------------------------------------------*/
 123:HALLIB/Src/stm32f4xx_hal_gpio.c **** /** @addtogroup GPIO_Private_Constants GPIO Private Constants
 124:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @{
 125:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 126:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define GPIO_MODE             0x00000003U
 127:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define EXTI_MODE             0x10000000U
 128:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define GPIO_MODE_IT          0x00010000U
 129:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define GPIO_MODE_EVT         0x00020000U
 130:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define RISING_EDGE           0x00100000U
 131:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define FALLING_EDGE          0x00200000U
 132:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define GPIO_OUTPUT_TYPE      0x00000010U
 133:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 134:HALLIB/Src/stm32f4xx_hal_gpio.c **** #define GPIO_NUMBER           16U
 135:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 136:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @}
 137:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 138:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Private macro -------------------------------------------------------------*/
 139:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Private variables ---------------------------------------------------------*/
 140:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Private function prototypes -----------------------------------------------*/
 141:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Private functions ---------------------------------------------------------*/
 142:HALLIB/Src/stm32f4xx_hal_gpio.c **** /* Exported functions --------------------------------------------------------*/
 143:HALLIB/Src/stm32f4xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions GPIO Exported Functions
 144:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @{
 145:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
ARM GAS  /tmp/ccwN2N3p.s 			page 4


 146:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 147:HALLIB/Src/stm32f4xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions_Group1 Initialization and de-initialization functions
 148:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *  @brief    Initialization and Configuration functions
 149:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
 150:HALLIB/Src/stm32f4xx_hal_gpio.c **** @verbatim    
 151:HALLIB/Src/stm32f4xx_hal_gpio.c ****  ===============================================================================
 152:HALLIB/Src/stm32f4xx_hal_gpio.c ****               ##### Initialization and de-initialization functions #####
 153:HALLIB/Src/stm32f4xx_hal_gpio.c ****  ===============================================================================
 154:HALLIB/Src/stm32f4xx_hal_gpio.c ****   [..]
 155:HALLIB/Src/stm32f4xx_hal_gpio.c ****     This section provides functions allowing to initialize and de-initialize the GPIOs
 156:HALLIB/Src/stm32f4xx_hal_gpio.c ****     to be ready for use.
 157:HALLIB/Src/stm32f4xx_hal_gpio.c ****  
 158:HALLIB/Src/stm32f4xx_hal_gpio.c **** @endverbatim
 159:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @{
 160:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 161:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 162:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 163:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 164:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 165:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 166:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 167:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
 168:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 169:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval None
 170:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 171:HALLIB/Src/stm32f4xx_hal_gpio.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 172:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
  28              		.loc 1 172 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 173:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t position;
 174:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t ioposition = 0x00U;
 175:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t iocurrent = 0x00U;
 176:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t temp = 0x00U;
 177:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 178:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Check the parameters */
 179:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 180:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 181:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 182:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 183:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 184:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Configure the port pins */
 185:HALLIB/Src/stm32f4xx_hal_gpio.c ****   for(position = 0U; position < GPIO_NUMBER; position++)
  33              		.loc 1 185 0
  34 0000 0023     		movs	r3, #0
  35              	.LVL1:
  36 0002 0F2B     		cmp	r3, #15
  37 0004 00F2EB80 		bhi	.L27
 172:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t position;
  38              		.loc 1 172 0
  39 0008 F0B5     		push	{r4, r5, r6, r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 20
  42              		.cfi_offset 4, -20
  43              		.cfi_offset 5, -16
ARM GAS  /tmp/ccwN2N3p.s 			page 5


  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 000a 83B0     		sub	sp, sp, #12
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 32
  50 000c 50E0     		b	.L13
  51              	.LVL2:
  52              	.L6:
 186:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 187:HALLIB/Src/stm32f4xx_hal_gpio.c ****     /* Get the IO position */
 188:HALLIB/Src/stm32f4xx_hal_gpio.c ****     ioposition = 0x01U << position;
 189:HALLIB/Src/stm32f4xx_hal_gpio.c ****     /* Get the current IO position */
 190:HALLIB/Src/stm32f4xx_hal_gpio.c ****     iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 191:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 192:HALLIB/Src/stm32f4xx_hal_gpio.c ****     if(iocurrent == ioposition)
 193:HALLIB/Src/stm32f4xx_hal_gpio.c ****     {
 194:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 195:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* In case of Output or Alternate function mode selection */
 196:HALLIB/Src/stm32f4xx_hal_gpio.c ****       if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 197:HALLIB/Src/stm32f4xx_hal_gpio.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 198:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 199:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Check the Speed parameter */
 200:HALLIB/Src/stm32f4xx_hal_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 201:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Configure the IO Speed */
 202:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = GPIOx->OSPEEDR; 
 203:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 204:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 205:HALLIB/Src/stm32f4xx_hal_gpio.c ****         GPIOx->OSPEEDR = temp;
 206:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 207:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Configure the IO Output Type */
 208:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = GPIOx->OTYPER;
 209:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 210:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 211:HALLIB/Src/stm32f4xx_hal_gpio.c ****         GPIOx->OTYPER = temp;
 212:HALLIB/Src/stm32f4xx_hal_gpio.c ****        }
 213:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 214:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 215:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp = GPIOx->PUPDR;
 216:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 217:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 218:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->PUPDR = temp;
 219:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 220:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* In case of Alternate function mode selection */
 221:HALLIB/Src/stm32f4xx_hal_gpio.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 222:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 223:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Check the Alternate function parameter */
 224:HALLIB/Src/stm32f4xx_hal_gpio.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 225:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Configure Alternate function mapped with the current IO */
 226:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = GPIOx->AFR[position >> 3U];
  53              		.loc 1 226 0
  54 000e 4FEAD30C 		lsr	ip, r3, #3
  55 0012 0CF1080C 		add	ip, ip, #8
  56 0016 50F82C50 		ldr	r5, [r0, ip, lsl #2]
  57              	.LVL3:
 227:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
  58              		.loc 1 227 0
ARM GAS  /tmp/ccwN2N3p.s 			page 6


  59 001a 03F0070E 		and	lr, r3, #7
  60 001e 4FEA8E0E 		lsl	lr, lr, #2
  61 0022 0F26     		movs	r6, #15
  62 0024 06FA0EF6 		lsl	r6, r6, lr
  63 0028 25EA0605 		bic	r5, r5, r6
  64              	.LVL4:
 228:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
  65              		.loc 1 228 0
  66 002c 0E69     		ldr	r6, [r1, #16]
  67 002e 06FA0EF6 		lsl	r6, r6, lr
  68 0032 3543     		orrs	r5, r5, r6
  69              	.LVL5:
 229:HALLIB/Src/stm32f4xx_hal_gpio.c ****         GPIOx->AFR[position >> 3U] = temp;
  70              		.loc 1 229 0
  71 0034 40F82C50 		str	r5, [r0, ip, lsl #2]
  72 0038 6FE0     		b	.L7
  73              	.L29:
 230:HALLIB/Src/stm32f4xx_hal_gpio.c ****       }
 231:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 232:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 233:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp = GPIOx->MODER;
 234:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 235:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 236:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->MODER = temp;
 237:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 238:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 239:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Configure the External Interrupt or event for the current IO */
 240:HALLIB/Src/stm32f4xx_hal_gpio.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 241:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 242:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Enable SYSCFG Clock */
 243:HALLIB/Src/stm32f4xx_hal_gpio.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 244:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 245:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = SYSCFG->EXTICR[position >> 2U];
 246:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~(0x0FU << (4U * (position & 0x03U)));
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
  74              		.loc 1 247 0
  75 003a 0926     		movs	r6, #9
  76 003c 00E0     		b	.L8
  77              	.L14:
  78 003e 0026     		movs	r6, #0
  79              	.L8:
  80              		.loc 1 247 0 is_stmt 0 discriminator 40
  81 0040 06FA0EF6 		lsl	r6, r6, lr
  82 0044 3543     		orrs	r5, r5, r6
  83              	.LVL6:
 248:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
  84              		.loc 1 248 0 is_stmt 1 discriminator 40
  85 0046 0232     		adds	r2, r2, #2
  86 0048 654E     		ldr	r6, .L30
  87 004a 46F82250 		str	r5, [r6, r2, lsl #2]
 249:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 250:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Clear EXTI line configuration */
 251:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = EXTI->IMR;
  88              		.loc 1 251 0 discriminator 40
  89 004e 654A     		ldr	r2, .L30+4
  90 0050 1568     		ldr	r5, [r2]
  91              	.LVL7:
ARM GAS  /tmp/ccwN2N3p.s 			page 7


 252:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~((uint32_t)iocurrent);
  92              		.loc 1 252 0 discriminator 40
  93 0052 E243     		mvns	r2, r4
  94 0054 05EA0206 		and	r6, r5, r2
  95              	.LVL8:
 253:HALLIB/Src/stm32f4xx_hal_gpio.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
  96              		.loc 1 253 0 discriminator 40
  97 0058 4F68     		ldr	r7, [r1, #4]
  98 005a 17F4803F 		tst	r7, #65536
  99 005e 01D0     		beq	.L9
 254:HALLIB/Src/stm32f4xx_hal_gpio.c ****         {
 255:HALLIB/Src/stm32f4xx_hal_gpio.c ****           temp |= iocurrent;
 100              		.loc 1 255 0
 101 0060 44EA0506 		orr	r6, r4, r5
 102              	.LVL9:
 103              	.L9:
 256:HALLIB/Src/stm32f4xx_hal_gpio.c ****         }
 257:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->IMR = temp;
 104              		.loc 1 257 0
 105 0064 5F4D     		ldr	r5, .L30+4
 106 0066 2E60     		str	r6, [r5]
 258:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 259:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = EXTI->EMR;
 107              		.loc 1 259 0
 108 0068 6D68     		ldr	r5, [r5, #4]
 109              	.LVL10:
 260:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~((uint32_t)iocurrent);
 110              		.loc 1 260 0
 111 006a 02EA0506 		and	r6, r2, r5
 112              	.LVL11:
 261:HALLIB/Src/stm32f4xx_hal_gpio.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 113              		.loc 1 261 0
 114 006e 4F68     		ldr	r7, [r1, #4]
 115 0070 17F4003F 		tst	r7, #131072
 116 0074 01D0     		beq	.L10
 262:HALLIB/Src/stm32f4xx_hal_gpio.c ****         {
 263:HALLIB/Src/stm32f4xx_hal_gpio.c ****           temp |= iocurrent;
 117              		.loc 1 263 0
 118 0076 44EA0506 		orr	r6, r4, r5
 119              	.LVL12:
 120              	.L10:
 264:HALLIB/Src/stm32f4xx_hal_gpio.c ****         }
 265:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->EMR = temp;
 121              		.loc 1 265 0
 122 007a 5A4D     		ldr	r5, .L30+4
 123 007c 6E60     		str	r6, [r5, #4]
 266:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 267:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Clear Rising Falling edge configuration */
 268:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = EXTI->RTSR;
 124              		.loc 1 268 0
 125 007e AD68     		ldr	r5, [r5, #8]
 126              	.LVL13:
 269:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~((uint32_t)iocurrent);
 127              		.loc 1 269 0
 128 0080 02EA0506 		and	r6, r2, r5
 129              	.LVL14:
 270:HALLIB/Src/stm32f4xx_hal_gpio.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
ARM GAS  /tmp/ccwN2N3p.s 			page 8


 130              		.loc 1 270 0
 131 0084 4F68     		ldr	r7, [r1, #4]
 132 0086 17F4801F 		tst	r7, #1048576
 133 008a 01D0     		beq	.L11
 271:HALLIB/Src/stm32f4xx_hal_gpio.c ****         {
 272:HALLIB/Src/stm32f4xx_hal_gpio.c ****           temp |= iocurrent;
 134              		.loc 1 272 0
 135 008c 44EA0506 		orr	r6, r4, r5
 136              	.LVL15:
 137              	.L11:
 273:HALLIB/Src/stm32f4xx_hal_gpio.c ****         }
 274:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->RTSR = temp;
 138              		.loc 1 274 0
 139 0090 544D     		ldr	r5, .L30+4
 140 0092 AE60     		str	r6, [r5, #8]
 275:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 276:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp = EXTI->FTSR;
 141              		.loc 1 276 0
 142 0094 ED68     		ldr	r5, [r5, #12]
 143              	.LVL16:
 277:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~((uint32_t)iocurrent);
 144              		.loc 1 277 0
 145 0096 2A40     		ands	r2, r2, r5
 146              	.LVL17:
 278:HALLIB/Src/stm32f4xx_hal_gpio.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 147              		.loc 1 278 0
 148 0098 4E68     		ldr	r6, [r1, #4]
 149 009a 16F4001F 		tst	r6, #2097152
 150 009e 01D0     		beq	.L12
 279:HALLIB/Src/stm32f4xx_hal_gpio.c ****         {
 280:HALLIB/Src/stm32f4xx_hal_gpio.c ****           temp |= iocurrent;
 151              		.loc 1 280 0
 152 00a0 44EA0502 		orr	r2, r4, r5
 153              	.LVL18:
 154              	.L12:
 281:HALLIB/Src/stm32f4xx_hal_gpio.c ****         }
 282:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->FTSR = temp;
 155              		.loc 1 282 0
 156 00a4 4F4C     		ldr	r4, .L30+4
 157              	.LVL19:
 158 00a6 E260     		str	r2, [r4, #12]
 159              	.LVL20:
 160              	.L3:
 185:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 161              		.loc 1 185 0 discriminator 2
 162 00a8 0133     		adds	r3, r3, #1
 163              	.LVL21:
 164 00aa 0F2B     		cmp	r3, #15
 165 00ac 00F29580 		bhi	.L28
 166              	.LVL22:
 167              	.L13:
 188:HALLIB/Src/stm32f4xx_hal_gpio.c ****     /* Get the current IO position */
 168              		.loc 1 188 0
 169 00b0 0122     		movs	r2, #1
 170 00b2 9A40     		lsls	r2, r2, r3
 171              	.LVL23:
 190:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
ARM GAS  /tmp/ccwN2N3p.s 			page 9


 172              		.loc 1 190 0
 173 00b4 0C68     		ldr	r4, [r1]
 174 00b6 1440     		ands	r4, r4, r2
 175              	.LVL24:
 192:HALLIB/Src/stm32f4xx_hal_gpio.c ****     {
 176              		.loc 1 192 0
 177 00b8 A242     		cmp	r2, r4
 178 00ba F5D1     		bne	.L3
 196:HALLIB/Src/stm32f4xx_hal_gpio.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 179              		.loc 1 196 0
 180 00bc 4D68     		ldr	r5, [r1, #4]
 181 00be 6E1E     		subs	r6, r5, #1
 182 00c0 012E     		cmp	r6, #1
 183 00c2 03D9     		bls	.L4
 196:HALLIB/Src/stm32f4xx_hal_gpio.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 184              		.loc 1 196 0 is_stmt 0 discriminator 1
 185 00c4 112D     		cmp	r5, #17
 186 00c6 01D0     		beq	.L4
 197:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 187              		.loc 1 197 0 is_stmt 1
 188 00c8 122D     		cmp	r5, #18
 189 00ca 15D1     		bne	.L5
 190              	.L4:
 202:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 191              		.loc 1 202 0
 192 00cc 8568     		ldr	r5, [r0, #8]
 193              	.LVL25:
 203:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 194              		.loc 1 203 0
 195 00ce 4FEA430E 		lsl	lr, r3, #1
 196 00d2 0327     		movs	r7, #3
 197 00d4 07FA0EF7 		lsl	r7, r7, lr
 198 00d8 25EA0705 		bic	r5, r5, r7
 199              	.LVL26:
 204:HALLIB/Src/stm32f4xx_hal_gpio.c ****         GPIOx->OSPEEDR = temp;
 200              		.loc 1 204 0
 201 00dc CE68     		ldr	r6, [r1, #12]
 202 00de 06FA0EF6 		lsl	r6, r6, lr
 203 00e2 3543     		orrs	r5, r5, r6
 204              	.LVL27:
 205:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 205              		.loc 1 205 0
 206 00e4 8560     		str	r5, [r0, #8]
 208:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 207              		.loc 1 208 0
 208 00e6 4568     		ldr	r5, [r0, #4]
 209              	.LVL28:
 209:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 210              		.loc 1 209 0
 211 00e8 25EA0202 		bic	r2, r5, r2
 212              	.LVL29:
 210:HALLIB/Src/stm32f4xx_hal_gpio.c ****         GPIOx->OTYPER = temp;
 213              		.loc 1 210 0
 214 00ec 4D68     		ldr	r5, [r1, #4]
 215 00ee C5F30015 		ubfx	r5, r5, #4, #1
 216 00f2 9D40     		lsls	r5, r5, r3
 217 00f4 2A43     		orrs	r2, r2, r5
ARM GAS  /tmp/ccwN2N3p.s 			page 10


 218              	.LVL30:
 211:HALLIB/Src/stm32f4xx_hal_gpio.c ****        }
 219              		.loc 1 211 0
 220 00f6 4260     		str	r2, [r0, #4]
 221              	.LVL31:
 222              	.L5:
 215:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 223              		.loc 1 215 0
 224 00f8 C668     		ldr	r6, [r0, #12]
 225              	.LVL32:
 216:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 226              		.loc 1 216 0
 227 00fa 5F00     		lsls	r7, r3, #1
 228 00fc 0322     		movs	r2, #3
 229 00fe BA40     		lsls	r2, r2, r7
 230 0100 D243     		mvns	r2, r2
 231 0102 1640     		ands	r6, r6, r2
 232              	.LVL33:
 217:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->PUPDR = temp;
 233              		.loc 1 217 0
 234 0104 8D68     		ldr	r5, [r1, #8]
 235 0106 BD40     		lsls	r5, r5, r7
 236 0108 2E43     		orrs	r6, r6, r5
 237              	.LVL34:
 218:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 238              		.loc 1 218 0
 239 010a C660     		str	r6, [r0, #12]
 221:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 240              		.loc 1 221 0
 241 010c 4D68     		ldr	r5, [r1, #4]
 242 010e 022D     		cmp	r5, #2
 243 0110 3FF47DAF 		beq	.L6
 221:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 244              		.loc 1 221 0 is_stmt 0 discriminator 1
 245 0114 122D     		cmp	r5, #18
 246 0116 3FF47AAF 		beq	.L6
 247              	.LVL35:
 248              	.L7:
 233:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 249              		.loc 1 233 0 is_stmt 1
 250 011a 0568     		ldr	r5, [r0]
 251              	.LVL36:
 234:HALLIB/Src/stm32f4xx_hal_gpio.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 252              		.loc 1 234 0
 253 011c 2A40     		ands	r2, r2, r5
 254              	.LVL37:
 235:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->MODER = temp;
 255              		.loc 1 235 0
 256 011e 4D68     		ldr	r5, [r1, #4]
 257 0120 05F00305 		and	r5, r5, #3
 258 0124 BD40     		lsls	r5, r5, r7
 259 0126 2A43     		orrs	r2, r2, r5
 260              	.LVL38:
 236:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 261              		.loc 1 236 0
 262 0128 0260     		str	r2, [r0]
 240:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
ARM GAS  /tmp/ccwN2N3p.s 			page 11


 263              		.loc 1 240 0
 264 012a 4A68     		ldr	r2, [r1, #4]
 265              	.LVL39:
 266 012c 12F0805F 		tst	r2, #268435456
 267 0130 BAD0     		beq	.L3
 268              	.LBB2:
 243:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 269              		.loc 1 243 0
 270 0132 0022     		movs	r2, #0
 271 0134 0192     		str	r2, [sp, #4]
 272              	.LVL40:
 273 0136 2C4A     		ldr	r2, .L30+8
 274 0138 556C     		ldr	r5, [r2, #68]
 275 013a 45F48045 		orr	r5, r5, #16384
 276 013e 5564     		str	r5, [r2, #68]
 277 0140 526C     		ldr	r2, [r2, #68]
 278 0142 02F48042 		and	r2, r2, #16384
 279 0146 0192     		str	r2, [sp, #4]
 280 0148 019A     		ldr	r2, [sp, #4]
 281              	.LBE2:
 245:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp &= ~(0x0FU << (4U * (position & 0x03U)));
 282              		.loc 1 245 0
 283 014a 9A08     		lsrs	r2, r3, #2
 284 014c 961C     		adds	r6, r2, #2
 285 014e 244D     		ldr	r5, .L30
 286 0150 55F82650 		ldr	r5, [r5, r6, lsl #2]
 287              	.LVL41:
 246:HALLIB/Src/stm32f4xx_hal_gpio.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 288              		.loc 1 246 0
 289 0154 03F00306 		and	r6, r3, #3
 290 0158 4FEA860E 		lsl	lr, r6, #2
 291 015c 0F26     		movs	r6, #15
 292 015e 06FA0EF6 		lsl	r6, r6, lr
 293 0162 25EA0605 		bic	r5, r5, r6
 294              	.LVL42:
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 295              		.loc 1 247 0
 296 0166 214F     		ldr	r7, .L30+12
 297 0168 B842     		cmp	r0, r7
 298 016a 3FF468AF 		beq	.L14
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 299              		.loc 1 247 0 is_stmt 0 discriminator 1
 300 016e 204E     		ldr	r6, .L30+16
 301 0170 B042     		cmp	r0, r6
 302 0172 22D0     		beq	.L15
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 303              		.loc 1 247 0 discriminator 3
 304 0174 06F58066 		add	r6, r6, #1024
 305 0178 B042     		cmp	r0, r6
 306 017a 20D0     		beq	.L16
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 307              		.loc 1 247 0 discriminator 5
 308 017c 06F58066 		add	r6, r6, #1024
 309 0180 B042     		cmp	r0, r6
 310 0182 1ED0     		beq	.L17
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 311              		.loc 1 247 0 discriminator 7
ARM GAS  /tmp/ccwN2N3p.s 			page 12


 312 0184 06F58066 		add	r6, r6, #1024
 313 0188 B042     		cmp	r0, r6
 314 018a 1CD0     		beq	.L18
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 315              		.loc 1 247 0 discriminator 9
 316 018c 06F58066 		add	r6, r6, #1024
 317 0190 B042     		cmp	r0, r6
 318 0192 1AD0     		beq	.L19
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 319              		.loc 1 247 0 discriminator 11
 320 0194 06F58066 		add	r6, r6, #1024
 321 0198 B042     		cmp	r0, r6
 322 019a 18D0     		beq	.L20
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 323              		.loc 1 247 0 discriminator 13
 324 019c 06F58066 		add	r6, r6, #1024
 325 01a0 B042     		cmp	r0, r6
 326 01a2 16D0     		beq	.L21
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 327              		.loc 1 247 0 discriminator 15
 328 01a4 06F58066 		add	r6, r6, #1024
 329 01a8 B042     		cmp	r0, r6
 330 01aa 14D0     		beq	.L22
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 331              		.loc 1 247 0 discriminator 17
 332 01ac 06F58066 		add	r6, r6, #1024
 333 01b0 B042     		cmp	r0, r6
 334 01b2 3FF442AF 		beq	.L29
 247:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 335              		.loc 1 247 0
 336 01b6 0A26     		movs	r6, #10
 337 01b8 42E7     		b	.L8
 338              	.L15:
 339 01ba 0126     		movs	r6, #1
 340              	.LVL43:
 341 01bc 40E7     		b	.L8
 342              	.LVL44:
 343              	.L16:
 344 01be 0226     		movs	r6, #2
 345 01c0 3EE7     		b	.L8
 346              	.L17:
 347 01c2 0326     		movs	r6, #3
 348 01c4 3CE7     		b	.L8
 349              	.L18:
 350 01c6 0426     		movs	r6, #4
 351 01c8 3AE7     		b	.L8
 352              	.L19:
 353 01ca 0526     		movs	r6, #5
 354 01cc 38E7     		b	.L8
 355              	.L20:
 356 01ce 0626     		movs	r6, #6
 357 01d0 36E7     		b	.L8
 358              	.L21:
 359 01d2 0726     		movs	r6, #7
 360 01d4 34E7     		b	.L8
 361              	.L22:
 362 01d6 0826     		movs	r6, #8
ARM GAS  /tmp/ccwN2N3p.s 			page 13


 363 01d8 32E7     		b	.L8
 364              	.LVL45:
 365              	.L28:
 283:HALLIB/Src/stm32f4xx_hal_gpio.c ****       }
 284:HALLIB/Src/stm32f4xx_hal_gpio.c ****     }
 285:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 286:HALLIB/Src/stm32f4xx_hal_gpio.c **** }
 366              		.loc 1 286 0 is_stmt 1
 367 01da 03B0     		add	sp, sp, #12
 368              	.LCFI2:
 369              		.cfi_def_cfa_offset 20
 370              		@ sp needed
 371 01dc F0BD     		pop	{r4, r5, r6, r7, pc}
 372              	.LVL46:
 373              	.L27:
 374              	.LCFI3:
 375              		.cfi_def_cfa_offset 0
 376              		.cfi_restore 4
 377              		.cfi_restore 5
 378              		.cfi_restore 6
 379              		.cfi_restore 7
 380              		.cfi_restore 14
 381 01de 7047     		bx	lr
 382              	.L31:
 383              		.align	2
 384              	.L30:
 385 01e0 00380140 		.word	1073821696
 386 01e4 003C0140 		.word	1073822720
 387 01e8 00380240 		.word	1073887232
 388 01ec 00000240 		.word	1073872896
 389 01f0 00040240 		.word	1073873920
 390              		.cfi_endproc
 391              	.LFE119:
 393              		.section	.text.HAL_GPIO_DeInit,"ax",%progbits
 394              		.align	1
 395              		.global	HAL_GPIO_DeInit
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	HAL_GPIO_DeInit:
 402              	.LFB120:
 287:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 288:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 289:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  De-initializes the GPIOx peripheral registers to their default reset values.
 290:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 291:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 292:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to be written.
 293:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
 294:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval None
 295:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 296:HALLIB/Src/stm32f4xx_hal_gpio.c **** void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
 297:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
 403              		.loc 1 297 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwN2N3p.s 			page 14


 407              	.LVL47:
 298:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t position;
 299:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t ioposition = 0x00U;
 300:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t iocurrent = 0x00U;
 301:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t tmp = 0x00U;
 302:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 303:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Check the parameters */
 304:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 305:HALLIB/Src/stm32f4xx_hal_gpio.c ****   
 306:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Configure the port pins */
 307:HALLIB/Src/stm32f4xx_hal_gpio.c ****   for(position = 0U; position < GPIO_NUMBER; position++)
 408              		.loc 1 307 0
 409 0000 0023     		movs	r3, #0
 410              	.LVL48:
 411 0002 0F2B     		cmp	r3, #15
 412 0004 00F29D80 		bhi	.L51
 297:HALLIB/Src/stm32f4xx_hal_gpio.c ****   uint32_t position;
 413              		.loc 1 297 0
 414 0008 F0B5     		push	{r4, r5, r6, r7, lr}
 415              	.LCFI4:
 416              		.cfi_def_cfa_offset 20
 417              		.cfi_offset 4, -20
 418              		.cfi_offset 5, -16
 419              		.cfi_offset 6, -12
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 000a 2BE0     		b	.L37
 423              	.LVL49:
 424              	.L54:
 308:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 309:HALLIB/Src/stm32f4xx_hal_gpio.c ****     /* Get the IO position */
 310:HALLIB/Src/stm32f4xx_hal_gpio.c ****     ioposition = 0x01U << position;
 311:HALLIB/Src/stm32f4xx_hal_gpio.c ****     /* Get the current IO position */
 312:HALLIB/Src/stm32f4xx_hal_gpio.c ****     iocurrent = (GPIO_Pin) & ioposition;
 313:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 314:HALLIB/Src/stm32f4xx_hal_gpio.c ****     if(iocurrent == ioposition)
 315:HALLIB/Src/stm32f4xx_hal_gpio.c ****     {
 316:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /*------------------------- EXTI Mode Configuration --------------------*/
 317:HALLIB/Src/stm32f4xx_hal_gpio.c ****       tmp = SYSCFG->EXTICR[position >> 2U];
 318:HALLIB/Src/stm32f4xx_hal_gpio.c ****       tmp &= (0x0FU << (4U * (position & 0x03U)));
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 425              		.loc 1 319 0
 426 000c 4FF0090E 		mov	lr, #9
 427 0010 01E0     		b	.L35
 428              	.L38:
 429 0012 4FF0000E 		mov	lr, #0
 430              	.L35:
 431              		.loc 1 319 0 is_stmt 0 discriminator 40
 432 0016 0EFA05F5 		lsl	r5, lr, r5
 433 001a AF42     		cmp	r7, r5
 434 001c 78D0     		beq	.L52
 435              	.LVL50:
 436              	.L36:
 320:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 321:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Clear EXTI line configuration */
 322:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->IMR &= ~((uint32_t)iocurrent);
 323:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->EMR &= ~((uint32_t)iocurrent);
ARM GAS  /tmp/ccwN2N3p.s 			page 15


 324:HALLIB/Src/stm32f4xx_hal_gpio.c ****         
 325:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Clear Rising Falling edge configuration */
 326:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->RTSR &= ~((uint32_t)iocurrent);
 327:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->FTSR &= ~((uint32_t)iocurrent);
 328:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 329:HALLIB/Src/stm32f4xx_hal_gpio.c ****         /* Configure the External Interrupt or event for the current IO */
 330:HALLIB/Src/stm32f4xx_hal_gpio.c ****         tmp = 0x0FU << (4U * (position & 0x03U));
 331:HALLIB/Src/stm32f4xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 332:HALLIB/Src/stm32f4xx_hal_gpio.c ****       }
 333:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 334:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /*------------------------- GPIO Mode Configuration --------------------*/
 335:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Configure IO Direction in Input Floating Mode */
 336:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 437              		.loc 1 336 0 is_stmt 1
 438 001e 0568     		ldr	r5, [r0]
 439 0020 5E00     		lsls	r6, r3, #1
 440 0022 0324     		movs	r4, #3
 441 0024 B440     		lsls	r4, r4, r6
 442 0026 E443     		mvns	r4, r4
 443 0028 2540     		ands	r5, r5, r4
 444 002a 0560     		str	r5, [r0]
 337:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 338:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Configure the default Alternate Function in current IO */
 339:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 445              		.loc 1 339 0
 446 002c DD08     		lsrs	r5, r3, #3
 447 002e 0835     		adds	r5, r5, #8
 448 0030 50F82560 		ldr	r6, [r0, r5, lsl #2]
 449 0034 03F00707 		and	r7, r3, #7
 450 0038 4FEA870E 		lsl	lr, r7, #2
 451 003c 0F27     		movs	r7, #15
 452 003e 07FA0EF7 		lsl	r7, r7, lr
 453 0042 26EA0706 		bic	r6, r6, r7
 454 0046 40F82560 		str	r6, [r0, r5, lsl #2]
 340:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 341:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Deactivate the Pull-up and Pull-down resistor for the current IO */
 342:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 455              		.loc 1 342 0
 456 004a C568     		ldr	r5, [r0, #12]
 457 004c 2540     		ands	r5, r5, r4
 458 004e C560     		str	r5, [r0, #12]
 343:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 344:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Configure the default value IO Output Type */
 345:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 459              		.loc 1 345 0
 460 0050 4568     		ldr	r5, [r0, #4]
 461 0052 25EA0202 		bic	r2, r5, r2
 462              	.LVL51:
 463 0056 4260     		str	r2, [r0, #4]
 346:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 347:HALLIB/Src/stm32f4xx_hal_gpio.c ****       /* Configure the default value for IO Speed */
 348:HALLIB/Src/stm32f4xx_hal_gpio.c ****       GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 464              		.loc 1 348 0
 465 0058 8268     		ldr	r2, [r0, #8]
 466 005a 1440     		ands	r4, r4, r2
 467 005c 8460     		str	r4, [r0, #8]
 468              	.L34:
ARM GAS  /tmp/ccwN2N3p.s 			page 16


 307:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 469              		.loc 1 307 0 discriminator 2
 470 005e 0133     		adds	r3, r3, #1
 471              	.LVL52:
 472 0060 0F2B     		cmp	r3, #15
 473 0062 6DD8     		bhi	.L53
 474              	.LVL53:
 475              	.L37:
 310:HALLIB/Src/stm32f4xx_hal_gpio.c ****     /* Get the current IO position */
 476              		.loc 1 310 0
 477 0064 0122     		movs	r2, #1
 478 0066 9A40     		lsls	r2, r2, r3
 479              	.LVL54:
 312:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 480              		.loc 1 312 0
 481 0068 02EA0104 		and	r4, r2, r1
 482              	.LVL55:
 314:HALLIB/Src/stm32f4xx_hal_gpio.c ****     {
 483              		.loc 1 314 0
 484 006c A242     		cmp	r2, r4
 485 006e F6D1     		bne	.L34
 317:HALLIB/Src/stm32f4xx_hal_gpio.c ****       tmp &= (0x0FU << (4U * (position & 0x03U)));
 486              		.loc 1 317 0
 487 0070 4FEA930C 		lsr	ip, r3, #2
 488 0074 0CF10206 		add	r6, ip, #2
 489 0078 324D     		ldr	r5, .L55
 490 007a 55F82670 		ldr	r7, [r5, r6, lsl #2]
 491              	.LVL56:
 318:HALLIB/Src/stm32f4xx_hal_gpio.c ****       if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 492              		.loc 1 318 0
 493 007e 03F00305 		and	r5, r3, #3
 494 0082 AD00     		lsls	r5, r5, #2
 495 0084 0F26     		movs	r6, #15
 496 0086 AE40     		lsls	r6, r6, r5
 497 0088 3740     		ands	r7, r7, r6
 498              	.LVL57:
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 499              		.loc 1 319 0
 500 008a DFF8C0E0 		ldr	lr, .L55+8
 501 008e 7045     		cmp	r0, lr
 502 0090 BFD0     		beq	.L38
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 503              		.loc 1 319 0 is_stmt 0 discriminator 1
 504 0092 0EF5806E 		add	lr, lr, #1024
 505 0096 7045     		cmp	r0, lr
 506 0098 22D0     		beq	.L39
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 507              		.loc 1 319 0 discriminator 3
 508 009a 0EF5806E 		add	lr, lr, #1024
 509 009e 7045     		cmp	r0, lr
 510 00a0 21D0     		beq	.L40
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 511              		.loc 1 319 0 discriminator 5
 512 00a2 0EF5806E 		add	lr, lr, #1024
 513 00a6 7045     		cmp	r0, lr
 514 00a8 20D0     		beq	.L41
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
ARM GAS  /tmp/ccwN2N3p.s 			page 17


 515              		.loc 1 319 0 discriminator 7
 516 00aa 0EF5806E 		add	lr, lr, #1024
 517 00ae 7045     		cmp	r0, lr
 518 00b0 1FD0     		beq	.L42
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 519              		.loc 1 319 0 discriminator 9
 520 00b2 0EF5806E 		add	lr, lr, #1024
 521 00b6 7045     		cmp	r0, lr
 522 00b8 1ED0     		beq	.L43
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 523              		.loc 1 319 0 discriminator 11
 524 00ba 0EF5806E 		add	lr, lr, #1024
 525 00be 7045     		cmp	r0, lr
 526 00c0 1DD0     		beq	.L44
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 527              		.loc 1 319 0 discriminator 13
 528 00c2 0EF5806E 		add	lr, lr, #1024
 529 00c6 7045     		cmp	r0, lr
 530 00c8 1CD0     		beq	.L45
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 531              		.loc 1 319 0 discriminator 15
 532 00ca 0EF5806E 		add	lr, lr, #1024
 533 00ce 7045     		cmp	r0, lr
 534 00d0 1BD0     		beq	.L46
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 535              		.loc 1 319 0 discriminator 17
 536 00d2 0EF5806E 		add	lr, lr, #1024
 537 00d6 7045     		cmp	r0, lr
 538 00d8 98D0     		beq	.L54
 319:HALLIB/Src/stm32f4xx_hal_gpio.c ****       {
 539              		.loc 1 319 0
 540 00da 4FF00A0E 		mov	lr, #10
 541 00de 9AE7     		b	.L35
 542              	.L39:
 543 00e0 4FF0010E 		mov	lr, #1
 544 00e4 97E7     		b	.L35
 545              	.L40:
 546 00e6 4FF0020E 		mov	lr, #2
 547 00ea 94E7     		b	.L35
 548              	.L41:
 549 00ec 4FF0030E 		mov	lr, #3
 550 00f0 91E7     		b	.L35
 551              	.L42:
 552 00f2 4FF0040E 		mov	lr, #4
 553 00f6 8EE7     		b	.L35
 554              	.L43:
 555 00f8 4FF0050E 		mov	lr, #5
 556 00fc 8BE7     		b	.L35
 557              	.L44:
 558 00fe 4FF0060E 		mov	lr, #6
 559 0102 88E7     		b	.L35
 560              	.L45:
 561 0104 4FF0070E 		mov	lr, #7
 562 0108 85E7     		b	.L35
 563              	.L46:
 564 010a 4FF0080E 		mov	lr, #8
 565 010e 82E7     		b	.L35
ARM GAS  /tmp/ccwN2N3p.s 			page 18


 566              	.L52:
 322:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->EMR &= ~((uint32_t)iocurrent);
 567              		.loc 1 322 0 is_stmt 1
 568 0110 0D4D     		ldr	r5, .L55+4
 569 0112 2F68     		ldr	r7, [r5]
 570              	.LVL58:
 571 0114 E443     		mvns	r4, r4
 572              	.LVL59:
 573 0116 2740     		ands	r7, r7, r4
 574 0118 2F60     		str	r7, [r5]
 323:HALLIB/Src/stm32f4xx_hal_gpio.c ****         
 575              		.loc 1 323 0
 576 011a 6F68     		ldr	r7, [r5, #4]
 577 011c 2740     		ands	r7, r7, r4
 578 011e 6F60     		str	r7, [r5, #4]
 326:HALLIB/Src/stm32f4xx_hal_gpio.c ****         EXTI->FTSR &= ~((uint32_t)iocurrent);
 579              		.loc 1 326 0
 580 0120 AF68     		ldr	r7, [r5, #8]
 581 0122 2740     		ands	r7, r7, r4
 582 0124 AF60     		str	r7, [r5, #8]
 327:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 583              		.loc 1 327 0
 584 0126 EF68     		ldr	r7, [r5, #12]
 585 0128 3C40     		ands	r4, r4, r7
 586              	.LVL60:
 587 012a EC60     		str	r4, [r5, #12]
 588              	.LVL61:
 331:HALLIB/Src/stm32f4xx_hal_gpio.c ****       }
 589              		.loc 1 331 0
 590 012c 054F     		ldr	r7, .L55
 591 012e 0CF10204 		add	r4, ip, #2
 592 0132 57F82450 		ldr	r5, [r7, r4, lsl #2]
 593 0136 25EA0606 		bic	r6, r5, r6
 594              	.LVL62:
 595 013a 47F82460 		str	r6, [r7, r4, lsl #2]
 596 013e 6EE7     		b	.L36
 597              	.LVL63:
 598              	.L53:
 349:HALLIB/Src/stm32f4xx_hal_gpio.c ****     }
 350:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 351:HALLIB/Src/stm32f4xx_hal_gpio.c **** }
 599              		.loc 1 351 0
 600 0140 F0BD     		pop	{r4, r5, r6, r7, pc}
 601              	.LVL64:
 602              	.L51:
 603              	.LCFI5:
 604              		.cfi_def_cfa_offset 0
 605              		.cfi_restore 4
 606              		.cfi_restore 5
 607              		.cfi_restore 6
 608              		.cfi_restore 7
 609              		.cfi_restore 14
 610 0142 7047     		bx	lr
 611              	.L56:
 612              		.align	2
 613              	.L55:
 614 0144 00380140 		.word	1073821696
ARM GAS  /tmp/ccwN2N3p.s 			page 19


 615 0148 003C0140 		.word	1073822720
 616 014c 00000240 		.word	1073872896
 617              		.cfi_endproc
 618              	.LFE120:
 620              		.section	.text.HAL_GPIO_ReadPin,"ax",%progbits
 621              		.align	1
 622              		.global	HAL_GPIO_ReadPin
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	HAL_GPIO_ReadPin:
 629              	.LFB121:
 352:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 353:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 354:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @}
 355:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 356:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 357:HALLIB/Src/stm32f4xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions_Group2 IO operation functions 
 358:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *  @brief   GPIO Read and Write
 359:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
 360:HALLIB/Src/stm32f4xx_hal_gpio.c **** @verbatim
 361:HALLIB/Src/stm32f4xx_hal_gpio.c ****  ===============================================================================
 362:HALLIB/Src/stm32f4xx_hal_gpio.c ****                        ##### IO operation functions #####
 363:HALLIB/Src/stm32f4xx_hal_gpio.c ****  ===============================================================================
 364:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 365:HALLIB/Src/stm32f4xx_hal_gpio.c **** @endverbatim
 366:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @{
 367:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 368:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 369:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 370:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  Reads the specified input port pin.
 371:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 372:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 373:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to read.
 374:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *         This parameter can be GPIO_PIN_x where x can be (0..15).
 375:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval The input port pin value.
 376:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 377:HALLIB/Src/stm32f4xx_hal_gpio.c **** GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 378:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
 630              		.loc 1 378 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL65:
 379:HALLIB/Src/stm32f4xx_hal_gpio.c ****   GPIO_PinState bitstatus;
 380:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 381:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Check the parameters */
 382:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 383:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 384:HALLIB/Src/stm32f4xx_hal_gpio.c ****   if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 636              		.loc 1 384 0
 637 0000 0369     		ldr	r3, [r0, #16]
 638 0002 1942     		tst	r1, r3
 639 0004 01D1     		bne	.L60
 385:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
ARM GAS  /tmp/ccwN2N3p.s 			page 20


 386:HALLIB/Src/stm32f4xx_hal_gpio.c ****     bitstatus = GPIO_PIN_SET;
 387:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 388:HALLIB/Src/stm32f4xx_hal_gpio.c ****   else
 389:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 390:HALLIB/Src/stm32f4xx_hal_gpio.c ****     bitstatus = GPIO_PIN_RESET;
 640              		.loc 1 390 0
 641 0006 0020     		movs	r0, #0
 642              	.LVL66:
 391:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 392:HALLIB/Src/stm32f4xx_hal_gpio.c ****   return bitstatus;
 393:HALLIB/Src/stm32f4xx_hal_gpio.c **** }
 643              		.loc 1 393 0
 644 0008 7047     		bx	lr
 645              	.LVL67:
 646              	.L60:
 386:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 647              		.loc 1 386 0
 648 000a 0120     		movs	r0, #1
 649              	.LVL68:
 650 000c 7047     		bx	lr
 651              		.cfi_endproc
 652              	.LFE121:
 654              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 655              		.align	1
 656              		.global	HAL_GPIO_WritePin
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 660              		.fpu fpv4-sp-d16
 662              	HAL_GPIO_WritePin:
 663              	.LFB122:
 394:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 395:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 396:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 397:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
 398:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @note   This function uses GPIOx_BSRR register to allow atomic read/modify
 399:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 400:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *         the read and the modify access.
 401:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *
 402:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 403:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 404:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to be written.
 405:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
 406:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  PinState specifies the value to be written to the selected bit.
 407:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *          This parameter can be one of the GPIO_PinState enum values:
 408:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
 409:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *            @arg GPIO_PIN_SET: to set the port pin
 410:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval None
 411:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 412:HALLIB/Src/stm32f4xx_hal_gpio.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
 413:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
 664              		.loc 1 413 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LVL69:
ARM GAS  /tmp/ccwN2N3p.s 			page 21


 414:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Check the parameters */
 415:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 416:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 417:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 418:HALLIB/Src/stm32f4xx_hal_gpio.c ****   if(PinState != GPIO_PIN_RESET)
 670              		.loc 1 418 0
 671 0000 12B9     		cbnz	r2, .L64
 419:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 420:HALLIB/Src/stm32f4xx_hal_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 421:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 422:HALLIB/Src/stm32f4xx_hal_gpio.c ****   else
 423:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 424:HALLIB/Src/stm32f4xx_hal_gpio.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 672              		.loc 1 424 0
 673 0002 0904     		lsls	r1, r1, #16
 674              	.LVL70:
 675 0004 8161     		str	r1, [r0, #24]
 676 0006 7047     		bx	lr
 677              	.LVL71:
 678              	.L64:
 420:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 679              		.loc 1 420 0
 680 0008 8161     		str	r1, [r0, #24]
 681 000a 7047     		bx	lr
 682              		.cfi_endproc
 683              	.LFE122:
 685              		.section	.text.HAL_GPIO_TogglePin,"ax",%progbits
 686              		.align	1
 687              		.global	HAL_GPIO_TogglePin
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	HAL_GPIO_TogglePin:
 694              	.LFB123:
 425:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 426:HALLIB/Src/stm32f4xx_hal_gpio.c **** }
 427:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 428:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 429:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  Toggles the specified GPIO pins.
 430:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIOx Where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 431:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 432:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Pin Specifies the pins to be toggled.
 433:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval None
 434:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 435:HALLIB/Src/stm32f4xx_hal_gpio.c **** void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 436:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
 695              		.loc 1 436 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700              	.LVL72:
 437:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Check the parameters */
 438:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 439:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 440:HALLIB/Src/stm32f4xx_hal_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
ARM GAS  /tmp/ccwN2N3p.s 			page 22


 701              		.loc 1 440 0
 702 0000 4369     		ldr	r3, [r0, #20]
 703 0002 31EA0303 		bics	r3, r1, r3
 704 0006 01D0     		beq	.L68
 441:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 442:HALLIB/Src/stm32f4xx_hal_gpio.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 443:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 444:HALLIB/Src/stm32f4xx_hal_gpio.c ****   else
 445:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 446:HALLIB/Src/stm32f4xx_hal_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 705              		.loc 1 446 0
 706 0008 8161     		str	r1, [r0, #24]
 707 000a 7047     		bx	lr
 708              	.L68:
 442:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 709              		.loc 1 442 0
 710 000c 0904     		lsls	r1, r1, #16
 711              	.LVL73:
 712 000e 8161     		str	r1, [r0, #24]
 713 0010 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE123:
 717              		.section	.text.HAL_GPIO_LockPin,"ax",%progbits
 718              		.align	1
 719              		.global	HAL_GPIO_LockPin
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 723              		.fpu fpv4-sp-d16
 725              	HAL_GPIO_LockPin:
 726              	.LFB124:
 447:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 448:HALLIB/Src/stm32f4xx_hal_gpio.c **** }
 449:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 450:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 451:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 452:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 453:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 454:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 455:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *         until the next reset.
 456:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F4 family
 457:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to be locked.
 458:HALLIB/Src/stm32f4xx_hal_gpio.c ****   *         This parameter can be any combination of GPIO_PIN_x where x can be (0..15).
 459:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval None
 460:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 461:HALLIB/Src/stm32f4xx_hal_gpio.c **** HAL_StatusTypeDef HAL_GPIO_LockPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 462:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
 727              		.loc 1 462 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 8
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732              	.LVL74:
 733 0000 82B0     		sub	sp, sp, #8
 734              	.LCFI6:
 735              		.cfi_def_cfa_offset 8
 463:HALLIB/Src/stm32f4xx_hal_gpio.c ****   __IO uint32_t tmp = GPIO_LCKR_LCKK;
ARM GAS  /tmp/ccwN2N3p.s 			page 23


 736              		.loc 1 463 0
 737 0002 4FF48033 		mov	r3, #65536
 738 0006 0193     		str	r3, [sp, #4]
 464:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 465:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Check the parameters */
 466:HALLIB/Src/stm32f4xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 467:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 468:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Apply lock key write sequence */
 469:HALLIB/Src/stm32f4xx_hal_gpio.c ****   tmp |= GPIO_Pin;
 739              		.loc 1 469 0
 740 0008 019B     		ldr	r3, [sp, #4]
 741 000a 0B43     		orrs	r3, r3, r1
 742 000c 0193     		str	r3, [sp, #4]
 470:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Set LCKx bit(s): LCKK='1' + LCK[15-0] */
 471:HALLIB/Src/stm32f4xx_hal_gpio.c ****   GPIOx->LCKR = tmp;
 743              		.loc 1 471 0
 744 000e 019B     		ldr	r3, [sp, #4]
 745 0010 C361     		str	r3, [r0, #28]
 472:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Reset LCKx bit(s): LCKK='0' + LCK[15-0] */
 473:HALLIB/Src/stm32f4xx_hal_gpio.c ****   GPIOx->LCKR = GPIO_Pin;
 746              		.loc 1 473 0
 747 0012 C161     		str	r1, [r0, #28]
 474:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Set LCKx bit(s): LCKK='1' + LCK[15-0] */
 475:HALLIB/Src/stm32f4xx_hal_gpio.c ****   GPIOx->LCKR = tmp;
 748              		.loc 1 475 0
 749 0014 019B     		ldr	r3, [sp, #4]
 750 0016 C361     		str	r3, [r0, #28]
 476:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 477:HALLIB/Src/stm32f4xx_hal_gpio.c ****   tmp = GPIOx->LCKR;
 751              		.loc 1 477 0
 752 0018 C369     		ldr	r3, [r0, #28]
 753 001a 0193     		str	r3, [sp, #4]
 478:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 479:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* Read again in order to confirm lock is active */
 480:HALLIB/Src/stm32f4xx_hal_gpio.c ****  if((GPIOx->LCKR & GPIO_LCKR_LCKK) != RESET)
 754              		.loc 1 480 0
 755 001c C369     		ldr	r3, [r0, #28]
 756 001e 13F4803F 		tst	r3, #65536
 757 0022 02D1     		bne	.L73
 481:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 482:HALLIB/Src/stm32f4xx_hal_gpio.c ****     return HAL_OK;
 483:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 484:HALLIB/Src/stm32f4xx_hal_gpio.c ****   else
 485:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 486:HALLIB/Src/stm32f4xx_hal_gpio.c ****     return HAL_ERROR;
 758              		.loc 1 486 0
 759 0024 0120     		movs	r0, #1
 760              	.LVL75:
 761              	.L70:
 487:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 488:HALLIB/Src/stm32f4xx_hal_gpio.c **** }
 762              		.loc 1 488 0
 763 0026 02B0     		add	sp, sp, #8
 764              	.LCFI7:
 765              		.cfi_remember_state
 766              		.cfi_def_cfa_offset 0
 767              		@ sp needed
ARM GAS  /tmp/ccwN2N3p.s 			page 24


 768 0028 7047     		bx	lr
 769              	.LVL76:
 770              	.L73:
 771              	.LCFI8:
 772              		.cfi_restore_state
 482:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 773              		.loc 1 482 0
 774 002a 0020     		movs	r0, #0
 775              	.LVL77:
 776 002c FBE7     		b	.L70
 777              		.cfi_endproc
 778              	.LFE124:
 780              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 781              		.align	1
 782              		.weak	HAL_GPIO_EXTI_Callback
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu fpv4-sp-d16
 788              	HAL_GPIO_EXTI_Callback:
 789              	.LFB126:
 489:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 490:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 491:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  This function handles EXTI interrupt request.
 492:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Pin Specifies the pins connected EXTI line
 493:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval None
 494:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 495:HALLIB/Src/stm32f4xx_hal_gpio.c **** void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
 496:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
 497:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* EXTI line interrupt detected */
 498:HALLIB/Src/stm32f4xx_hal_gpio.c ****   if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 499:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 500:HALLIB/Src/stm32f4xx_hal_gpio.c ****     __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 501:HALLIB/Src/stm32f4xx_hal_gpio.c ****     HAL_GPIO_EXTI_Callback(GPIO_Pin);
 502:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 503:HALLIB/Src/stm32f4xx_hal_gpio.c **** }
 504:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 505:HALLIB/Src/stm32f4xx_hal_gpio.c **** /**
 506:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @brief  EXTI line detection callbacks.
 507:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @param  GPIO_Pin Specifies the pins connected EXTI line
 508:HALLIB/Src/stm32f4xx_hal_gpio.c ****   * @retval None
 509:HALLIB/Src/stm32f4xx_hal_gpio.c ****   */
 510:HALLIB/Src/stm32f4xx_hal_gpio.c **** __weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 511:HALLIB/Src/stm32f4xx_hal_gpio.c **** {
 790              		.loc 1 511 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795              	.LVL78:
 796 0000 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE126:
 800              		.section	.text.HAL_GPIO_EXTI_IRQHandler,"ax",%progbits
 801              		.align	1
 802              		.global	HAL_GPIO_EXTI_IRQHandler
 803              		.syntax unified
ARM GAS  /tmp/ccwN2N3p.s 			page 25


 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	HAL_GPIO_EXTI_IRQHandler:
 809              	.LFB125:
 496:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* EXTI line interrupt detected */
 810              		.loc 1 496 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              	.LVL79:
 496:HALLIB/Src/stm32f4xx_hal_gpio.c ****   /* EXTI line interrupt detected */
 815              		.loc 1 496 0
 816 0000 08B5     		push	{r3, lr}
 817              	.LCFI9:
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 3, -8
 820              		.cfi_offset 14, -4
 498:HALLIB/Src/stm32f4xx_hal_gpio.c ****   {
 821              		.loc 1 498 0
 822 0002 054B     		ldr	r3, .L79
 823 0004 5B69     		ldr	r3, [r3, #20]
 824 0006 0342     		tst	r3, r0
 825 0008 00D1     		bne	.L78
 826              	.LVL80:
 827              	.L75:
 828 000a 08BD     		pop	{r3, pc}
 829              	.LVL81:
 830              	.L78:
 500:HALLIB/Src/stm32f4xx_hal_gpio.c ****     HAL_GPIO_EXTI_Callback(GPIO_Pin);
 831              		.loc 1 500 0
 832 000c 024B     		ldr	r3, .L79
 833 000e 5861     		str	r0, [r3, #20]
 501:HALLIB/Src/stm32f4xx_hal_gpio.c ****   }
 834              		.loc 1 501 0
 835 0010 FFF7FEFF 		bl	HAL_GPIO_EXTI_Callback
 836              	.LVL82:
 503:HALLIB/Src/stm32f4xx_hal_gpio.c **** 
 837              		.loc 1 503 0
 838 0014 F9E7     		b	.L75
 839              	.L80:
 840 0016 00BF     		.align	2
 841              	.L79:
 842 0018 003C0140 		.word	1073822720
 843              		.cfi_endproc
 844              	.LFE125:
 846              		.text
 847              	.Letext0:
 848              		.file 2 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_types.h"
 849              		.file 3 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 850              		.file 4 "CORE/core_cm4.h"
 851              		.file 5 "USER/system_stm32f4xx.h"
 852              		.file 6 "USER/stm32f429xx.h"
 853              		.file 7 "USER/stm32f4xx.h"
 854              		.file 8 "HALLIB/Inc/stm32f4xx_hal_def.h"
 855              		.file 9 "HALLIB/Inc/stm32f4xx_hal_gpio.h"
 856              		.file 10 "HALLIB/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccwN2N3p.s 			page 26


ARM GAS  /tmp/ccwN2N3p.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_gpio.c
     /tmp/ccwN2N3p.s:18     .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/ccwN2N3p.s:25     .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/ccwN2N3p.s:385    .text.HAL_GPIO_Init:00000000000001e0 $d
     /tmp/ccwN2N3p.s:394    .text.HAL_GPIO_DeInit:0000000000000000 $t
     /tmp/ccwN2N3p.s:401    .text.HAL_GPIO_DeInit:0000000000000000 HAL_GPIO_DeInit
     /tmp/ccwN2N3p.s:614    .text.HAL_GPIO_DeInit:0000000000000144 $d
     /tmp/ccwN2N3p.s:621    .text.HAL_GPIO_ReadPin:0000000000000000 $t
     /tmp/ccwN2N3p.s:628    .text.HAL_GPIO_ReadPin:0000000000000000 HAL_GPIO_ReadPin
     /tmp/ccwN2N3p.s:655    .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/ccwN2N3p.s:662    .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/ccwN2N3p.s:686    .text.HAL_GPIO_TogglePin:0000000000000000 $t
     /tmp/ccwN2N3p.s:693    .text.HAL_GPIO_TogglePin:0000000000000000 HAL_GPIO_TogglePin
     /tmp/ccwN2N3p.s:718    .text.HAL_GPIO_LockPin:0000000000000000 $t
     /tmp/ccwN2N3p.s:725    .text.HAL_GPIO_LockPin:0000000000000000 HAL_GPIO_LockPin
     /tmp/ccwN2N3p.s:781    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccwN2N3p.s:788    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccwN2N3p.s:801    .text.HAL_GPIO_EXTI_IRQHandler:0000000000000000 $t
     /tmp/ccwN2N3p.s:808    .text.HAL_GPIO_EXTI_IRQHandler:0000000000000000 HAL_GPIO_EXTI_IRQHandler
     /tmp/ccwN2N3p.s:842    .text.HAL_GPIO_EXTI_IRQHandler:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
