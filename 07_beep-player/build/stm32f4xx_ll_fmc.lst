ARM GAS  /tmp/ccvY9scw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_ll_fmc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FMC_NORSRAM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	FMC_NORSRAM_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FMC_NORSRAM_Init:
  26              	.LFB119:
  27              		.file 1 "HALLIB/Src/stm32f4xx_ll_fmc.c"
   1:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
   2:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @file    stm32f4xx_ll_fmc.c
   4:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief   FMC Low Layer HAL module driver.
   6:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *    
   7:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *          This file provides firmware functions to manage the following 
   8:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *          functionalities of the Flexible Memory Controller (FMC) peripheral memories:
   9:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *           + Initialization/de-initialization functions
  10:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *           + Peripheral Control functions 
  11:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *           + Peripheral State functions
  12:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         
  13:HALLIB/Src/stm32f4xx_ll_fmc.c ****   @verbatim
  14:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
  15:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         ##### FMC peripheral features #####
  16:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
  17:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..] The Flexible memory controller (FMC) includes three memory controllers:
  18:HALLIB/Src/stm32f4xx_ll_fmc.c ****        (+) The NOR/PSRAM memory controller
  19:HALLIB/Src/stm32f4xx_ll_fmc.c ****        (+) The NAND/PC Card memory controller
  20:HALLIB/Src/stm32f4xx_ll_fmc.c ****        (+) The Synchronous DRAM (SDRAM) controller 
  21:HALLIB/Src/stm32f4xx_ll_fmc.c ****        
  22:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..] The FMC functional block makes the interface with synchronous and asynchronous static
  23:HALLIB/Src/stm32f4xx_ll_fmc.c ****        memories, SDRAM memories, and 16-bit PC memory cards. Its main purposes are:
  24:HALLIB/Src/stm32f4xx_ll_fmc.c ****        (+) to translate AHB transactions into the appropriate external device protocol
  25:HALLIB/Src/stm32f4xx_ll_fmc.c ****        (+) to meet the access time requirements of the external memory devices
  26:HALLIB/Src/stm32f4xx_ll_fmc.c ****    
  27:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..] All external memories share the addresses, data and control signals with the controller.
  28:HALLIB/Src/stm32f4xx_ll_fmc.c ****        Each external device is accessed by means of a unique Chip Select. The FMC performs
  29:HALLIB/Src/stm32f4xx_ll_fmc.c ****        only one access at a time to an external device.
  30:HALLIB/Src/stm32f4xx_ll_fmc.c ****        The main features of the FMC controller are the following:
  31:HALLIB/Src/stm32f4xx_ll_fmc.c ****         (+) Interface with static-memory mapped devices including:
ARM GAS  /tmp/ccvY9scw.s 			page 2


  32:HALLIB/Src/stm32f4xx_ll_fmc.c ****            (++) Static random access memory (SRAM)
  33:HALLIB/Src/stm32f4xx_ll_fmc.c ****            (++) Read-only memory (ROM)
  34:HALLIB/Src/stm32f4xx_ll_fmc.c ****            (++) NOR Flash memory/OneNAND Flash memory
  35:HALLIB/Src/stm32f4xx_ll_fmc.c ****            (++) PSRAM (4 memory banks)
  36:HALLIB/Src/stm32f4xx_ll_fmc.c ****            (++) 16-bit PC Card compatible devices
  37:HALLIB/Src/stm32f4xx_ll_fmc.c ****            (++) Two banks of NAND Flash memory with ECC hardware to check up to 8 Kbytes of
  38:HALLIB/Src/stm32f4xx_ll_fmc.c ****                 data
  39:HALLIB/Src/stm32f4xx_ll_fmc.c ****         (+) Interface with synchronous DRAM (SDRAM) memories
  40:HALLIB/Src/stm32f4xx_ll_fmc.c ****         (+) Independent Chip Select control for each memory bank
  41:HALLIB/Src/stm32f4xx_ll_fmc.c ****         (+) Independent configuration for each memory bank
  42:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     
  43:HALLIB/Src/stm32f4xx_ll_fmc.c ****   @endverbatim
  44:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ******************************************************************************
  45:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @attention
  46:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
  47:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  48:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * All rights reserved.</center></h2>
  49:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
  50:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  51:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * the "License"; You may not use this file except in compliance with the
  52:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * License. You may obtain a copy of the License at:
  53:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  54:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
  55:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ******************************************************************************
  56:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */ 
  57:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
  58:HALLIB/Src/stm32f4xx_ll_fmc.c **** /* Includes ------------------------------------------------------------------*/
  59:HALLIB/Src/stm32f4xx_ll_fmc.c **** #include "stm32f4xx_hal.h"
  60:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
  61:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  62:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
  63:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
  64:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
  65:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @defgroup FMC_LL  FMC Low Layer
  66:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief FMC driver modules
  67:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
  68:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
  69:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
  70:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined (HAL_SRAM_MODULE_ENABLED) || defined(HAL_NOR_MODULE_ENABLED) || defined(HAL_NAND_MODULE
  71:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
  72:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
  73:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
  74:HALLIB/Src/stm32f4xx_ll_fmc.c **** /* Private typedef -----------------------------------------------------------*/
  75:HALLIB/Src/stm32f4xx_ll_fmc.c **** /* Private define ------------------------------------------------------------*/
  76:HALLIB/Src/stm32f4xx_ll_fmc.c **** /* Private macro -------------------------------------------------------------*/
  77:HALLIB/Src/stm32f4xx_ll_fmc.c **** /* Private variables ---------------------------------------------------------*/
  78:HALLIB/Src/stm32f4xx_ll_fmc.c **** /* Private function prototypes -----------------------------------------------*/
  79:HALLIB/Src/stm32f4xx_ll_fmc.c **** /* Private functions ---------------------------------------------------------*/
  80:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_Private_Functions
  81:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
  82:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
  83:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
  84:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_NORSRAM
  85:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  NORSRAM Controller functions 
  86:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
  87:HALLIB/Src/stm32f4xx_ll_fmc.c ****   @verbatim 
  88:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================   
ARM GAS  /tmp/ccvY9scw.s 			page 3


  89:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ##### How to use NORSRAM device driver #####
  90:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
  91:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
  92:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..] 
  93:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This driver contains a set of APIs to interface with the FMC NORSRAM banks in order
  94:HALLIB/Src/stm32f4xx_ll_fmc.c ****     to run the NORSRAM external devices.
  95:HALLIB/Src/stm32f4xx_ll_fmc.c ****       
  96:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NORSRAM bank reset using the function FMC_NORSRAM_DeInit() 
  97:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NORSRAM bank control configuration using the function FMC_NORSRAM_Init()
  98:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NORSRAM bank timing configuration using the function FMC_NORSRAM_Timing_Init()
  99:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NORSRAM bank extended timing configuration using the function 
 100:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_NORSRAM_Extended_Timing_Init()
 101:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NORSRAM bank enable/disable write operation using the functions
 102:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_NORSRAM_WriteOperation_Enable()/FMC_NORSRAM_WriteOperation_Disable()
 103:HALLIB/Src/stm32f4xx_ll_fmc.c ****         
 104:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 105:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 106:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 107:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 108:HALLIB/Src/stm32f4xx_ll_fmc.c ****        
 109:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_NORSRAM_Private_Functions_Group1
 110:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief    Initialization and Configuration functions 
 111:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
 112:HALLIB/Src/stm32f4xx_ll_fmc.c ****   @verbatim    
 113:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 114:HALLIB/Src/stm32f4xx_ll_fmc.c ****               ##### Initialization and de_initialization functions #####
 115:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 116:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]  
 117:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This section provides functions allowing to:
 118:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Initialize and configure the FMC NORSRAM interface
 119:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) De-initialize the FMC NORSRAM interface 
 120:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Configure the FMC clock and associated GPIOs    
 121:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
 122:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 123:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 124:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 125:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 126:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 127:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initialize the FMC_NORSRAM device according to the specified
 128:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         control parameters in the FMC_NORSRAM_InitTypeDef
 129:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NORSRAM device instance
 130:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Init Pointer to NORSRAM Initialization structure   
 131:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 132:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 133:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef  FMC_NORSRAM_Init(FMC_NORSRAM_TypeDef *Device, FMC_NORSRAM_InitTypeDef* Init)
 134:HALLIB/Src/stm32f4xx_ll_fmc.c **** { 
  28              		.loc 1 134 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 70B4     		push	{r4, r5, r6}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
ARM GAS  /tmp/ccvY9scw.s 			page 4


  39              		.cfi_offset 6, -4
  40              	.LVL1:
 135:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;
 136:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 137:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 138:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_DEVICE(Device));
 139:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_BANK(Init->NSBank));
 140:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_MUX(Init->DataAddressMux));
 141:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_MEMORY(Init->MemoryType));
 142:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_MEMORY_WIDTH(Init->MemoryDataWidth));
 143:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_BURSTMODE(Init->BurstAccessMode));
 144:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_POLARITY(Init->WaitSignalPolarity));
 145:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)
 146:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WRAP_MODE(Init->WrapMode));
 147:HALLIB/Src/stm32f4xx_ll_fmc.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx */
 148:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_SIGNAL_ACTIVE(Init->WaitSignalActive));
 149:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WRITE_OPERATION(Init->WriteOperation));
 150:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAITE_SIGNAL(Init->WaitSignal));
 151:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_EXTENDED_MODE(Init->ExtendedMode));
 152:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ASYNWAIT(Init->AsynchronousWait));
 153:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WRITE_BURST(Init->WriteBurst));
 154:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_CONTINOUS_CLOCK(Init->ContinuousClock));
 155:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_PAGESIZE(Init->PageSize));
 156:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined (STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 157:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WRITE_FIFO(Init->WriteFifo));
 158:HALLIB/Src/stm32f4xx_ll_fmc.c **** #endif /* STM32F446xx || STM32F469xx || STM32F479xx */
 159:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 160:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get the BTCR register value */
 161:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->BTCR[Init->NSBank];
  41              		.loc 1 161 0
  42 0002 0C68     		ldr	r4, [r1]
  43 0004 50F82430 		ldr	r3, [r0, r4, lsl #2]
  44              	.LVL2:
 162:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 163:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)
 164:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, WRAPMOD, WAITCFG, WREN,
 165:HALLIB/Src/stm32f4xx_ll_fmc.c ****            WAITEN, EXTMOD, ASYNCWAIT, CPSIZE, CBURSTRW and CCLKEN bits */
 166:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_BCR1_MBKEN     | FMC_BCR1_MUXEN    | FMC_BCR1_MTYP     | \
  45              		.loc 1 166 0
  46 0008 194A     		ldr	r2, .L7
  47 000a 1A40     		ands	r2, r2, r3
  48              	.LVL3:
 167:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_MWID      | FMC_BCR1_FACCEN   | FMC_BCR1_BURSTEN  | \
 168:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_WAITPOL   | FMC_BCR1_WRAPMOD  | FMC_BCR1_WAITCFG  | \
 169:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_WREN      | FMC_BCR1_WAITEN   | FMC_BCR1_EXTMOD   | \
 170:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_ASYNCWAIT | FMC_BCR1_CPSIZE   | FMC_BCR1_CBURSTRW | \
 171:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_CCLKEN));
 172:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 173:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set NORSRAM device control parameters */
 174:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Init->DataAddressMux       |\
  49              		.loc 1 174 0
  50 000c 4B68     		ldr	r3, [r1, #4]
 175:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryType           |\
  51              		.loc 1 175 0
  52 000e 8D68     		ldr	r5, [r1, #8]
 174:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryType           |\
  53              		.loc 1 174 0
ARM GAS  /tmp/ccvY9scw.s 			page 5


  54 0010 2B43     		orrs	r3, r3, r5
 176:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryDataWidth      |\
  55              		.loc 1 176 0
  56 0012 CE68     		ldr	r6, [r1, #12]
 175:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryType           |\
  57              		.loc 1 175 0
  58 0014 3343     		orrs	r3, r3, r6
 177:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->BurstAccessMode      |\
  59              		.loc 1 177 0
  60 0016 0E69     		ldr	r6, [r1, #16]
 176:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryDataWidth      |\
  61              		.loc 1 176 0
  62 0018 3343     		orrs	r3, r3, r6
 178:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignalPolarity   |\
  63              		.loc 1 178 0
  64 001a 4E69     		ldr	r6, [r1, #20]
 177:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->BurstAccessMode      |\
  65              		.loc 1 177 0
  66 001c 3343     		orrs	r3, r3, r6
 179:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WrapMode             |\
  67              		.loc 1 179 0
  68 001e 8E69     		ldr	r6, [r1, #24]
 178:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignalPolarity   |\
  69              		.loc 1 178 0
  70 0020 3343     		orrs	r3, r3, r6
 180:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignalActive     |\
  71              		.loc 1 180 0
  72 0022 CE69     		ldr	r6, [r1, #28]
 179:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WrapMode             |\
  73              		.loc 1 179 0
  74 0024 3343     		orrs	r3, r3, r6
 181:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WriteOperation       |\
  75              		.loc 1 181 0
  76 0026 0E6A     		ldr	r6, [r1, #32]
 180:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignalActive     |\
  77              		.loc 1 180 0
  78 0028 3343     		orrs	r3, r3, r6
 182:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignal           |\
  79              		.loc 1 182 0
  80 002a 4E6A     		ldr	r6, [r1, #36]
 181:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WriteOperation       |\
  81              		.loc 1 181 0
  82 002c 3343     		orrs	r3, r3, r6
 183:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->ExtendedMode         |\
  83              		.loc 1 183 0
  84 002e 8E6A     		ldr	r6, [r1, #40]
 182:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignal           |\
  85              		.loc 1 182 0
  86 0030 3343     		orrs	r3, r3, r6
 184:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->AsynchronousWait     |\
  87              		.loc 1 184 0
  88 0032 CE6A     		ldr	r6, [r1, #44]
 183:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->ExtendedMode         |\
  89              		.loc 1 183 0
  90 0034 3343     		orrs	r3, r3, r6
 185:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->PageSize             |\
  91              		.loc 1 185 0
ARM GAS  /tmp/ccvY9scw.s 			page 6


  92 0036 CE6B     		ldr	r6, [r1, #60]
 184:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->AsynchronousWait     |\
  93              		.loc 1 184 0
  94 0038 3343     		orrs	r3, r3, r6
 186:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WriteBurst           |\
  95              		.loc 1 186 0
  96 003a 0E6B     		ldr	r6, [r1, #48]
 185:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->PageSize             |\
  97              		.loc 1 185 0
  98 003c 3343     		orrs	r3, r3, r6
 187:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->ContinuousClock);
  99              		.loc 1 187 0
 100 003e 4E6B     		ldr	r6, [r1, #52]
 186:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WriteBurst           |\
 101              		.loc 1 186 0
 102 0040 3343     		orrs	r3, r3, r6
 174:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryType           |\
 103              		.loc 1 174 0
 104 0042 1343     		orrs	r3, r3, r2
 105              	.LVL4:
 188:HALLIB/Src/stm32f4xx_ll_fmc.c **** #else /* defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx) */
 189:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, CPSIZE, WAITCFG, WREN,
 190:HALLIB/Src/stm32f4xx_ll_fmc.c ****            WAITEN, EXTMOD, ASYNCWAIT, CBURSTRW, CCLKEN and WFDIS bits */
 191:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_BCR1_MBKEN     | FMC_BCR1_MUXEN    | FMC_BCR1_MTYP     | \
 192:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_MWID      | FMC_BCR1_FACCEN   | FMC_BCR1_BURSTEN  | \
 193:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_WAITPOL   | FMC_BCR1_WAITCFG  | FMC_BCR1_CPSIZE   | \
 194:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_WREN      | FMC_BCR1_WAITEN   | FMC_BCR1_EXTMOD   | \
 195:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_ASYNCWAIT | FMC_BCR1_CBURSTRW | FMC_BCR1_CCLKEN   | \
 196:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BCR1_WFDIS));
 197:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 198:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set NORSRAM device control parameters */
 199:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Init->DataAddressMux       |\
 200:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryType           |\
 201:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->MemoryDataWidth      |\
 202:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->BurstAccessMode      |\
 203:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignalPolarity   |\
 204:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignalActive     |\
 205:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WriteOperation       |\
 206:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WaitSignal           |\
 207:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->ExtendedMode         |\
 208:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->AsynchronousWait     |\
 209:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WriteBurst           |\
 210:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->ContinuousClock      |\
 211:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->PageSize             |\
 212:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     Init->WriteFifo);
 213:HALLIB/Src/stm32f4xx_ll_fmc.c **** #endif /*  defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F43
 214:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     
 215:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Init->MemoryType == FMC_MEMORY_TYPE_NOR)
 106              		.loc 1 215 0
 107 0044 082D     		cmp	r5, #8
 108 0046 08D0     		beq	.L5
 109              	.L2:
 216:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 217:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr |= (uint32_t)FMC_NORSRAM_FLASH_ACCESS_ENABLE;
 218:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 219:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 220:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->BTCR[Init->NSBank] = tmpr;
ARM GAS  /tmp/ccvY9scw.s 			page 7


 110              		.loc 1 220 0
 111 0048 40F82430 		str	r3, [r0, r4, lsl #2]
 221:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 222:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Configure synchronous mode when Continuous clock is enabled for bank2..4 */
 223:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if((Init->ContinuousClock == FMC_CONTINUOUS_CLOCK_SYNC_ASYNC) && (Init->NSBank != FMC_NORSRAM_BAN
 112              		.loc 1 223 0
 113 004c 4B6B     		ldr	r3, [r1, #52]
 114              	.LVL5:
 115 004e B3F5801F 		cmp	r3, #1048576
 116 0052 05D0     		beq	.L6
 117              	.LVL6:
 118              	.L3:
 224:HALLIB/Src/stm32f4xx_ll_fmc.c ****   { 
 225:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->BTCR[FMC_NORSRAM_BANK1] |= (uint32_t)(Init->ContinuousClock);
 226:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 227:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 228:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 229:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Init->NSBank != FMC_NORSRAM_BANK1)
 230:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 231:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->BTCR[FMC_NORSRAM_BANK1] |= (uint32_t)(Init->WriteFifo);              
 232:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 233:HALLIB/Src/stm32f4xx_ll_fmc.c **** #endif /* STM32F446xx || STM32F469xx || STM32F479xx */
 234:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 235:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 236:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 119              		.loc 1 236 0
 120 0054 0020     		movs	r0, #0
 121              	.LVL7:
 122 0056 70BC     		pop	{r4, r5, r6}
 123              	.LCFI1:
 124              		.cfi_remember_state
 125              		.cfi_restore 6
 126              		.cfi_restore 5
 127              		.cfi_restore 4
 128              		.cfi_def_cfa_offset 0
 129 0058 7047     		bx	lr
 130              	.LVL8:
 131              	.L5:
 132              	.LCFI2:
 133              		.cfi_restore_state
 217:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 134              		.loc 1 217 0
 135 005a 43F04003 		orr	r3, r3, #64
 136              	.LVL9:
 137 005e F3E7     		b	.L2
 138              	.LVL10:
 139              	.L6:
 223:HALLIB/Src/stm32f4xx_ll_fmc.c ****   { 
 140              		.loc 1 223 0 discriminator 1
 141 0060 0A68     		ldr	r2, [r1]
 142 0062 002A     		cmp	r2, #0
 143 0064 F6D0     		beq	.L3
 225:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 144              		.loc 1 225 0
 145 0066 0268     		ldr	r2, [r0]
 146 0068 1343     		orrs	r3, r3, r2
 147 006a 0360     		str	r3, [r0]
ARM GAS  /tmp/ccvY9scw.s 			page 8


 148              	.LVL11:
 149 006c F2E7     		b	.L3
 150              	.L8:
 151 006e 00BF     		.align	2
 152              	.L7:
 153 0070 8000E0FF 		.word	-2097024
 154              		.cfi_endproc
 155              	.LFE119:
 157              		.section	.text.FMC_NORSRAM_DeInit,"ax",%progbits
 158              		.align	1
 159              		.global	FMC_NORSRAM_DeInit
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	FMC_NORSRAM_DeInit:
 166              	.LFB120:
 237:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 238:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 239:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  DeInitialize the FMC_NORSRAM peripheral 
 240:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NORSRAM device instance
 241:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  ExDevice Pointer to NORSRAM extended mode device instance  
 242:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NORSRAM bank number  
 243:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 244:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 245:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NORSRAM_DeInit(FMC_NORSRAM_TypeDef *Device, FMC_NORSRAM_EXTENDED_TypeDef *ExD
 246:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 167              		.loc 1 246 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL12:
 173 0000 10B4     		push	{r4}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 4, -4
 247:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 248:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_DEVICE(Device));
 249:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_EXTENDED_DEVICE(ExDevice));
 250:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_BANK(Bank));
 251:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 252:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable the FMC_NORSRAM device */
 253:HALLIB/Src/stm32f4xx_ll_fmc.c ****   __FMC_NORSRAM_DISABLE(Device, Bank);
 177              		.loc 1 253 0
 178 0002 50F82230 		ldr	r3, [r0, r2, lsl #2]
 179 0006 23F00103 		bic	r3, r3, #1
 180 000a 40F82230 		str	r3, [r0, r2, lsl #2]
 254:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 255:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* De-initialize the FMC_NORSRAM device */
 256:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* FMC_NORSRAM_BANK1 */
 257:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NORSRAM_BANK1)
 181              		.loc 1 257 0
 182 000e 72B1     		cbz	r2, .L13
 258:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 259:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->BTCR[Bank] = 0x000030DBU;
 260:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
ARM GAS  /tmp/ccvY9scw.s 			page 9


 261:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* FMC_NORSRAM_BANK2, FMC_NORSRAM_BANK3 or FMC_NORSRAM_BANK4 */
 262:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 263:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {   
 264:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->BTCR[Bank] = 0x000030D2U;
 183              		.loc 1 264 0
 184 0010 43F2D203 		movw	r3, #12498
 185 0014 40F82230 		str	r3, [r0, r2, lsl #2]
 186              	.L11:
 265:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 266:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 267:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->BTCR[Bank + 1U] = 0x0FFFFFFFU;
 187              		.loc 1 267 0
 188 0018 541C     		adds	r4, r2, #1
 189 001a 6FF07043 		mvn	r3, #-268435456
 190 001e 40F82430 		str	r3, [r0, r4, lsl #2]
 268:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ExDevice->BWTR[Bank]    = 0x0FFFFFFFU;
 191              		.loc 1 268 0
 192 0022 41F82230 		str	r3, [r1, r2, lsl #2]
 269:HALLIB/Src/stm32f4xx_ll_fmc.c ****    
 270:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 271:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 193              		.loc 1 271 0
 194 0026 0020     		movs	r0, #0
 195              	.LVL13:
 196 0028 5DF8044B 		ldr	r4, [sp], #4
 197              	.LCFI4:
 198              		.cfi_remember_state
 199              		.cfi_restore 4
 200              		.cfi_def_cfa_offset 0
 201 002c 7047     		bx	lr
 202              	.LVL14:
 203              	.L13:
 204              	.LCFI5:
 205              		.cfi_restore_state
 259:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 206              		.loc 1 259 0
 207 002e 43F2DB03 		movw	r3, #12507
 208 0032 40F82230 		str	r3, [r0, r2, lsl #2]
 209 0036 EFE7     		b	.L11
 210              		.cfi_endproc
 211              	.LFE120:
 213              		.section	.text.FMC_NORSRAM_Timing_Init,"ax",%progbits
 214              		.align	1
 215              		.global	FMC_NORSRAM_Timing_Init
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv4-sp-d16
 221              	FMC_NORSRAM_Timing_Init:
 222              	.LFB121:
 272:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 273:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 274:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initialize the FMC_NORSRAM Timing according to the specified
 275:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NORSRAM_TimingTypeDef
 276:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NORSRAM device instance
 277:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to NORSRAM Timing structure
 278:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NORSRAM bank number  
ARM GAS  /tmp/ccvY9scw.s 			page 10


 279:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 280:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 281:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NORSRAM_Timing_Init(FMC_NORSRAM_TypeDef *Device, FMC_NORSRAM_TimingTypeDef *T
 282:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 223              		.loc 1 282 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL15:
 229 0000 30B4     		push	{r4, r5}
 230              	.LCFI6:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 5, -4
 234              	.LVL16:
 283:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;
 284:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 285:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 286:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_DEVICE(Device));
 287:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 288:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ADDRESS_HOLD_TIME(Timing->AddressHoldTime));
 289:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_DATASETUP_TIME(Timing->DataSetupTime));
 290:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
 291:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_CLK_DIV(Timing->CLKDivision));
 292:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_DATA_LATENCY(Timing->DataLatency));
 293:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ACCESS_MODE(Timing->AccessMode));
 294:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_BANK(Bank));
 295:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 296:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get the BTCR register value */
 297:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->BTCR[Bank + 1U];
 235              		.loc 1 297 0
 236 0002 0132     		adds	r2, r2, #1
 237              	.LVL17:
 238 0004 50F82240 		ldr	r4, [r0, r2, lsl #2]
 239              	.LVL18:
 298:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 299:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
 300:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_BTR1_ADDSET  | FMC_BTR1_ADDHLD | FMC_BTR1_DATAST | \
 240              		.loc 1 300 0
 241 0008 04F04044 		and	r4, r4, #-1073741824
 242              	.LVL19:
 301:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BTR1_BUSTURN | FMC_BTR1_CLKDIV | FMC_BTR1_DATLAT | \
 302:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_BTR1_ACCMOD));
 303:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 304:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set FMC_NORSRAM device timing parameters */  
 305:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->AddressSetupTime                   |\
 243              		.loc 1 305 0
 244 000c 0B68     		ldr	r3, [r1]
 306:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->AddressHoldTime) << 4U)           |\
 245              		.loc 1 306 0
 246 000e 4D68     		ldr	r5, [r1, #4]
 305:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->AddressHoldTime) << 4U)           |\
 247              		.loc 1 305 0
 248 0010 43EA0513 		orr	r3, r3, r5, lsl #4
 307:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->DataSetupTime) << 8U)             |\
 249              		.loc 1 307 0
ARM GAS  /tmp/ccvY9scw.s 			page 11


 250 0014 8D68     		ldr	r5, [r1, #8]
 306:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->AddressHoldTime) << 4U)           |\
 251              		.loc 1 306 0
 252 0016 43EA0523 		orr	r3, r3, r5, lsl #8
 308:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->BusTurnAroundDuration) << 16U)    |\
 253              		.loc 1 308 0
 254 001a CD68     		ldr	r5, [r1, #12]
 307:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->DataSetupTime) << 8U)             |\
 255              		.loc 1 307 0
 256 001c 43EA0543 		orr	r3, r3, r5, lsl #16
 309:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (((Timing->CLKDivision) - 1U) << 20U)         |\
 257              		.loc 1 309 0
 258 0020 0D69     		ldr	r5, [r1, #16]
 259 0022 013D     		subs	r5, r5, #1
 308:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->BusTurnAroundDuration) << 16U)    |\
 260              		.loc 1 308 0
 261 0024 43EA0553 		orr	r3, r3, r5, lsl #20
 310:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (((Timing->DataLatency) - 2U) << 24U)         |\
 262              		.loc 1 310 0
 263 0028 4D69     		ldr	r5, [r1, #20]
 264 002a 023D     		subs	r5, r5, #2
 309:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (((Timing->CLKDivision) - 1U) << 20U)         |\
 265              		.loc 1 309 0
 266 002c 43EA0563 		orr	r3, r3, r5, lsl #24
 311:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (Timing->AccessMode));
 267              		.loc 1 311 0
 268 0030 8D69     		ldr	r5, [r1, #24]
 305:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->AddressHoldTime) << 4U)           |\
 269              		.loc 1 305 0
 270 0032 2B43     		orrs	r3, r3, r5
 271 0034 2343     		orrs	r3, r3, r4
 272              	.LVL20:
 312:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 313:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->BTCR[Bank + 1U] = tmpr;
 273              		.loc 1 313 0
 274 0036 40F82230 		str	r3, [r0, r2, lsl #2]
 314:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 315:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Configure Clock division value (in NORSRAM bank 1) when continuous clock is enabled */
 316:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(HAL_IS_BIT_SET(Device->BTCR[FMC_NORSRAM_BANK1], FMC_BCR1_CCLKEN))
 275              		.loc 1 316 0
 276 003a 0368     		ldr	r3, [r0]
 277              	.LVL21:
 278 003c 13F4801F 		tst	r3, #1048576
 279 0040 07D0     		beq	.L15
 317:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 318:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = (uint32_t)(Device->BTCR[FMC_NORSRAM_BANK1 + 1U] & ~(0x0FU << 20U)); 
 280              		.loc 1 318 0
 281 0042 4368     		ldr	r3, [r0, #4]
 282 0044 23F47003 		bic	r3, r3, #15728640
 283              	.LVL22:
 319:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr |= (uint32_t)(((Timing->CLKDivision) - 1U) << 20U);
 284              		.loc 1 319 0
 285 0048 0A69     		ldr	r2, [r1, #16]
 286              	.LVL23:
 287 004a 013A     		subs	r2, r2, #1
 288 004c 43EA0253 		orr	r3, r3, r2, lsl #20
 289              	.LVL24:
ARM GAS  /tmp/ccvY9scw.s 			page 12


 320:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->BTCR[FMC_NORSRAM_BANK1 + 1U] = tmpr;
 290              		.loc 1 320 0
 291 0050 4360     		str	r3, [r0, #4]
 292              	.LVL25:
 293              	.L15:
 321:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }  
 322:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 323:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;   
 324:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 294              		.loc 1 324 0
 295 0052 0020     		movs	r0, #0
 296              	.LVL26:
 297 0054 30BC     		pop	{r4, r5}
 298              	.LCFI7:
 299              		.cfi_restore 5
 300              		.cfi_restore 4
 301              		.cfi_def_cfa_offset 0
 302 0056 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE121:
 306              		.section	.text.FMC_NORSRAM_Extended_Timing_Init,"ax",%progbits
 307              		.align	1
 308              		.global	FMC_NORSRAM_Extended_Timing_Init
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	FMC_NORSRAM_Extended_Timing_Init:
 315              	.LFB122:
 325:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 326:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 327:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initialize the FMC_NORSRAM Extended mode Timing according to the specified
 328:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NORSRAM_TimingTypeDef
 329:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NORSRAM device instance
 330:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to NORSRAM Timing structure
 331:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NORSRAM bank number  
 332:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 333:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 334:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef  FMC_NORSRAM_Extended_Timing_Init(FMC_NORSRAM_EXTENDED_TypeDef *Device, FMC_NORSR
 335:HALLIB/Src/stm32f4xx_ll_fmc.c **** {  
 316              		.loc 1 335 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321              	.LVL27:
 336:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;
 337:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
 338:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 339:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_EXTENDED_MODE(ExtendedMode));
 340:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 341:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set NORSRAM device timing register for write configuration, if extended mode is used */
 342:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(ExtendedMode == FMC_EXTENDED_MODE_ENABLE)
 322              		.loc 1 342 0
 323 0000 B3F5804F 		cmp	r3, #16384
 324 0004 05D0     		beq	.L24
 343:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
ARM GAS  /tmp/ccvY9scw.s 			page 13


 344:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Check the parameters */
 345:HALLIB/Src/stm32f4xx_ll_fmc.c ****     assert_param(IS_FMC_NORSRAM_EXTENDED_DEVICE(Device));  
 346:HALLIB/Src/stm32f4xx_ll_fmc.c ****     assert_param(IS_FMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 347:HALLIB/Src/stm32f4xx_ll_fmc.c ****     assert_param(IS_FMC_ADDRESS_HOLD_TIME(Timing->AddressHoldTime));
 348:HALLIB/Src/stm32f4xx_ll_fmc.c ****     assert_param(IS_FMC_DATASETUP_TIME(Timing->DataSetupTime));
 349:HALLIB/Src/stm32f4xx_ll_fmc.c ****     assert_param(IS_FMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
 350:HALLIB/Src/stm32f4xx_ll_fmc.c ****     assert_param(IS_FMC_ACCESS_MODE(Timing->AccessMode));
 351:HALLIB/Src/stm32f4xx_ll_fmc.c ****     assert_param(IS_FMC_NORSRAM_BANK(Bank));  
 352:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 353:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the BWTR register value */
 354:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = Device->BWTR[Bank];
 355:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 356:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Clear ADDSET, ADDHLD, DATAST, BUSTURN and ACCMOD bits */
 357:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr &= ((uint32_t)~(FMC_BWTR1_ADDSET  | FMC_BWTR1_ADDHLD | FMC_BWTR1_DATAST | \
 358:HALLIB/Src/stm32f4xx_ll_fmc.c ****                          FMC_BWTR1_BUSTURN | FMC_BWTR1_ACCMOD));
 359:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 360:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 361:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->AddressHoldTime) << 4U)          |\
 362:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->DataSetupTime) << 8U)            |\
 363:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->BusTurnAroundDuration) << 16U)   |\
 364:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       (Timing->AccessMode));
 365:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 366:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->BWTR[Bank] = tmpr;
 367:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 368:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 369:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 370:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->BWTR[Bank] = 0x0FFFFFFFU;
 325              		.loc 1 370 0
 326 0006 6FF07043 		mvn	r3, #-268435456
 327              	.LVL28:
 328 000a 40F82230 		str	r3, [r0, r2, lsl #2]
 371:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }   
 372:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 373:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 374:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 329              		.loc 1 374 0
 330 000e 0020     		movs	r0, #0
 331              	.LVL29:
 332 0010 7047     		bx	lr
 333              	.LVL30:
 334              	.L24:
 335:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;
 335              		.loc 1 335 0
 336 0012 30B4     		push	{r4, r5}
 337              	.LCFI8:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 5, -4
 354:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 341              		.loc 1 354 0
 342 0014 50F82230 		ldr	r3, [r0, r2, lsl #2]
 343              	.LVL31:
 357:HALLIB/Src/stm32f4xx_ll_fmc.c ****                          FMC_BWTR1_BUSTURN | FMC_BWTR1_ACCMOD));
 344              		.loc 1 357 0
 345 0018 094C     		ldr	r4, .L25
 346 001a 1C40     		ands	r4, r4, r3
 347              	.LVL32:
ARM GAS  /tmp/ccvY9scw.s 			page 14


 360:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->AddressHoldTime) << 4U)          |\
 348              		.loc 1 360 0
 349 001c 0B68     		ldr	r3, [r1]
 361:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->DataSetupTime) << 8U)            |\
 350              		.loc 1 361 0
 351 001e 4D68     		ldr	r5, [r1, #4]
 360:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->AddressHoldTime) << 4U)          |\
 352              		.loc 1 360 0
 353 0020 43EA0513 		orr	r3, r3, r5, lsl #4
 362:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->BusTurnAroundDuration) << 16U)   |\
 354              		.loc 1 362 0
 355 0024 8D68     		ldr	r5, [r1, #8]
 361:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->DataSetupTime) << 8U)            |\
 356              		.loc 1 361 0
 357 0026 43EA0523 		orr	r3, r3, r5, lsl #8
 363:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       (Timing->AccessMode));
 358              		.loc 1 363 0
 359 002a CD68     		ldr	r5, [r1, #12]
 362:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->BusTurnAroundDuration) << 16U)   |\
 360              		.loc 1 362 0
 361 002c 43EA0543 		orr	r3, r3, r5, lsl #16
 364:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 362              		.loc 1 364 0
 363 0030 8969     		ldr	r1, [r1, #24]
 364              	.LVL33:
 363:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       (Timing->AccessMode));
 365              		.loc 1 363 0
 366 0032 0B43     		orrs	r3, r3, r1
 360:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ((Timing->AddressHoldTime) << 4U)          |\
 367              		.loc 1 360 0
 368 0034 2343     		orrs	r3, r3, r4
 369              	.LVL34:
 366:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 370              		.loc 1 366 0
 371 0036 40F82230 		str	r3, [r0, r2, lsl #2]
 372              		.loc 1 374 0
 373 003a 0020     		movs	r0, #0
 374              	.LVL35:
 375 003c 30BC     		pop	{r4, r5}
 376              	.LCFI9:
 377              		.cfi_restore 5
 378              		.cfi_restore 4
 379              		.cfi_def_cfa_offset 0
 380 003e 7047     		bx	lr
 381              	.L26:
 382              		.align	2
 383              	.L25:
 384 0040 0000F0CF 		.word	-806354944
 385              		.cfi_endproc
 386              	.LFE122:
 388              		.section	.text.FMC_NORSRAM_WriteOperation_Enable,"ax",%progbits
 389              		.align	1
 390              		.global	FMC_NORSRAM_WriteOperation_Enable
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvY9scw.s 			page 15


 396              	FMC_NORSRAM_WriteOperation_Enable:
 397              	.LFB123:
 375:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 376:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
 377:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 378:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 379:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_NORSRAM_Private_Functions_Group2
 380:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *  @brief   management functions 
 381:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *
 382:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim   
 383:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 384:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ##### FMC_NORSRAM Control functions #####
 385:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================  
 386:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]
 387:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This subsection provides a set of functions allowing to control dynamically
 388:HALLIB/Src/stm32f4xx_ll_fmc.c ****     the FMC NORSRAM interface.
 389:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 390:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 391:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 392:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 393:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 394:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Enables dynamically FMC_NORSRAM write operation.
 395:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NORSRAM device instance
 396:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NORSRAM bank number   
 397:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 398:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 399:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NORSRAM_WriteOperation_Enable(FMC_NORSRAM_TypeDef *Device, uint32_t Bank)
 400:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 398              		.loc 1 400 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403              	.LVL36:
 401:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 402:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_DEVICE(Device));
 403:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_BANK(Bank));
 404:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 405:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Enable write operation */
 406:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->BTCR[Bank] |= FMC_WRITE_OPERATION_ENABLE; 
 404              		.loc 1 406 0
 405 0000 50F82130 		ldr	r3, [r0, r1, lsl #2]
 406 0004 43F48053 		orr	r3, r3, #4096
 407 0008 40F82130 		str	r3, [r0, r1, lsl #2]
 407:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 408:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 409:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 408              		.loc 1 409 0
 409 000c 0020     		movs	r0, #0
 410              	.LVL37:
 411 000e 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE123:
 415              		.section	.text.FMC_NORSRAM_WriteOperation_Disable,"ax",%progbits
 416              		.align	1
 417              		.global	FMC_NORSRAM_WriteOperation_Disable
 418              		.syntax unified
ARM GAS  /tmp/ccvY9scw.s 			page 16


 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv4-sp-d16
 423              	FMC_NORSRAM_WriteOperation_Disable:
 424              	.LFB124:
 410:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 411:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 412:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Disables dynamically FMC_NORSRAM write operation.
 413:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NORSRAM device instance
 414:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NORSRAM bank number   
 415:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 416:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 417:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NORSRAM_WriteOperation_Disable(FMC_NORSRAM_TypeDef *Device, uint32_t Bank)
 418:HALLIB/Src/stm32f4xx_ll_fmc.c **** { 
 425              		.loc 1 418 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL38:
 419:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 420:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_DEVICE(Device));
 421:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NORSRAM_BANK(Bank));
 422:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 423:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable write operation */
 424:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->BTCR[Bank] &= ~FMC_WRITE_OPERATION_ENABLE; 
 431              		.loc 1 424 0
 432 0000 50F82130 		ldr	r3, [r0, r1, lsl #2]
 433 0004 23F48053 		bic	r3, r3, #4096
 434 0008 40F82130 		str	r3, [r0, r1, lsl #2]
 425:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 426:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 427:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 435              		.loc 1 427 0
 436 000c 0020     		movs	r0, #0
 437              	.LVL39:
 438 000e 7047     		bx	lr
 439              		.cfi_endproc
 440              	.LFE124:
 442              		.section	.text.FMC_NAND_Init,"ax",%progbits
 443              		.align	1
 444              		.global	FMC_NAND_Init
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	FMC_NAND_Init:
 451              	.LFB125:
 428:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 429:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 430:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
 431:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 432:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 433:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 434:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
 435:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 436:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
ARM GAS  /tmp/ccvY9scw.s 			page 17


 437:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_NAND
 438:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief    NAND Controller functions 
 439:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
 440:HALLIB/Src/stm32f4xx_ll_fmc.c ****   @verbatim 
 441:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 442:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ##### How to use NAND device driver #####
 443:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 444:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]
 445:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This driver contains a set of APIs to interface with the FMC NAND banks in order
 446:HALLIB/Src/stm32f4xx_ll_fmc.c ****     to run the NAND external devices.
 447:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 448:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NAND bank reset using the function FMC_NAND_DeInit() 
 449:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NAND bank control configuration using the function FMC_NAND_Init()
 450:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NAND bank common space timing configuration using the function 
 451:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_NAND_CommonSpace_Timing_Init()
 452:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NAND bank attribute space timing configuration using the function 
 453:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_NAND_AttributeSpace_Timing_Init()
 454:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NAND bank enable/disable ECC correction feature using the functions
 455:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_NAND_ECC_Enable()/FMC_NAND_ECC_Disable()
 456:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC NAND bank get ECC correction code using the function FMC_NAND_GetECC()    
 457:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 458:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 459:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 460:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 461:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
 462:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 463:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @defgroup HAL_FMC_NAND_Group1 Initialization/de-initialization functions 
 464:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *  @brief    Initialization and Configuration functions 
 465:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *
 466:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim    
 467:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 468:HALLIB/Src/stm32f4xx_ll_fmc.c ****               ##### Initialization and de_initialization functions #####
 469:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 470:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]  
 471:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This section provides functions allowing to:
 472:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Initialize and configure the FMC NAND interface
 473:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) De-initialize the FMC NAND interface 
 474:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Configure the FMC clock and associated GPIOs
 475:HALLIB/Src/stm32f4xx_ll_fmc.c ****         
 476:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 477:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 478:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 479:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 480:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 481:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_NAND device according to the specified
 482:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         control parameters in the FMC_NAND_HandleTypeDef
 483:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 484:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Init Pointer to NAND Initialization structure
 485:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 486:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 487:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_Init(FMC_NAND_TypeDef *Device, FMC_NAND_InitTypeDef *Init)
 488:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 489:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr  = 0U; 
 490:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 491:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 492:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device));
 493:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Init->NandBank));
ARM GAS  /tmp/ccvY9scw.s 			page 18


 494:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_FEATURE(Init->Waitfeature));
 495:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_MEMORY_WIDTH(Init->MemoryDataWidth));
 496:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ECC_STATE(Init->EccComputation));
 497:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ECCPAGE_SIZE(Init->ECCPageSize));
 498:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_TCLR_TIME(Init->TCLRSetupTime));
 499:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_TAR_TIME(Init->TARSetupTime));   
 500:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 501:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get the NAND bank register value */
 502:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->PCR;
 503:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 504:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear PWAITEN, PBKEN, PTYP, PWID, ECCEN, TCLR, TAR and ECCPS bits */
 505:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PCR_PWAITEN  | FMC_PCR_PBKEN | FMC_PCR_PTYP | \
 506:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PCR_PWID | FMC_PCR_ECCEN | FMC_PCR_TCLR | \
 507:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PCR_TAR | FMC_PCR_ECCPS));  
 508:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 509:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set NAND device control parameters */
 510:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Init->Waitfeature                |\
 511:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      FMC_PCR_MEMORY_TYPE_NAND         |\
 512:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->MemoryDataWidth            |\
 513:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->EccComputation             |\
 514:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->ECCPageSize                |\
 515:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Init->TCLRSetupTime) << 9U)    |\
 516:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Init->TARSetupTime) << 13U));
 517:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 518:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* NAND bank registers configuration */
 519:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PCR  = tmpr;
 520:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 521:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 522:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 523:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 524:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 525:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_NAND Common space Timing according to the specified
 526:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NAND_PCC_TimingTypeDef
 527:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 528:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to NAND timing structure
 529:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number   
 530:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 531:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 532:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_CommonSpace_Timing_Init(FMC_NAND_TypeDef *Device, FMC_NAND_PCC_TimingTyp
 533:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 534:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;  
 535:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 536:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 537:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device));
 538:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SETUP_TIME(Timing->SetupTime));
 539:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_TIME(Timing->WaitSetupTime));
 540:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HOLD_TIME(Timing->HoldSetupTime));
 541:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HIZ_TIME(Timing->HiZSetupTime));
 542:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 543:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 544:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get the NAND bank 2 register value */
 545:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->PMEM;
 546:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 547:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 548:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear MEMSETx, MEMWAITx, MEMHOLDx and MEMHIZx bits */
 549:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PMEM_MEMSET2  | FMC_PMEM_MEMWAIT2 | FMC_PMEM_MEMHOLD2 | \
 550:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PMEM_MEMHIZ2)); 
ARM GAS  /tmp/ccvY9scw.s 			page 19


 551:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 552:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set FMC_NAND device timing parameters */
 553:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->SetupTime                     |\
 554:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->WaitSetupTime) << 8U)     |\
 555:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->HoldSetupTime) << 16U)    |\
 556:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->HiZSetupTime) << 24U)
 557:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        );
 558:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        
 559:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* NAND bank  registers configuration */
 560:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PMEM = tmpr;
 561:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 562:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 563:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 564:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 565:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 566:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_NAND Attribute space Timing according to the specified
 567:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NAND_PCC_TimingTypeDef
 568:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 569:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to NAND timing structure
 570:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number 
 571:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 572:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 573:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_AttributeSpace_Timing_Init(FMC_NAND_TypeDef *Device, FMC_NAND_PCC_Timing
 574:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 575:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;  
 576:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 577:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 578:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 579:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SETUP_TIME(Timing->SetupTime));
 580:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_TIME(Timing->WaitSetupTime));
 581:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HOLD_TIME(Timing->HoldSetupTime));
 582:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HIZ_TIME(Timing->HiZSetupTime));
 583:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 584:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 585:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get the NAND bank  register value */
 586:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->PATT;
 587:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 588:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear ATTSETx, ATTWAITx, ATTHOLDx and ATTHIZx bits */
 589:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PATT_ATTSET2  | FMC_PATT_ATTWAIT2 | FMC_PATT_ATTHOLD2 | \
 590:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PATT_ATTHIZ2));
 591:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 592:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set FMC_NAND device timing parameters */
 593:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->SetupTime                 |\
 594:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->WaitSetupTime) << 8U)     |\
 595:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HoldSetupTime) << 16U)    |\
 596:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HiZSetupTime) << 24U));
 597:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 598:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* NAND bank registers configuration */
 599:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PATT = tmpr; 
 600:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
 601:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 602:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 603:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 604:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 605:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 606:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  DeInitializes the FMC_NAND device 
 607:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
ARM GAS  /tmp/ccvY9scw.s 			page 20


 608:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
 609:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 610:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 611:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_DeInit(FMC_NAND_TypeDef *Device, uint32_t Bank)
 612:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 613:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 614:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 615:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 616:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 617:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable the NAND Bank */
 618:HALLIB/Src/stm32f4xx_ll_fmc.c ****   __FMC_NAND_DISABLE(Device, Bank);
 619:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 620:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* De-initialize the NAND Bank */
 621:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set the FMC_NAND_BANK registers to their reset values */
 622:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PCR  = 0x00000018U;
 623:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SR   = 0x00000040U;
 624:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PMEM = 0xFCFCFCFCU;
 625:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PATT = 0xFCFCFCFCU;
 626:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 627:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 628:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 629:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 630:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 631:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
 632:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 633:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 634:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 635:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @defgroup HAL_FMC_NAND_Group2 Control functions 
 636:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *  @brief   management functions 
 637:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *
 638:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim   
 639:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 640:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ##### FMC_NAND Control functions #####
 641:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================  
 642:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]
 643:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This subsection provides a set of functions allowing to control dynamically
 644:HALLIB/Src/stm32f4xx_ll_fmc.c ****     the FMC NAND interface.
 645:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 646:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 647:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 648:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */ 
 649:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 650:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 651:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 652:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Enables dynamically FMC_NAND ECC feature.
 653:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 654:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
 655:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 656:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */    
 657:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_ECC_Enable(FMC_NAND_TypeDef *Device, uint32_t Bank)
 658:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 659:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 660:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 661:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 662:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 663:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Enable ECC feature */
 664:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PCR |= FMC_PCR_ECCEN;
ARM GAS  /tmp/ccvY9scw.s 			page 21


 665:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 666:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 667:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 668:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 669:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 670:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 671:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Disables dynamically FMC_NAND ECC feature.
 672:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 673:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
 674:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 675:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */  
 676:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_ECC_Disable(FMC_NAND_TypeDef *Device, uint32_t Bank)  
 677:HALLIB/Src/stm32f4xx_ll_fmc.c **** {  
 678:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 679:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 680:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 681:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 682:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable ECC feature */
 683:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PCR &= ~FMC_PCR_ECCEN;
 684:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 685:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 686:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 687:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 688:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 689:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Disables dynamically FMC_NAND ECC feature.
 690:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 691:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  ECCval Pointer to ECC value
 692:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
 693:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timeout Timeout wait value  
 694:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 695:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 696:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_GetECC(FMC_NAND_TypeDef *Device, uint32_t *ECCval, uint32_t Bank, uint32
 697:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 698:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tickstart = 0U;
 699:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 700:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 701:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 702:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 703:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 704:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get tick */ 
 705:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tickstart = HAL_GetTick();
 706:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 707:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Wait until FIFO is empty */
 708:HALLIB/Src/stm32f4xx_ll_fmc.c ****   while(__FMC_NAND_GET_FLAG(Device, Bank, FMC_FLAG_FEMPT) == RESET)
 709:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 710:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Check for the Timeout */
 711:HALLIB/Src/stm32f4xx_ll_fmc.c ****     if(Timeout != HAL_MAX_DELAY)
 712:HALLIB/Src/stm32f4xx_ll_fmc.c ****     {
 713:HALLIB/Src/stm32f4xx_ll_fmc.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 714:HALLIB/Src/stm32f4xx_ll_fmc.c ****       {
 715:HALLIB/Src/stm32f4xx_ll_fmc.c ****         return HAL_TIMEOUT;
 716:HALLIB/Src/stm32f4xx_ll_fmc.c ****       }
 717:HALLIB/Src/stm32f4xx_ll_fmc.c ****     }  
 718:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 719:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 720:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get the ECCR register value */
 721:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *ECCval = (uint32_t)Device->ECCR;
ARM GAS  /tmp/ccvY9scw.s 			page 22


 722:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 723:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 724:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 725:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 726:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 727:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
 728:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 729:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 730:HALLIB/Src/stm32f4xx_ll_fmc.c **** #else /* defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439x
 731:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @defgroup HAL_FMC_NAND_Group1 Initialization/de-initialization functions 
 732:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *  @brief    Initialization and Configuration functions 
 733:HALLIB/Src/stm32f4xx_ll_fmc.c ****  *
 734:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim    
 735:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 736:HALLIB/Src/stm32f4xx_ll_fmc.c ****               ##### Initialization and de_initialization functions #####
 737:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 738:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]  
 739:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This section provides functions allowing to:
 740:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Initialize and configure the FMC NAND interface
 741:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) De-initialize the FMC NAND interface 
 742:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Configure the FMC clock and associated GPIOs
 743:HALLIB/Src/stm32f4xx_ll_fmc.c ****         
 744:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 745:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 746:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 747:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 748:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_NAND device according to the specified
 749:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         control parameters in the FMC_NAND_HandleTypeDef
 750:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 751:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Init Pointer to NAND Initialization structure
 752:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 753:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 754:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_Init(FMC_NAND_TypeDef *Device, FMC_NAND_InitTypeDef *Init)
 755:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 452              		.loc 1 755 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL40:
 458 0000 30B4     		push	{r4, r5}
 459              	.LCFI10:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 5, -4
 463              	.LVL41:
 756:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr  = 0U; 
 757:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 758:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 759:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device));
 760:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Init->NandBank));
 761:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_FEATURE(Init->Waitfeature));
 762:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_MEMORY_WIDTH(Init->MemoryDataWidth));
 763:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ECC_STATE(Init->EccComputation));
 764:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ECCPAGE_SIZE(Init->ECCPageSize));
 765:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_TCLR_TIME(Init->TCLRSetupTime));
 766:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_TAR_TIME(Init->TARSetupTime));   
ARM GAS  /tmp/ccvY9scw.s 			page 23


 767:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 768:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Init->NandBank == FMC_NAND_BANK2)
 464              		.loc 1 768 0
 465 0002 0C68     		ldr	r4, [r1]
 466 0004 102C     		cmp	r4, #16
 467 0006 18D0     		beq	.L35
 769:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 770:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the NAND bank 2 register value */
 771:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = Device->PCR2;
 772:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 773:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 774:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 775:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the NAND bank 3 register value */
 776:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = Device->PCR3;
 468              		.loc 1 776 0
 469 0008 036A     		ldr	r3, [r0, #32]
 470              	.LVL42:
 471              	.L31:
 777:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 778:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 779:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear PWAITEN, PBKEN, PTYP, PWID, ECCEN, TCLR, TAR and ECCPS bits */
 780:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PCR2_PWAITEN  | FMC_PCR2_PBKEN | FMC_PCR2_PTYP | \
 472              		.loc 1 780 0
 473 000a 0E4A     		ldr	r2, .L37
 474 000c 1A40     		ands	r2, r2, r3
 475              	.LVL43:
 781:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PCR2_PWID | FMC_PCR2_ECCEN | FMC_PCR2_TCLR | \
 782:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PCR2_TAR | FMC_PCR2_ECCPS));  
 783:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 784:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set NAND device control parameters */
 785:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Init->Waitfeature                 |\
 476              		.loc 1 785 0
 477 000e 4B68     		ldr	r3, [r1, #4]
 786:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      FMC_PCR_MEMORY_TYPE_NAND          |\
 787:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->MemoryDataWidth             |\
 478              		.loc 1 787 0
 479 0010 8D68     		ldr	r5, [r1, #8]
 786:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      FMC_PCR_MEMORY_TYPE_NAND          |\
 480              		.loc 1 786 0
 481 0012 2B43     		orrs	r3, r3, r5
 788:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->EccComputation              |\
 482              		.loc 1 788 0
 483 0014 CD68     		ldr	r5, [r1, #12]
 787:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->EccComputation              |\
 484              		.loc 1 787 0
 485 0016 2B43     		orrs	r3, r3, r5
 789:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->ECCPageSize                 |\
 486              		.loc 1 789 0
 487 0018 0D69     		ldr	r5, [r1, #16]
 788:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->EccComputation              |\
 488              		.loc 1 788 0
 489 001a 2B43     		orrs	r3, r3, r5
 790:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Init->TCLRSetupTime) << 9U)     |\
 490              		.loc 1 790 0
 491 001c 4D69     		ldr	r5, [r1, #20]
 789:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      Init->ECCPageSize                 |\
 492              		.loc 1 789 0
ARM GAS  /tmp/ccvY9scw.s 			page 24


 493 001e 43EA4523 		orr	r3, r3, r5, lsl #9
 791:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Init->TARSetupTime) << 13U));   
 494              		.loc 1 791 0
 495 0022 8969     		ldr	r1, [r1, #24]
 496              	.LVL44:
 785:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      FMC_PCR_MEMORY_TYPE_NAND          |\
 497              		.loc 1 785 0
 498 0024 43EA4133 		orr	r3, r3, r1, lsl #13
 499 0028 1343     		orrs	r3, r3, r2
 500 002a 43F00803 		orr	r3, r3, #8
 501              	.LVL45:
 792:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 793:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Init->NandBank == FMC_NAND_BANK2)
 502              		.loc 1 793 0
 503 002e 102C     		cmp	r4, #16
 504 0030 05D0     		beq	.L36
 794:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 795:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* NAND bank 2 registers configuration */
 796:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR2  = tmpr;
 797:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 798:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 799:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 800:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* NAND bank 3 registers configuration */
 801:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR3  = tmpr;
 505              		.loc 1 801 0
 506 0032 0362     		str	r3, [r0, #32]
 507              	.L33:
 802:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 803:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 804:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 805:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 806:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 508              		.loc 1 806 0
 509 0034 0020     		movs	r0, #0
 510              	.LVL46:
 511 0036 30BC     		pop	{r4, r5}
 512              	.LCFI11:
 513              		.cfi_remember_state
 514              		.cfi_restore 5
 515              		.cfi_restore 4
 516              		.cfi_def_cfa_offset 0
 517 0038 7047     		bx	lr
 518              	.LVL47:
 519              	.L35:
 520              	.LCFI12:
 521              		.cfi_restore_state
 771:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 522              		.loc 1 771 0
 523 003a 0368     		ldr	r3, [r0]
 524              	.LVL48:
 525 003c E5E7     		b	.L31
 526              	.LVL49:
 527              	.L36:
 796:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 528              		.loc 1 796 0
 529 003e 0360     		str	r3, [r0]
 530 0040 F8E7     		b	.L33
ARM GAS  /tmp/ccvY9scw.s 			page 25


 531              	.L38:
 532 0042 00BF     		.align	2
 533              	.L37:
 534 0044 8101F0FF 		.word	-1048191
 535              		.cfi_endproc
 536              	.LFE125:
 538              		.section	.text.FMC_NAND_CommonSpace_Timing_Init,"ax",%progbits
 539              		.align	1
 540              		.global	FMC_NAND_CommonSpace_Timing_Init
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 544              		.fpu fpv4-sp-d16
 546              	FMC_NAND_CommonSpace_Timing_Init:
 547              	.LFB126:
 807:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 808:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 809:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_NAND Common space Timing according to the specified
 810:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NAND_PCC_TimingTypeDef
 811:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 812:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to NAND timing structure
 813:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number   
 814:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 815:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 816:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_CommonSpace_Timing_Init(FMC_NAND_TypeDef *Device, FMC_NAND_PCC_TimingTyp
 817:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 548              		.loc 1 817 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              	.LVL50:
 554 0000 10B4     		push	{r4}
 555              	.LCFI13:
 556              		.cfi_def_cfa_offset 4
 557              		.cfi_offset 4, -4
 558              	.LVL51:
 818:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;  
 819:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 820:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
 821:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device));
 822:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SETUP_TIME(Timing->SetupTime));
 823:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_TIME(Timing->WaitSetupTime));
 824:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HOLD_TIME(Timing->HoldSetupTime));
 825:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HIZ_TIME(Timing->HiZSetupTime));
 826:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 827:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 828:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
 559              		.loc 1 828 0
 560 0002 102A     		cmp	r2, #16
 561 0004 11D0     		beq	.L45
 829:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 830:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the NAND bank 2 register value */
 831:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = Device->PMEM2;
 832:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 833:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 834:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
ARM GAS  /tmp/ccvY9scw.s 			page 26


 835:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the NAND bank 3 register value */
 836:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = Device->PMEM3;
 562              		.loc 1 836 0
 563 0006 836A     		ldr	r3, [r0, #40]
 564              	.LVL52:
 565              	.L41:
 837:HALLIB/Src/stm32f4xx_ll_fmc.c ****   } 
 838:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 839:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear MEMSETx, MEMWAITx, MEMHOLDx and MEMHIZx bits */
 840:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PMEM2_MEMSET2  | FMC_PMEM2_MEMWAIT2 | FMC_PMEM2_MEMHOLD2 | \
 841:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PMEM2_MEMHIZ2)); 
 842:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 843:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set FMC_NAND device timing parameters */
 844:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->SetupTime                     |\
 566              		.loc 1 844 0
 567 0008 0B68     		ldr	r3, [r1]
 845:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->WaitSetupTime) << 8U)     |\
 568              		.loc 1 845 0
 569 000a 4C68     		ldr	r4, [r1, #4]
 844:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->WaitSetupTime) << 8U)     |\
 570              		.loc 1 844 0
 571 000c 43EA0423 		orr	r3, r3, r4, lsl #8
 846:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->HoldSetupTime) << 16U)    |\
 572              		.loc 1 846 0
 573 0010 8C68     		ldr	r4, [r1, #8]
 845:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->WaitSetupTime) << 8U)     |\
 574              		.loc 1 845 0
 575 0012 43EA0443 		orr	r3, r3, r4, lsl #16
 847:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->HiZSetupTime) << 24U)
 576              		.loc 1 847 0
 577 0016 C968     		ldr	r1, [r1, #12]
 578              	.LVL53:
 846:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ((Timing->HoldSetupTime) << 16U)    |\
 579              		.loc 1 846 0
 580 0018 43EA0163 		orr	r3, r3, r1, lsl #24
 581              	.LVL54:
 848:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        );
 849:HALLIB/Src/stm32f4xx_ll_fmc.c ****                             
 850:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
 582              		.loc 1 850 0
 583 001c 102A     		cmp	r2, #16
 584 001e 06D0     		beq	.L46
 851:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 852:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* NAND bank 2 registers configuration */
 853:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PMEM2 = tmpr;
 854:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 855:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 856:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 857:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* NAND bank 3 registers configuration */
 858:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PMEM3 = tmpr;
 585              		.loc 1 858 0
 586 0020 8362     		str	r3, [r0, #40]
 587              	.L43:
 859:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }  
 860:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 861:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 862:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
ARM GAS  /tmp/ccvY9scw.s 			page 27


 588              		.loc 1 862 0
 589 0022 0020     		movs	r0, #0
 590              	.LVL55:
 591 0024 5DF8044B 		ldr	r4, [sp], #4
 592              	.LCFI14:
 593              		.cfi_remember_state
 594              		.cfi_restore 4
 595              		.cfi_def_cfa_offset 0
 596 0028 7047     		bx	lr
 597              	.LVL56:
 598              	.L45:
 599              	.LCFI15:
 600              		.cfi_restore_state
 831:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 601              		.loc 1 831 0
 602 002a 8368     		ldr	r3, [r0, #8]
 603              	.LVL57:
 604 002c ECE7     		b	.L41
 605              	.LVL58:
 606              	.L46:
 853:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 607              		.loc 1 853 0
 608 002e 8360     		str	r3, [r0, #8]
 609 0030 F7E7     		b	.L43
 610              		.cfi_endproc
 611              	.LFE126:
 613              		.section	.text.FMC_NAND_AttributeSpace_Timing_Init,"ax",%progbits
 614              		.align	1
 615              		.global	FMC_NAND_AttributeSpace_Timing_Init
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	FMC_NAND_AttributeSpace_Timing_Init:
 622              	.LFB127:
 863:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 864:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 865:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_NAND Attribute space Timing according to the specified
 866:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NAND_PCC_TimingTypeDef
 867:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 868:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to NAND timing structure
 869:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number 
 870:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 871:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 872:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_AttributeSpace_Timing_Init(FMC_NAND_TypeDef *Device, FMC_NAND_PCC_Timing
 873:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 623              		.loc 1 873 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628              	.LVL59:
 629 0000 10B4     		push	{r4}
 630              	.LCFI16:
 631              		.cfi_def_cfa_offset 4
 632              		.cfi_offset 4, -4
 633              	.LVL60:
ARM GAS  /tmp/ccvY9scw.s 			page 28


 874:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;  
 875:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 876:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 877:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 878:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SETUP_TIME(Timing->SetupTime));
 879:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_TIME(Timing->WaitSetupTime));
 880:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HOLD_TIME(Timing->HoldSetupTime));
 881:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HIZ_TIME(Timing->HiZSetupTime));
 882:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 883:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 884:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
 634              		.loc 1 884 0
 635 0002 102A     		cmp	r2, #16
 636 0004 11D0     		beq	.L53
 885:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 886:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the NAND bank 2 register value */
 887:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = Device->PATT2;
 888:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 889:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 890:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 891:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the NAND bank 3 register value */
 892:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr = Device->PATT3;
 637              		.loc 1 892 0
 638 0006 C36A     		ldr	r3, [r0, #44]
 639              	.LVL61:
 640              	.L49:
 893:HALLIB/Src/stm32f4xx_ll_fmc.c ****   } 
 894:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 895:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear ATTSETx, ATTWAITx, ATTHOLDx and ATTHIZx bits */
 896:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PATT2_ATTSET2  | FMC_PATT2_ATTWAIT2 | FMC_PATT2_ATTHOLD2 | \
 897:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PATT2_ATTHIZ2));
 898:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 899:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set FMC_NAND device timing parameters */
 900:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->SetupTime                  |\
 641              		.loc 1 900 0
 642 0008 0B68     		ldr	r3, [r1]
 901:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->WaitSetupTime) << 8U)      |\
 643              		.loc 1 901 0
 644 000a 4C68     		ldr	r4, [r1, #4]
 900:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->WaitSetupTime) << 8U)      |\
 645              		.loc 1 900 0
 646 000c 43EA0423 		orr	r3, r3, r4, lsl #8
 902:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HoldSetupTime) << 16U)     |\
 647              		.loc 1 902 0
 648 0010 8C68     		ldr	r4, [r1, #8]
 901:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->WaitSetupTime) << 8U)      |\
 649              		.loc 1 901 0
 650 0012 43EA0443 		orr	r3, r3, r4, lsl #16
 903:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HiZSetupTime) << 24U));
 651              		.loc 1 903 0
 652 0016 C968     		ldr	r1, [r1, #12]
 653              	.LVL62:
 902:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HoldSetupTime) << 16U)     |\
 654              		.loc 1 902 0
 655 0018 43EA0163 		orr	r3, r3, r1, lsl #24
 656              	.LVL63:
 904:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        
ARM GAS  /tmp/ccvY9scw.s 			page 29


 905:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
 657              		.loc 1 905 0
 658 001c 102A     		cmp	r2, #16
 659 001e 06D0     		beq	.L54
 906:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 907:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* NAND bank 2 registers configuration */
 908:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PATT2 = tmpr;
 909:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 910:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 911:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 912:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* NAND bank 3 registers configuration */
 913:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PATT3 = tmpr;
 660              		.loc 1 913 0
 661 0020 C362     		str	r3, [r0, #44]
 662              	.L51:
 914:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }   
 915:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 916:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 917:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 663              		.loc 1 917 0
 664 0022 0020     		movs	r0, #0
 665              	.LVL64:
 666 0024 5DF8044B 		ldr	r4, [sp], #4
 667              	.LCFI17:
 668              		.cfi_remember_state
 669              		.cfi_restore 4
 670              		.cfi_def_cfa_offset 0
 671 0028 7047     		bx	lr
 672              	.LVL65:
 673              	.L53:
 674              	.LCFI18:
 675              		.cfi_restore_state
 887:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 676              		.loc 1 887 0
 677 002a C368     		ldr	r3, [r0, #12]
 678              	.LVL66:
 679 002c ECE7     		b	.L49
 680              	.LVL67:
 681              	.L54:
 908:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 682              		.loc 1 908 0
 683 002e C360     		str	r3, [r0, #12]
 684 0030 F7E7     		b	.L51
 685              		.cfi_endproc
 686              	.LFE127:
 688              		.section	.text.FMC_NAND_DeInit,"ax",%progbits
 689              		.align	1
 690              		.global	FMC_NAND_DeInit
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	FMC_NAND_DeInit:
 697              	.LFB128:
 918:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 919:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 920:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  DeInitializes the FMC_NAND device 
ARM GAS  /tmp/ccvY9scw.s 			page 30


 921:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 922:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
 923:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 924:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 925:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_DeInit(FMC_NAND_TypeDef *Device, uint32_t Bank)
 926:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 698              		.loc 1 926 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703              	.LVL68:
 927:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 928:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 929:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 930:HALLIB/Src/stm32f4xx_ll_fmc.c ****       
 931:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable the NAND Bank */
 932:HALLIB/Src/stm32f4xx_ll_fmc.c ****   __FMC_NAND_DISABLE(Device, Bank);
 704              		.loc 1 932 0
 705 0000 1029     		cmp	r1, #16
 706 0002 0FD0     		beq	.L60
 707              		.loc 1 932 0 is_stmt 0 discriminator 2
 708 0004 036A     		ldr	r3, [r0, #32]
 709 0006 23F00403 		bic	r3, r3, #4
 710 000a 0362     		str	r3, [r0, #32]
 711              	.L57:
 933:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
 934:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* De-initialize the NAND Bank */
 935:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
 712              		.loc 1 935 0 is_stmt 1
 713 000c 1029     		cmp	r1, #16
 714 000e 0ED0     		beq	.L61
 936:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 937:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Set the FMC_NAND_BANK2 registers to their reset values */
 938:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR2  = 0x00000018U;
 939:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SR2   = 0x00000040U;
 940:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PMEM2 = 0xFCFCFCFCU;
 941:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PATT2 = 0xFCFCFCFCU;  
 942:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 943:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* FMC_Bank3_NAND */  
 944:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 945:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 946:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Set the FMC_NAND_BANK3 registers to their reset values */
 947:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR3  = 0x00000018U;
 715              		.loc 1 947 0
 716 0010 1823     		movs	r3, #24
 717 0012 0362     		str	r3, [r0, #32]
 948:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SR3   = 0x00000040U;
 718              		.loc 1 948 0
 719 0014 4023     		movs	r3, #64
 720 0016 4362     		str	r3, [r0, #36]
 949:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PMEM3 = 0xFCFCFCFCU;
 721              		.loc 1 949 0
 722 0018 4FF0FC33 		mov	r3, #-50529028
 723 001c 8362     		str	r3, [r0, #40]
 950:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PATT3 = 0xFCFCFCFCU; 
 724              		.loc 1 950 0
ARM GAS  /tmp/ccvY9scw.s 			page 31


 725 001e C362     		str	r3, [r0, #44]
 726              	.L59:
 951:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 952:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 953:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 954:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 727              		.loc 1 954 0
 728 0020 0020     		movs	r0, #0
 729              	.LVL69:
 730 0022 7047     		bx	lr
 731              	.LVL70:
 732              	.L60:
 932:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
 733              		.loc 1 932 0 discriminator 1
 734 0024 0368     		ldr	r3, [r0]
 735 0026 23F00403 		bic	r3, r3, #4
 736 002a 0360     		str	r3, [r0]
 737 002c EEE7     		b	.L57
 738              	.L61:
 938:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SR2   = 0x00000040U;
 739              		.loc 1 938 0
 740 002e 1823     		movs	r3, #24
 741 0030 0360     		str	r3, [r0]
 939:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PMEM2 = 0xFCFCFCFCU;
 742              		.loc 1 939 0
 743 0032 4023     		movs	r3, #64
 744 0034 4360     		str	r3, [r0, #4]
 940:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PATT2 = 0xFCFCFCFCU;  
 745              		.loc 1 940 0
 746 0036 4FF0FC33 		mov	r3, #-50529028
 747 003a 8360     		str	r3, [r0, #8]
 941:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 748              		.loc 1 941 0
 749 003c C360     		str	r3, [r0, #12]
 750 003e EFE7     		b	.L59
 751              		.cfi_endproc
 752              	.LFE128:
 754              		.section	.text.FMC_NAND_ECC_Enable,"ax",%progbits
 755              		.align	1
 756              		.global	FMC_NAND_ECC_Enable
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu fpv4-sp-d16
 762              	FMC_NAND_ECC_Enable:
 763              	.LFB129:
 955:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 956:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 957:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
 958:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
 959:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 960:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_NAND_Private_Functions_Group2
 961:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *  @brief   management functions 
 962:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
 963:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim   
 964:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
 965:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        ##### FMC_NAND Control functions #####
ARM GAS  /tmp/ccvY9scw.s 			page 32


 966:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================  
 967:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]
 968:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This subsection provides a set of functions allowing to control dynamically
 969:HALLIB/Src/stm32f4xx_ll_fmc.c ****     the FMC NAND interface.
 970:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 971:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
 972:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
 973:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */ 
 974:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
 975:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Enables dynamically FMC_NAND ECC feature.
 976:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
 977:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
 978:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
 979:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */    
 980:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_ECC_Enable(FMC_NAND_TypeDef *Device, uint32_t Bank)
 981:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 764              		.loc 1 981 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769              	.LVL71:
 982:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
 983:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
 984:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
 985:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 986:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Enable ECC feature */
 987:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
 770              		.loc 1 987 0
 771 0000 1029     		cmp	r1, #16
 772 0002 05D0     		beq	.L65
 988:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 989:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR2 |= FMC_PCR2_ECCEN;
 990:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 991:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
 992:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 993:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR3 |= FMC_PCR3_ECCEN;
 773              		.loc 1 993 0
 774 0004 036A     		ldr	r3, [r0, #32]
 775 0006 43F04003 		orr	r3, r3, #64
 776 000a 0362     		str	r3, [r0, #32]
 777              	.L64:
 994:HALLIB/Src/stm32f4xx_ll_fmc.c ****   } 
 995:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
 996:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
 997:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 778              		.loc 1 997 0
 779 000c 0020     		movs	r0, #0
 780              	.LVL72:
 781 000e 7047     		bx	lr
 782              	.LVL73:
 783              	.L65:
 989:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 784              		.loc 1 989 0
 785 0010 0368     		ldr	r3, [r0]
 786 0012 43F04003 		orr	r3, r3, #64
 787 0016 0360     		str	r3, [r0]
ARM GAS  /tmp/ccvY9scw.s 			page 33


 788 0018 F8E7     		b	.L64
 789              		.cfi_endproc
 790              	.LFE129:
 792              		.section	.text.FMC_NAND_ECC_Disable,"ax",%progbits
 793              		.align	1
 794              		.global	FMC_NAND_ECC_Disable
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 798              		.fpu fpv4-sp-d16
 800              	FMC_NAND_ECC_Disable:
 801              	.LFB130:
 998:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 999:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1000:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Disables dynamically FMC_NAND ECC feature.
1001:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
1002:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
1003:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1004:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */  
1005:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_ECC_Disable(FMC_NAND_TypeDef *Device, uint32_t Bank)  
1006:HALLIB/Src/stm32f4xx_ll_fmc.c **** {  
 802              		.loc 1 1006 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807              	.LVL74:
1007:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
1008:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
1009:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
1010:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1011:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable ECC feature */
1012:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
 808              		.loc 1 1012 0
 809 0000 1029     		cmp	r1, #16
 810 0002 05D0     		beq	.L69
1013:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1014:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR2 &= ~FMC_PCR2_ECCEN;
1015:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1016:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
1017:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1018:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->PCR3 &= ~FMC_PCR3_ECCEN;
 811              		.loc 1 1018 0
 812 0004 036A     		ldr	r3, [r0, #32]
 813 0006 23F04003 		bic	r3, r3, #64
 814 000a 0362     		str	r3, [r0, #32]
 815              	.L68:
1019:HALLIB/Src/stm32f4xx_ll_fmc.c ****   } 
1020:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1021:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
1022:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 816              		.loc 1 1022 0
 817 000c 0020     		movs	r0, #0
 818              	.LVL75:
 819 000e 7047     		bx	lr
 820              	.LVL76:
 821              	.L69:
ARM GAS  /tmp/ccvY9scw.s 			page 34


1014:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 822              		.loc 1 1014 0
 823 0010 0368     		ldr	r3, [r0]
 824 0012 23F04003 		bic	r3, r3, #64
 825 0016 0360     		str	r3, [r0]
 826 0018 F8E7     		b	.L68
 827              		.cfi_endproc
 828              	.LFE130:
 830              		.section	.text.FMC_NAND_GetECC,"ax",%progbits
 831              		.align	1
 832              		.global	FMC_NAND_GetECC
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu fpv4-sp-d16
 838              	FMC_NAND_GetECC:
 839              	.LFB131:
1023:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1024:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1025:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Disables dynamically FMC_NAND ECC feature.
1026:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to NAND device instance
1027:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  ECCval Pointer to ECC value
1028:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank NAND bank number
1029:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timeout Timeout wait value  
1030:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1031:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1032:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_NAND_GetECC(FMC_NAND_TypeDef *Device, uint32_t *ECCval, uint32_t Bank, uint32
1033:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 840              		.loc 1 1033 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              	.LVL77:
 845 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 846              	.LCFI19:
 847              		.cfi_def_cfa_offset 24
 848              		.cfi_offset 4, -24
 849              		.cfi_offset 5, -20
 850              		.cfi_offset 6, -16
 851              		.cfi_offset 7, -12
 852              		.cfi_offset 8, -8
 853              		.cfi_offset 14, -4
 854 0004 0446     		mov	r4, r0
 855 0006 0F46     		mov	r7, r1
 856 0008 1546     		mov	r5, r2
 857 000a 1E46     		mov	r6, r3
 858              	.LVL78:
1034:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tickstart = 0U;
1035:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1036:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
1037:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_DEVICE(Device)); 
1038:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_NAND_BANK(Bank));
1039:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1040:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get tick */ 
1041:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tickstart = HAL_GetTick();
 859              		.loc 1 1041 0
 860 000c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccvY9scw.s 			page 35


 861              	.LVL79:
 862 0010 8046     		mov	r8, r0
 863              	.LVL80:
1042:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1043:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Wait until FIFO is empty */
1044:HALLIB/Src/stm32f4xx_ll_fmc.c ****   while(__FMC_NAND_GET_FLAG(Device, Bank, FMC_FLAG_FEMPT) == RESET)
 864              		.loc 1 1044 0
 865 0012 13E0     		b	.L72
 866              	.LVL81:
 867              	.L82:
1045:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1046:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Check for the Timeout */
1047:HALLIB/Src/stm32f4xx_ll_fmc.c ****     if(Timeout != HAL_MAX_DELAY)
1048:HALLIB/Src/stm32f4xx_ll_fmc.c ****     {
1049:HALLIB/Src/stm32f4xx_ll_fmc.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 868              		.loc 1 1049 0
 869 0014 3EB3     		cbz	r6, .L78
 870              		.loc 1 1049 0 is_stmt 0 discriminator 1
 871 0016 FFF7FEFF 		bl	HAL_GetTick
 872              	.LVL82:
 873 001a A0EB0800 		sub	r0, r0, r8
 874 001e 8642     		cmp	r6, r0
 875 0020 0CD2     		bcs	.L72
1050:HALLIB/Src/stm32f4xx_ll_fmc.c ****       {
1051:HALLIB/Src/stm32f4xx_ll_fmc.c ****         return HAL_TIMEOUT;
 876              		.loc 1 1051 0 is_stmt 1
 877 0022 0320     		movs	r0, #3
1052:HALLIB/Src/stm32f4xx_ll_fmc.c ****       }
1053:HALLIB/Src/stm32f4xx_ll_fmc.c ****     }  
1054:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1055:HALLIB/Src/stm32f4xx_ll_fmc.c ****      
1056:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_NAND_BANK2)
1057:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {    
1058:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the ECCR2 register value */
1059:HALLIB/Src/stm32f4xx_ll_fmc.c ****     *ECCval = (uint32_t)Device->ECCR2;
1060:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1061:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
1062:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {    
1063:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Get the ECCR3 register value */
1064:HALLIB/Src/stm32f4xx_ll_fmc.c ****     *ECCval = (uint32_t)Device->ECCR3;
1065:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1066:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1067:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
1068:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 878              		.loc 1 1068 0
 879 0024 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 880              	.LVL83:
 881              	.L83:
1044:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 882              		.loc 1 1044 0 discriminator 1
 883 0028 6368     		ldr	r3, [r4, #4]
 884 002a 13F0400F 		tst	r3, #64
 885 002e 0CBF     		ite	eq
 886 0030 0123     		moveq	r3, #1
 887 0032 0023     		movne	r3, #0
 888              	.L75:
1044:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
ARM GAS  /tmp/ccvY9scw.s 			page 36


 889              		.loc 1 1044 0 is_stmt 0 discriminator 4
 890 0034 5BB1     		cbz	r3, .L81
1047:HALLIB/Src/stm32f4xx_ll_fmc.c ****     {
 891              		.loc 1 1047 0 is_stmt 1
 892 0036 B6F1FF3F 		cmp	r6, #-1
 893 003a EBD1     		bne	.L82
 894              	.L72:
1044:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 895              		.loc 1 1044 0
 896 003c 102D     		cmp	r5, #16
 897 003e F3D0     		beq	.L83
1044:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
 898              		.loc 1 1044 0 is_stmt 0 discriminator 2
 899 0040 636A     		ldr	r3, [r4, #36]
 900 0042 13F0400F 		tst	r3, #64
 901 0046 0CBF     		ite	eq
 902 0048 0123     		moveq	r3, #1
 903 004a 0023     		movne	r3, #0
 904 004c F2E7     		b	.L75
 905              	.L81:
1056:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {    
 906              		.loc 1 1056 0 is_stmt 1
 907 004e 102D     		cmp	r5, #16
 908 0050 04D0     		beq	.L84
1064:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 909              		.loc 1 1064 0
 910 0052 636B     		ldr	r3, [r4, #52]
 911 0054 3B60     		str	r3, [r7]
1067:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 912              		.loc 1 1067 0
 913 0056 0020     		movs	r0, #0
 914 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 915              	.LVL84:
 916              	.L84:
1059:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 917              		.loc 1 1059 0
 918 005c 6369     		ldr	r3, [r4, #20]
 919 005e 3B60     		str	r3, [r7]
1067:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 920              		.loc 1 1067 0
 921 0060 0020     		movs	r0, #0
 922 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 923              	.LVL85:
 924              	.L78:
1051:HALLIB/Src/stm32f4xx_ll_fmc.c ****       }
 925              		.loc 1 1051 0
 926 0066 0320     		movs	r0, #3
 927 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 928              		.cfi_endproc
 929              	.LFE131:
 931              		.section	.text.FMC_PCCARD_Init,"ax",%progbits
 932              		.align	1
 933              		.global	FMC_PCCARD_Init
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvY9scw.s 			page 37


 939              	FMC_PCCARD_Init:
 940              	.LFB132:
1069:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1070:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1071:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
1072:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1073:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1074:HALLIB/Src/stm32f4xx_ll_fmc.c **** #endif /* defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx) */
1075:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1076:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
1077:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1078:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1079:HALLIB/Src/stm32f4xx_ll_fmc.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)
1080:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_PCCARD
1081:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief    PCCARD Controller functions 
1082:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
1083:HALLIB/Src/stm32f4xx_ll_fmc.c ****   @verbatim 
1084:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================  
1085:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ##### How to use PCCARD device driver #####
1086:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1087:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]
1088:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This driver contains a set of APIs to interface with the FMC PCCARD bank in order
1089:HALLIB/Src/stm32f4xx_ll_fmc.c ****     to run the PCCARD/compact flash external devices.
1090:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1091:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC PCCARD bank reset using the function FMC_PCCARD_DeInit() 
1092:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC PCCARD bank control configuration using the function FMC_PCCARD_Init()
1093:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC PCCARD bank common space timing configuration using the function 
1094:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_PCCARD_CommonSpace_Timing_Init()
1095:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC PCCARD bank attribute space timing configuration using the function 
1096:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_PCCARD_AttributeSpace_Timing_Init()
1097:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC PCCARD bank IO space timing configuration using the function 
1098:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_PCCARD_IOSpace_Timing_Init()
1099:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
1100:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
1101:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1102:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1103:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_PCCARD_Private_Functions_Group1
1104:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *  @brief    Initialization and Configuration functions 
1105:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
1106:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim    
1107:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1108:HALLIB/Src/stm32f4xx_ll_fmc.c ****               ##### Initialization and de_initialization functions #####
1109:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1110:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]  
1111:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This section provides functions allowing to:
1112:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Initialize and configure the FMC PCCARD interface
1113:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) De-initialize the FMC PCCARD interface 
1114:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Configure the FMC clock and associated GPIOs
1115:HALLIB/Src/stm32f4xx_ll_fmc.c ****         
1116:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
1117:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
1118:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1119:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1120:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1121:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_PCCARD device according to the specified
1122:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         control parameters in the FMC_PCCARD_HandleTypeDef
1123:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to PCCARD device instance
ARM GAS  /tmp/ccvY9scw.s 			page 38


1124:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Init Pointer to PCCARD Initialization structure   
1125:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1126:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1127:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_PCCARD_Init(FMC_PCCARD_TypeDef *Device, FMC_PCCARD_InitTypeDef *Init)
1128:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 941              		.loc 1 1128 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              		@ link register save eliminated.
 946              	.LVL86:
 947 0000 10B4     		push	{r4}
 948              	.LCFI20:
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 4, -4
 951              	.LVL87:
1129:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;
1130:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1131:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
1132:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_PCCARD_DEVICE(Device));
1133:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_FEATURE(Init->Waitfeature));
1134:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_TCLR_TIME(Init->TCLRSetupTime));
1135:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_TAR_TIME(Init->TARSetupTime));     
1136:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1137:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get PCCARD control register value */
1138:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->PCR4;
 952              		.loc 1 1138 0
 953 0002 0368     		ldr	r3, [r0]
 954              	.LVL88:
1139:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1140:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear TAR, TCLR, PWAITEN and PWID bits */
1141:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PCR4_TAR  | FMC_PCR4_TCLR | FMC_PCR4_PWAITEN | \
 955              		.loc 1 1141 0
 956 0004 23F4FF33 		bic	r3, r3, #130560
 957              	.LVL89:
 958 0008 23F03A03 		bic	r3, r3, #58
 959              	.LVL90:
1142:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PCR4_PWID | FMC_PCR4_PTYP));
1143:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1144:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set FMC_PCCARD device control parameters */
1145:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Init->Waitfeature              |\
 960              		.loc 1 1145 0
 961 000c 0A68     		ldr	r2, [r1]
1146:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      FMC_NAND_PCC_MEM_BUS_WIDTH_16  |\
1147:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (Init->TCLRSetupTime << 9U)     |\
 962              		.loc 1 1147 0
 963 000e 4C68     		ldr	r4, [r1, #4]
1146:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      FMC_NAND_PCC_MEM_BUS_WIDTH_16  |\
 964              		.loc 1 1146 0
 965 0010 42EA4422 		orr	r2, r2, r4, lsl #9
1148:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (Init->TARSetupTime << 13U));
 966              		.loc 1 1148 0
 967 0014 8968     		ldr	r1, [r1, #8]
 968              	.LVL91:
1145:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      FMC_NAND_PCC_MEM_BUS_WIDTH_16  |\
 969              		.loc 1 1145 0
 970 0016 42EA4132 		orr	r2, r2, r1, lsl #13
ARM GAS  /tmp/ccvY9scw.s 			page 39


 971 001a 1343     		orrs	r3, r3, r2
 972              	.LVL92:
 973 001c 43F01003 		orr	r3, r3, #16
 974              	.LVL93:
1149:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1150:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PCR4 = tmpr;
 975              		.loc 1 1150 0
 976 0020 0360     		str	r3, [r0]
1151:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1152:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1153:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 977              		.loc 1 1153 0
 978 0022 0020     		movs	r0, #0
 979              	.LVL94:
 980 0024 5DF8044B 		ldr	r4, [sp], #4
 981              	.LCFI21:
 982              		.cfi_restore 4
 983              		.cfi_def_cfa_offset 0
 984 0028 7047     		bx	lr
 985              		.cfi_endproc
 986              	.LFE132:
 988              		.section	.text.FMC_PCCARD_CommonSpace_Timing_Init,"ax",%progbits
 989              		.align	1
 990              		.global	FMC_PCCARD_CommonSpace_Timing_Init
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.fpu fpv4-sp-d16
 996              	FMC_PCCARD_CommonSpace_Timing_Init:
 997              	.LFB133:
1154:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1155:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1156:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_PCCARD Common space Timing according to the specified
1157:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NAND_PCC_TimingTypeDef
1158:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to PCCARD device instance
1159:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to PCCARD timing structure 
1160:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1161:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1162:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_PCCARD_CommonSpace_Timing_Init(FMC_PCCARD_TypeDef *Device, FMC_NAND_PCC_Timin
1163:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 998              		.loc 1 1163 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003              	.LVL95:
1164:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;
1165:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1166:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1167:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_PCCARD_DEVICE(Device));
1168:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SETUP_TIME(Timing->SetupTime));
1169:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_TIME(Timing->WaitSetupTime));
1170:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HOLD_TIME(Timing->HoldSetupTime));
1171:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HIZ_TIME(Timing->HiZSetupTime));
1172:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1173:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get PCCARD common space timing register value */
1174:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->PMEM4;
ARM GAS  /tmp/ccvY9scw.s 			page 40


 1004              		.loc 1 1174 0
 1005 0000 8368     		ldr	r3, [r0, #8]
 1006              	.LVL96:
1175:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1176:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear MEMSETx, MEMWAITx, MEMHOLDx and MEMHIZx bits */
1177:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PMEM4_MEMSET4  | FMC_PMEM4_MEMWAIT4 | FMC_PMEM4_MEMHOLD4 | \
1178:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PMEM4_MEMHIZ4)); 
1179:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set PCCARD timing parameters */
1180:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->SetupTime                  |\
 1007              		.loc 1 1180 0
 1008 0002 0B68     		ldr	r3, [r1]
1181:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->WaitSetupTime) << 8U)     |\
 1009              		.loc 1 1181 0
 1010 0004 4A68     		ldr	r2, [r1, #4]
1180:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->WaitSetupTime) << 8U)     |\
 1011              		.loc 1 1180 0
 1012 0006 43EA0223 		orr	r3, r3, r2, lsl #8
1182:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->HoldSetupTime) << 16U)    |\
 1013              		.loc 1 1182 0
 1014 000a 8A68     		ldr	r2, [r1, #8]
1181:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->WaitSetupTime) << 8U)     |\
 1015              		.loc 1 1181 0
 1016 000c 43EA0243 		orr	r3, r3, r2, lsl #16
1183:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->HiZSetupTime) << 24U)); 
 1017              		.loc 1 1183 0
 1018 0010 CA68     		ldr	r2, [r1, #12]
1182:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Timing->HoldSetupTime) << 16U)    |\
 1019              		.loc 1 1182 0
 1020 0012 43EA0263 		orr	r3, r3, r2, lsl #24
 1021              	.LVL97:
1184:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1185:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PMEM4 = tmpr;
 1022              		.loc 1 1185 0
 1023 0016 8360     		str	r3, [r0, #8]
1186:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1187:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
1188:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1024              		.loc 1 1188 0
 1025 0018 0020     		movs	r0, #0
 1026              	.LVL98:
 1027 001a 7047     		bx	lr
 1028              		.cfi_endproc
 1029              	.LFE133:
 1031              		.section	.text.FMC_PCCARD_AttributeSpace_Timing_Init,"ax",%progbits
 1032              		.align	1
 1033              		.global	FMC_PCCARD_AttributeSpace_Timing_Init
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu fpv4-sp-d16
 1039              	FMC_PCCARD_AttributeSpace_Timing_Init:
 1040              	.LFB134:
1189:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1190:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1191:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_PCCARD Attribute space Timing according to the specified
1192:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NAND_PCC_TimingTypeDef
1193:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to PCCARD device instance
ARM GAS  /tmp/ccvY9scw.s 			page 41


1194:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to PCCARD timing structure  
1195:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1196:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1197:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_PCCARD_AttributeSpace_Timing_Init(FMC_PCCARD_TypeDef *Device, FMC_NAND_PCC_Ti
1198:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1041              		.loc 1 1198 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046              	.LVL99:
1199:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0U;
1200:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1201:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */ 
1202:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_PCCARD_DEVICE(Device)); 
1203:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SETUP_TIME(Timing->SetupTime));
1204:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_TIME(Timing->WaitSetupTime));
1205:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HOLD_TIME(Timing->HoldSetupTime));
1206:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HIZ_TIME(Timing->HiZSetupTime));
1207:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1208:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get PCCARD timing parameters */
1209:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->PATT4;
 1047              		.loc 1 1209 0
 1048 0000 C368     		ldr	r3, [r0, #12]
 1049              	.LVL100:
1210:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1211:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear ATTSETx, ATTWAITx, ATTHOLDx and ATTHIZx bits */
1212:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PATT4_ATTSET4  | FMC_PATT4_ATTWAIT4 | FMC_PATT4_ATTHOLD4 | \
1213:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PATT4_ATTHIZ4));
1214:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1215:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set PCCARD timing parameters */
1216:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->SetupTime                 |\
 1050              		.loc 1 1216 0
 1051 0002 0B68     		ldr	r3, [r1]
1217:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->WaitSetupTime) << 8U)     |\
 1052              		.loc 1 1217 0
 1053 0004 4A68     		ldr	r2, [r1, #4]
1216:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->WaitSetupTime) << 8U)     |\
 1054              		.loc 1 1216 0
 1055 0006 43EA0223 		orr	r3, r3, r2, lsl #8
1218:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HoldSetupTime) << 16U)    |\
 1056              		.loc 1 1218 0
 1057 000a 8A68     		ldr	r2, [r1, #8]
1217:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->WaitSetupTime) << 8U)     |\
 1058              		.loc 1 1217 0
 1059 000c 43EA0243 		orr	r3, r3, r2, lsl #16
1219:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HiZSetupTime) << 24U));
 1060              		.loc 1 1219 0
 1061 0010 CA68     		ldr	r2, [r1, #12]
1218:HALLIB/Src/stm32f4xx_ll_fmc.c ****                    ((Timing->HoldSetupTime) << 16U)    |\
 1062              		.loc 1 1218 0
 1063 0012 43EA0263 		orr	r3, r3, r2, lsl #24
 1064              	.LVL101:
1220:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PATT4 = tmpr;
 1065              		.loc 1 1220 0
 1066 0016 C360     		str	r3, [r0, #12]
1221:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
ARM GAS  /tmp/ccvY9scw.s 			page 42


1222:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1223:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1067              		.loc 1 1223 0
 1068 0018 0020     		movs	r0, #0
 1069              	.LVL102:
 1070 001a 7047     		bx	lr
 1071              		.cfi_endproc
 1072              	.LFE134:
 1074              		.section	.text.FMC_PCCARD_IOSpace_Timing_Init,"ax",%progbits
 1075              		.align	1
 1076              		.global	FMC_PCCARD_IOSpace_Timing_Init
 1077              		.syntax unified
 1078              		.thumb
 1079              		.thumb_func
 1080              		.fpu fpv4-sp-d16
 1082              	FMC_PCCARD_IOSpace_Timing_Init:
 1083              	.LFB135:
1224:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1225:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1226:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_PCCARD IO space Timing according to the specified
1227:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_NAND_PCC_TimingTypeDef
1228:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to PCCARD device instance
1229:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to PCCARD timing structure  
1230:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1231:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1232:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_PCCARD_IOSpace_Timing_Init(FMC_PCCARD_TypeDef *Device, FMC_NAND_PCC_TimingTyp
1233:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1084              		.loc 1 1233 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089              	.LVL103:
1234:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr = 0;
1235:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1236:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */  
1237:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_PCCARD_DEVICE(Device));
1238:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SETUP_TIME(Timing->SetupTime));
1239:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WAIT_TIME(Timing->WaitSetupTime));
1240:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HOLD_TIME(Timing->HoldSetupTime));
1241:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_HIZ_TIME(Timing->HiZSetupTime));
1242:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1243:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get FMC_PCCARD device timing parameters */
1244:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = Device->PIO4;
 1090              		.loc 1 1244 0
 1091 0000 0369     		ldr	r3, [r0, #16]
 1092              	.LVL104:
1245:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1246:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Clear IOSET4, IOWAIT4, IOHOLD4 and IOHIZ4 bits */
1247:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr &= ((uint32_t)~(FMC_PIO4_IOSET4  | FMC_PIO4_IOWAIT4 | FMC_PIO4_IOHOLD4 | \
1248:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        FMC_PIO4_IOHIZ4));
1249:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1250:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set FMC_PCCARD device timing parameters */
1251:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr |= (uint32_t)(Timing->SetupTime                   |\
 1093              		.loc 1 1251 0
 1094 0002 0B68     		ldr	r3, [r1]
1252:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Timing->WaitSetupTime) << 8U)     |\
ARM GAS  /tmp/ccvY9scw.s 			page 43


 1095              		.loc 1 1252 0
 1096 0004 4A68     		ldr	r2, [r1, #4]
1251:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Timing->WaitSetupTime) << 8U)     |\
 1097              		.loc 1 1251 0
 1098 0006 43EA0223 		orr	r3, r3, r2, lsl #8
1253:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Timing->HoldSetupTime) << 16U)    |\
 1099              		.loc 1 1253 0
 1100 000a 8A68     		ldr	r2, [r1, #8]
1252:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Timing->WaitSetupTime) << 8U)     |\
 1101              		.loc 1 1252 0
 1102 000c 43EA0243 		orr	r3, r3, r2, lsl #16
1254:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Timing->HiZSetupTime) << 24U));   
 1103              		.loc 1 1254 0
 1104 0010 CA68     		ldr	r2, [r1, #12]
1253:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ((Timing->HoldSetupTime) << 16U)    |\
 1105              		.loc 1 1253 0
 1106 0012 43EA0263 		orr	r3, r3, r2, lsl #24
 1107              	.LVL105:
1255:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1256:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PIO4 = tmpr;
 1108              		.loc 1 1256 0
 1109 0016 0361     		str	r3, [r0, #16]
1257:HALLIB/Src/stm32f4xx_ll_fmc.c ****  
1258:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1259:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1110              		.loc 1 1259 0
 1111 0018 0020     		movs	r0, #0
 1112              	.LVL106:
 1113 001a 7047     		bx	lr
 1114              		.cfi_endproc
 1115              	.LFE135:
 1117              		.section	.text.FMC_PCCARD_DeInit,"ax",%progbits
 1118              		.align	1
 1119              		.global	FMC_PCCARD_DeInit
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1123              		.fpu fpv4-sp-d16
 1125              	FMC_PCCARD_DeInit:
 1126              	.LFB136:
1260:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                            
1261:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1262:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  DeInitializes the FMC_PCCARD device 
1263:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to PCCARD device instance
1264:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1265:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1266:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_PCCARD_DeInit(FMC_PCCARD_TypeDef *Device)
1267:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1127              		.loc 1 1267 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              		@ link register save eliminated.
 1132              	.LVL107:
 1133 0000 0346     		mov	r3, r0
1268:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */  
1269:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_PCCARD_DEVICE(Device));
ARM GAS  /tmp/ccvY9scw.s 			page 44


1270:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1271:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable the FMC_PCCARD device */
1272:HALLIB/Src/stm32f4xx_ll_fmc.c ****   __FMC_PCCARD_DISABLE(Device);
 1134              		.loc 1 1272 0
 1135 0002 0268     		ldr	r2, [r0]
 1136 0004 22F00402 		bic	r2, r2, #4
 1137 0008 0260     		str	r2, [r0]
1273:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1274:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* De-initialize the FMC_PCCARD device */
1275:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PCR4    = 0x00000018U; 
 1138              		.loc 1 1275 0
 1139 000a 1822     		movs	r2, #24
 1140 000c 0260     		str	r2, [r0]
1276:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SR4     = 0x00000000U;	
 1141              		.loc 1 1276 0
 1142 000e 0020     		movs	r0, #0
 1143              	.LVL108:
 1144 0010 5860     		str	r0, [r3, #4]
1277:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PMEM4   = 0xFCFCFCFCU;
 1145              		.loc 1 1277 0
 1146 0012 4FF0FC32 		mov	r2, #-50529028
 1147 0016 9A60     		str	r2, [r3, #8]
1278:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PATT4   = 0xFCFCFCFCU;
 1148              		.loc 1 1278 0
 1149 0018 DA60     		str	r2, [r3, #12]
1279:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->PIO4    = 0xFCFCFCFCU;
 1150              		.loc 1 1279 0
 1151 001a 1A61     		str	r2, [r3, #16]
1280:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1281:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1282:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1152              		.loc 1 1282 0
 1153 001c 7047     		bx	lr
 1154              		.cfi_endproc
 1155              	.LFE136:
 1157              		.section	.text.FMC_SDRAM_Init,"ax",%progbits
 1158              		.align	1
 1159              		.global	FMC_SDRAM_Init
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu fpv4-sp-d16
 1165              	FMC_SDRAM_Init:
 1166              	.LFB137:
1283:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1284:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1285:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
1286:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1287:HALLIB/Src/stm32f4xx_ll_fmc.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx */
1288:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1289:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1290:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_SDRAM
1291:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief    SDRAM Controller functions 
1292:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
1293:HALLIB/Src/stm32f4xx_ll_fmc.c ****   @verbatim 
1294:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1295:HALLIB/Src/stm32f4xx_ll_fmc.c ****                      ##### How to use SDRAM device driver #####
ARM GAS  /tmp/ccvY9scw.s 			page 45


1296:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1297:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..] 
1298:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This driver contains a set of APIs to interface with the FMC SDRAM banks in order
1299:HALLIB/Src/stm32f4xx_ll_fmc.c ****     to run the SDRAM external devices.
1300:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1301:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC SDRAM bank reset using the function FMC_SDRAM_DeInit() 
1302:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC SDRAM bank control configuration using the function FMC_SDRAM_Init()
1303:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC SDRAM bank timing configuration using the function FMC_SDRAM_Timing_Init()
1304:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC SDRAM bank enable/disable write operation using the functions
1305:HALLIB/Src/stm32f4xx_ll_fmc.c ****         FMC_SDRAM_WriteOperation_Enable()/FMC_SDRAM_WriteOperation_Disable()   
1306:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) FMC SDRAM bank send command using the function FMC_SDRAM_SendCommand()      
1307:HALLIB/Src/stm32f4xx_ll_fmc.c ****        
1308:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
1309:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
1310:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1311:HALLIB/Src/stm32f4xx_ll_fmc.c ****          
1312:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_SDRAM_Private_Functions_Group1
1313:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *  @brief    Initialization and Configuration functions 
1314:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
1315:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim    
1316:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1317:HALLIB/Src/stm32f4xx_ll_fmc.c ****               ##### Initialization and de_initialization functions #####
1318:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1319:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]  
1320:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This section provides functions allowing to:
1321:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Initialize and configure the FMC SDRAM interface
1322:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) De-initialize the FMC SDRAM interface 
1323:HALLIB/Src/stm32f4xx_ll_fmc.c ****     (+) Configure the FMC clock and associated GPIOs
1324:HALLIB/Src/stm32f4xx_ll_fmc.c ****         
1325:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
1326:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
1327:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1328:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1329:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1330:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_SDRAM device according to the specified
1331:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         control parameters in the FMC_SDRAM_InitTypeDef
1332:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance
1333:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Init Pointer to SDRAM Initialization structure   
1334:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1335:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1336:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
1337:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1167              		.loc 1 1337 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172              	.LVL109:
 1173 0000 30B4     		push	{r4, r5}
 1174              	.LCFI22:
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 4, -8
 1177              		.cfi_offset 5, -4
 1178              	.LVL110:
1338:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr1 = 0U;
1339:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr2 = 0U;
1340:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
ARM GAS  /tmp/ccvY9scw.s 			page 46


1341:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1342:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1343:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_BANK(Init->SDBank));
1344:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_COLUMNBITS_NUMBER(Init->ColumnBitsNumber));
1345:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ROWBITS_NUMBER(Init->RowBitsNumber));
1346:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDMEMORY_WIDTH(Init->MemoryDataWidth));
1347:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_INTERNALBANK_NUMBER(Init->InternalBankNumber));
1348:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_CAS_LATENCY(Init->CASLatency));
1349:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WRITE_PROTECTION(Init->WriteProtection));
1350:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
1351:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
1352:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   
1353:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1354:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set SDRAM bank configuration parameters */
1355:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if (Init->SDBank != FMC_SDRAM_BANK2) 
 1179              		.loc 1 1355 0
 1180 0002 0B68     		ldr	r3, [r1]
 1181 0004 012B     		cmp	r3, #1
 1182 0006 1AD0     		beq	.L92
1356:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {    
1357:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 1183              		.loc 1 1357 0
 1184 0008 0268     		ldr	r2, [r0]
 1185              	.LVL111:
1358:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1359:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
1360:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 1186              		.loc 1 1360 0
 1187 000a 22F4FF42 		bic	r2, r2, #32640
 1188              	.LVL112:
 1189 000e 22F07F02 		bic	r2, r2, #127
 1190              	.LVL113:
1361:HALLIB/Src/stm32f4xx_ll_fmc.c ****                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
1362:HALLIB/Src/stm32f4xx_ll_fmc.c ****                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
1363:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1364:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1365:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 1191              		.loc 1 1365 0
 1192 0012 4B68     		ldr	r3, [r1, #4]
1366:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->RowBitsNumber      |\
 1193              		.loc 1 1366 0
 1194 0014 8C68     		ldr	r4, [r1, #8]
1365:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->RowBitsNumber      |\
 1195              		.loc 1 1365 0
 1196 0016 2343     		orrs	r3, r3, r4
1367:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->MemoryDataWidth    |\
 1197              		.loc 1 1367 0
 1198 0018 CC68     		ldr	r4, [r1, #12]
1366:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->RowBitsNumber      |\
 1199              		.loc 1 1366 0
 1200 001a 2343     		orrs	r3, r3, r4
1368:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->InternalBankNumber |\
 1201              		.loc 1 1368 0
 1202 001c 0C69     		ldr	r4, [r1, #16]
1367:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->MemoryDataWidth    |\
 1203              		.loc 1 1367 0
 1204 001e 2343     		orrs	r3, r3, r4
ARM GAS  /tmp/ccvY9scw.s 			page 47


1369:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->CASLatency         |\
 1205              		.loc 1 1369 0
 1206 0020 4C69     		ldr	r4, [r1, #20]
1368:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->InternalBankNumber |\
 1207              		.loc 1 1368 0
 1208 0022 2343     		orrs	r3, r3, r4
1370:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->WriteProtection    |\
 1209              		.loc 1 1370 0
 1210 0024 8C69     		ldr	r4, [r1, #24]
1369:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->CASLatency         |\
 1211              		.loc 1 1369 0
 1212 0026 2343     		orrs	r3, r3, r4
1371:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->SDClockPeriod      |\
 1213              		.loc 1 1371 0
 1214 0028 CC69     		ldr	r4, [r1, #28]
1370:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->WriteProtection    |\
 1215              		.loc 1 1370 0
 1216 002a 2343     		orrs	r3, r3, r4
1372:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->ReadBurst          |\
 1217              		.loc 1 1372 0
 1218 002c 0C6A     		ldr	r4, [r1, #32]
1371:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->SDClockPeriod      |\
 1219              		.loc 1 1371 0
 1220 002e 2343     		orrs	r3, r3, r4
1373:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->ReadPipeDelay
 1221              		.loc 1 1373 0
 1222 0030 496A     		ldr	r1, [r1, #36]
 1223              	.LVL114:
1372:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->ReadBurst          |\
 1224              		.loc 1 1372 0
 1225 0032 0B43     		orrs	r3, r3, r1
1365:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                Init->RowBitsNumber      |\
 1226              		.loc 1 1365 0
 1227 0034 1343     		orrs	r3, r3, r2
 1228              	.LVL115:
1374:HALLIB/Src/stm32f4xx_ll_fmc.c ****                                                );
1375:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 1229              		.loc 1 1375 0
 1230 0036 0360     		str	r3, [r0]
 1231              	.LVL116:
 1232              	.L93:
1376:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1377:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else /* FMC_Bank2_SDRAM */                      
1378:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1379:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
1380:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1381:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
1382:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
1383:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1384:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
1385:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         Init->ReadBurst          |\
1386:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         Init->ReadPipeDelay);  
1387:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1388:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
1389:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1390:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
1391:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
ARM GAS  /tmp/ccvY9scw.s 			page 48


1392:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
1393:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
1394:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1395:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
1396:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->RowBitsNumber      |\
1397:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->MemoryDataWidth    |\
1398:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->InternalBankNumber |\
1399:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->CASLatency         |\
1400:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->WriteProtection);
1401:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1402:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
1403:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
1404:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }  
1405:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1406:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1407:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1233              		.loc 1 1407 0
 1234 0038 0020     		movs	r0, #0
 1235              	.LVL117:
 1236 003a 30BC     		pop	{r4, r5}
 1237              	.LCFI23:
 1238              		.cfi_remember_state
 1239              		.cfi_restore 5
 1240              		.cfi_restore 4
 1241              		.cfi_def_cfa_offset 0
 1242 003c 7047     		bx	lr
 1243              	.LVL118:
 1244              	.L92:
 1245              	.LCFI24:
 1246              		.cfi_restore_state
1379:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1247              		.loc 1 1379 0
 1248 003e 0468     		ldr	r4, [r0]
 1249              	.LVL119:
1382:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1250              		.loc 1 1382 0
 1251 0040 24F4F844 		bic	r4, r4, #31744
 1252              	.LVL120:
1384:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         Init->ReadBurst          |\
 1253              		.loc 1 1384 0
 1254 0044 CB69     		ldr	r3, [r1, #28]
1385:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         Init->ReadPipeDelay);  
 1255              		.loc 1 1385 0
 1256 0046 0A6A     		ldr	r2, [r1, #32]
1384:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         Init->ReadBurst          |\
 1257              		.loc 1 1384 0
 1258 0048 1343     		orrs	r3, r3, r2
1386:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1259              		.loc 1 1386 0
 1260 004a 4A6A     		ldr	r2, [r1, #36]
1385:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         Init->ReadPipeDelay);  
 1261              		.loc 1 1385 0
 1262 004c 1343     		orrs	r3, r3, r2
1384:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         Init->ReadBurst          |\
 1263              		.loc 1 1384 0
 1264 004e 1C43     		orrs	r4, r4, r3
 1265              	.LVL121:
ARM GAS  /tmp/ccvY9scw.s 			page 49


1388:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1266              		.loc 1 1388 0
 1267 0050 4268     		ldr	r2, [r0, #4]
 1268              	.LVL122:
1391:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
 1269              		.loc 1 1391 0
 1270 0052 22F4FF42 		bic	r2, r2, #32640
 1271              	.LVL123:
 1272 0056 22F07F02 		bic	r2, r2, #127
 1273              	.LVL124:
1395:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->RowBitsNumber      |\
 1274              		.loc 1 1395 0
 1275 005a 4B68     		ldr	r3, [r1, #4]
1396:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->MemoryDataWidth    |\
 1276              		.loc 1 1396 0
 1277 005c 8D68     		ldr	r5, [r1, #8]
1395:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->RowBitsNumber      |\
 1278              		.loc 1 1395 0
 1279 005e 2B43     		orrs	r3, r3, r5
1397:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->InternalBankNumber |\
 1280              		.loc 1 1397 0
 1281 0060 CD68     		ldr	r5, [r1, #12]
1396:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->MemoryDataWidth    |\
 1282              		.loc 1 1396 0
 1283 0062 2B43     		orrs	r3, r3, r5
1398:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->CASLatency         |\
 1284              		.loc 1 1398 0
 1285 0064 0D69     		ldr	r5, [r1, #16]
1397:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->InternalBankNumber |\
 1286              		.loc 1 1397 0
 1287 0066 2B43     		orrs	r3, r3, r5
1399:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->WriteProtection);
 1288              		.loc 1 1399 0
 1289 0068 4D69     		ldr	r5, [r1, #20]
1398:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->CASLatency         |\
 1290              		.loc 1 1398 0
 1291 006a 2B43     		orrs	r3, r3, r5
1400:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 1292              		.loc 1 1400 0
 1293 006c 8969     		ldr	r1, [r1, #24]
 1294              	.LVL125:
1399:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->WriteProtection);
 1295              		.loc 1 1399 0
 1296 006e 0B43     		orrs	r3, r3, r1
1395:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        Init->RowBitsNumber      |\
 1297              		.loc 1 1395 0
 1298 0070 1343     		orrs	r3, r3, r2
 1299              	.LVL126:
1402:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 1300              		.loc 1 1402 0
 1301 0072 0460     		str	r4, [r0]
1403:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }  
 1302              		.loc 1 1403 0
 1303 0074 4360     		str	r3, [r0, #4]
 1304 0076 DFE7     		b	.L93
 1305              		.cfi_endproc
 1306              	.LFE137:
ARM GAS  /tmp/ccvY9scw.s 			page 50


 1308              		.section	.text.FMC_SDRAM_Timing_Init,"ax",%progbits
 1309              		.align	1
 1310              		.global	FMC_SDRAM_Timing_Init
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	FMC_SDRAM_Timing_Init:
 1317              	.LFB138:
1408:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1409:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1410:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Initializes the FMC_SDRAM device timing according to the specified
1411:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         parameters in the FMC_SDRAM_TimingTypeDef
1412:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance
1413:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to SDRAM Timing structure
1414:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank SDRAM bank number   
1415:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1416:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1417:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing,
1418:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1318              		.loc 1 1418 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323              	.LVL127:
 1324 0000 30B4     		push	{r4, r5}
 1325              	.LCFI25:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 4, -8
 1328              		.cfi_offset 5, -4
 1329              	.LVL128:
1419:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr1 = 0U;
1420:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpr2 = 0U;
1421:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1422:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1423:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1424:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_LOADTOACTIVE_DELAY(Timing->LoadToActiveDelay));
1425:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_EXITSELFREFRESH_DELAY(Timing->ExitSelfRefreshDelay));
1426:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SELFREFRESH_TIME(Timing->SelfRefreshTime));
1427:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_ROWCYCLE_DELAY(Timing->RowCycleDelay));
1428:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_WRITE_RECOVERY_TIME(Timing->WriteRecoveryTime));
1429:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
1430:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
1431:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_BANK(Bank));
1432:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1433:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set SDRAM device timing parameters */ 
1434:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if (Bank != FMC_SDRAM_BANK2) 
 1330              		.loc 1 1434 0
 1331 0002 012A     		cmp	r2, #1
 1332 0004 21D0     		beq	.L96
1435:HALLIB/Src/stm32f4xx_ll_fmc.c ****   { 
1436:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 1333              		.loc 1 1436 0
 1334 0006 8268     		ldr	r2, [r0, #8]
 1335              	.LVL129:
1437:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
ARM GAS  /tmp/ccvY9scw.s 			page 51


1438:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
1439:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 1336              		.loc 1 1439 0
 1337 0008 02F07042 		and	r2, r2, #-268435456
 1338              	.LVL130:
1440:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
1441:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDTR1_TRCD));
1442:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1443:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 1339              		.loc 1 1443 0
 1340 000c 0B68     		ldr	r3, [r1]
 1341 000e 013B     		subs	r3, r3, #1
1444:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 1342              		.loc 1 1444 0
 1343 0010 4C68     		ldr	r4, [r1, #4]
 1344 0012 013C     		subs	r4, r4, #1
1443:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 1345              		.loc 1 1443 0
 1346 0014 43EA0413 		orr	r3, r3, r4, lsl #4
1445:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 1347              		.loc 1 1445 0
 1348 0018 8C68     		ldr	r4, [r1, #8]
 1349 001a 013C     		subs	r4, r4, #1
1444:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 1350              		.loc 1 1444 0
 1351 001c 43EA0423 		orr	r3, r3, r4, lsl #8
1446:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->RowCycleDelay)-1U) << 12U)       |\
 1352              		.loc 1 1446 0
 1353 0020 CC68     		ldr	r4, [r1, #12]
 1354 0022 013C     		subs	r4, r4, #1
1445:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 1355              		.loc 1 1445 0
 1356 0024 43EA0433 		orr	r3, r3, r4, lsl #12
1447:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 1357              		.loc 1 1447 0
 1358 0028 0C69     		ldr	r4, [r1, #16]
 1359 002a 013C     		subs	r4, r4, #1
1446:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->RowCycleDelay)-1U) << 12U)       |\
 1360              		.loc 1 1446 0
 1361 002c 43EA0443 		orr	r3, r3, r4, lsl #16
1448:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->RPDelay)-1U) << 20U)             |\
 1362              		.loc 1 1448 0
 1363 0030 4C69     		ldr	r4, [r1, #20]
 1364 0032 013C     		subs	r4, r4, #1
1447:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 1365              		.loc 1 1447 0
 1366 0034 43EA0453 		orr	r3, r3, r4, lsl #20
1449:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->RCDDelay)-1U) << 24U));
 1367              		.loc 1 1449 0
 1368 0038 8969     		ldr	r1, [r1, #24]
 1369              	.LVL131:
 1370 003a 0139     		subs	r1, r1, #1
1443:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 1371              		.loc 1 1443 0
 1372 003c 43EA0163 		orr	r3, r3, r1, lsl #24
 1373 0040 1343     		orrs	r3, r3, r2
 1374              	.LVL132:
ARM GAS  /tmp/ccvY9scw.s 			page 52


1450:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 1375              		.loc 1 1450 0
 1376 0042 8360     		str	r3, [r0, #8]
 1377              	.LVL133:
 1378              	.L97:
1451:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1452:HALLIB/Src/stm32f4xx_ll_fmc.c ****    else /* FMC_Bank2_SDRAM */
1453:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1454:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
1455:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1456:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Clear TRC and TRP bits */
1457:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
1458:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1459:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
1460:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         (((Timing->RPDelay)-1U) << 20U)); 
1461:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1462:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
1463:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1464:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
1465:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
1466:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
1467:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDTR1_TRCD));
1468:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1469:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
1470:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
1471:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->SelfRefreshTime)-1U) << 8U)       |\
1472:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
1473:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->RCDDelay)-1U) << 24U)));   
1474:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1475:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
1476:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
1477:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1478:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1479:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1379              		.loc 1 1479 0
 1380 0044 0020     		movs	r0, #0
 1381              	.LVL134:
 1382 0046 30BC     		pop	{r4, r5}
 1383              	.LCFI26:
 1384              		.cfi_remember_state
 1385              		.cfi_restore 5
 1386              		.cfi_restore 4
 1387              		.cfi_def_cfa_offset 0
 1388 0048 7047     		bx	lr
 1389              	.LVL135:
 1390              	.L96:
 1391              	.LCFI27:
 1392              		.cfi_restore_state
1454:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1393              		.loc 1 1454 0
 1394 004a 8268     		ldr	r2, [r0, #8]
 1395              	.LVL136:
1457:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1396              		.loc 1 1457 0
 1397 004c 22F47002 		bic	r2, r2, #15728640
 1398              	.LVL137:
 1399 0050 22F47042 		bic	r2, r2, #61440
ARM GAS  /tmp/ccvY9scw.s 			page 53


 1400              	.LVL138:
1459:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         (((Timing->RPDelay)-1U) << 20U)); 
 1401              		.loc 1 1459 0
 1402 0054 CB68     		ldr	r3, [r1, #12]
 1403 0056 5C1E     		subs	r4, r3, #1
1460:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1404              		.loc 1 1460 0
 1405 0058 4B69     		ldr	r3, [r1, #20]
 1406 005a 013B     		subs	r3, r3, #1
 1407 005c 1B05     		lsls	r3, r3, #20
1459:HALLIB/Src/stm32f4xx_ll_fmc.c ****                         (((Timing->RPDelay)-1U) << 20U)); 
 1408              		.loc 1 1459 0
 1409 005e 43EA0433 		orr	r3, r3, r4, lsl #12
 1410 0062 1A43     		orrs	r2, r2, r3
 1411              	.LVL139:
1462:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
 1412              		.loc 1 1462 0
 1413 0064 C468     		ldr	r4, [r0, #12]
 1414              	.LVL140:
1465:HALLIB/Src/stm32f4xx_ll_fmc.c ****                           FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
 1415              		.loc 1 1465 0
 1416 0066 04F07044 		and	r4, r4, #-268435456
 1417              	.LVL141:
1469:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 1418              		.loc 1 1469 0
 1419 006a 0B68     		ldr	r3, [r1]
 1420 006c 013B     		subs	r3, r3, #1
1470:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 1421              		.loc 1 1470 0
 1422 006e 4D68     		ldr	r5, [r1, #4]
 1423 0070 013D     		subs	r5, r5, #1
1469:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 1424              		.loc 1 1469 0
 1425 0072 43EA0513 		orr	r3, r3, r5, lsl #4
1471:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 1426              		.loc 1 1471 0
 1427 0076 8D68     		ldr	r5, [r1, #8]
 1428 0078 013D     		subs	r5, r5, #1
1470:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 1429              		.loc 1 1470 0
 1430 007a 43EA0523 		orr	r3, r3, r5, lsl #8
1472:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->RCDDelay)-1U) << 24U)));   
 1431              		.loc 1 1472 0
 1432 007e 0D69     		ldr	r5, [r1, #16]
 1433 0080 013D     		subs	r5, r5, #1
1471:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 1434              		.loc 1 1471 0
 1435 0082 43EA0543 		orr	r3, r3, r5, lsl #16
1473:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
 1436              		.loc 1 1473 0
 1437 0086 8969     		ldr	r1, [r1, #24]
 1438              	.LVL142:
 1439 0088 0139     		subs	r1, r1, #1
1469:HALLIB/Src/stm32f4xx_ll_fmc.c ****                        (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 1440              		.loc 1 1469 0
 1441 008a 43EA0163 		orr	r3, r3, r1, lsl #24
 1442 008e 2343     		orrs	r3, r3, r4
ARM GAS  /tmp/ccvY9scw.s 			page 54


 1443              	.LVL143:
1475:HALLIB/Src/stm32f4xx_ll_fmc.c ****     Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 1444              		.loc 1 1475 0
 1445 0090 8260     		str	r2, [r0, #8]
1476:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 1446              		.loc 1 1476 0
 1447 0092 C360     		str	r3, [r0, #12]
 1448 0094 D6E7     		b	.L97
 1449              		.cfi_endproc
 1450              	.LFE138:
 1452              		.section	.text.FMC_SDRAM_DeInit,"ax",%progbits
 1453              		.align	1
 1454              		.global	FMC_SDRAM_DeInit
 1455              		.syntax unified
 1456              		.thumb
 1457              		.thumb_func
 1458              		.fpu fpv4-sp-d16
 1460              	FMC_SDRAM_DeInit:
 1461              	.LFB139:
1480:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1481:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1482:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  DeInitializes the FMC_SDRAM peripheral 
1483:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance
1484:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1485:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1486:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
1487:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1462              		.loc 1 1487 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
 1467              	.LVL144:
 1468 0000 0346     		mov	r3, r0
1488:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1489:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1490:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_BANK(Bank));
1491:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1492:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* De-initialize the SDRAM device */
1493:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDCR[Bank] = 0x000002D0U;
 1469              		.loc 1 1493 0
 1470 0002 4FF43472 		mov	r2, #720
 1471 0006 40F82120 		str	r2, [r0, r1, lsl #2]
1494:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDTR[Bank] = 0x0FFFFFFFU;    
 1472              		.loc 1 1494 0
 1473 000a 0231     		adds	r1, r1, #2
 1474              	.LVL145:
 1475 000c 6FF07042 		mvn	r2, #-268435456
 1476 0010 40F82120 		str	r2, [r0, r1, lsl #2]
1495:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDCMR      = 0x00000000U;
 1477              		.loc 1 1495 0
 1478 0014 0020     		movs	r0, #0
 1479              	.LVL146:
 1480 0016 1861     		str	r0, [r3, #16]
1496:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDRTR      = 0x00000000U;
 1481              		.loc 1 1496 0
 1482 0018 5861     		str	r0, [r3, #20]
ARM GAS  /tmp/ccvY9scw.s 			page 55


1497:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDSR       = 0x00000000U;
 1483              		.loc 1 1497 0
 1484 001a 9861     		str	r0, [r3, #24]
1498:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1499:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1500:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1485              		.loc 1 1500 0
 1486 001c 7047     		bx	lr
 1487              		.cfi_endproc
 1488              	.LFE139:
 1490              		.section	.text.FMC_SDRAM_WriteProtection_Enable,"ax",%progbits
 1491              		.align	1
 1492              		.global	FMC_SDRAM_WriteProtection_Enable
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
 1498              	FMC_SDRAM_WriteProtection_Enable:
 1499              	.LFB140:
1501:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1502:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1503:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @}
1504:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1505:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1506:HALLIB/Src/stm32f4xx_ll_fmc.c **** /** @addtogroup FMC_LL_SDRAMPrivate_Functions_Group2
1507:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *  @brief   management functions 
1508:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *
1509:HALLIB/Src/stm32f4xx_ll_fmc.c **** @verbatim   
1510:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================
1511:HALLIB/Src/stm32f4xx_ll_fmc.c ****                       ##### FMC_SDRAM Control functions #####
1512:HALLIB/Src/stm32f4xx_ll_fmc.c ****   ==============================================================================  
1513:HALLIB/Src/stm32f4xx_ll_fmc.c ****   [..]
1514:HALLIB/Src/stm32f4xx_ll_fmc.c ****     This subsection provides a set of functions allowing to control dynamically
1515:HALLIB/Src/stm32f4xx_ll_fmc.c ****     the FMC SDRAM interface.
1516:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1517:HALLIB/Src/stm32f4xx_ll_fmc.c **** @endverbatim
1518:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @{
1519:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1520:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1521:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Enables dynamically FMC_SDRAM write protection.
1522:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance
1523:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank SDRAM bank number 
1524:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1525:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1526:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_WriteProtection_Enable(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
1527:HALLIB/Src/stm32f4xx_ll_fmc.c **** { 
 1500              		.loc 1 1527 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              		@ link register save eliminated.
 1505              	.LVL147:
1528:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1529:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1530:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_BANK(Bank));
1531:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1532:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Enable write protection */
ARM GAS  /tmp/ccvY9scw.s 			page 56


1533:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDCR[Bank] |= FMC_SDRAM_WRITE_PROTECTION_ENABLE;
 1506              		.loc 1 1533 0
 1507 0000 50F82130 		ldr	r3, [r0, r1, lsl #2]
 1508 0004 43F40073 		orr	r3, r3, #512
 1509 0008 40F82130 		str	r3, [r0, r1, lsl #2]
1534:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1535:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
1536:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1510              		.loc 1 1536 0
 1511 000c 0020     		movs	r0, #0
 1512              	.LVL148:
 1513 000e 7047     		bx	lr
 1514              		.cfi_endproc
 1515              	.LFE140:
 1517              		.section	.text.FMC_SDRAM_WriteProtection_Disable,"ax",%progbits
 1518              		.align	1
 1519              		.global	FMC_SDRAM_WriteProtection_Disable
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1523              		.fpu fpv4-sp-d16
 1525              	FMC_SDRAM_WriteProtection_Disable:
 1526              	.LFB141:
1537:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1538:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1539:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Disables dynamically FMC_SDRAM write protection.
1540:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  hsdram FMC_SDRAM handle
1541:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL status
1542:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1543:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_WriteProtection_Disable(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
1544:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1527              		.loc 1 1544 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
 1532              	.LVL149:
1545:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1546:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1547:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_BANK(Bank));
1548:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1549:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Disable write protection */
1550:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDCR[Bank] &= ~FMC_SDRAM_WRITE_PROTECTION_ENABLE;
 1533              		.loc 1 1550 0
 1534 0000 50F82130 		ldr	r3, [r0, r1, lsl #2]
 1535 0004 23F40073 		bic	r3, r3, #512
 1536 0008 40F82130 		str	r3, [r0, r1, lsl #2]
1551:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1552:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
1553:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1537              		.loc 1 1553 0
 1538 000c 0020     		movs	r0, #0
 1539              	.LVL150:
 1540 000e 7047     		bx	lr
 1541              		.cfi_endproc
 1542              	.LFE141:
 1544              		.section	.text.FMC_SDRAM_SendCommand,"ax",%progbits
ARM GAS  /tmp/ccvY9scw.s 			page 57


 1545              		.align	1
 1546              		.global	FMC_SDRAM_SendCommand
 1547              		.syntax unified
 1548              		.thumb
 1549              		.thumb_func
 1550              		.fpu fpv4-sp-d16
 1552              	FMC_SDRAM_SendCommand:
 1553              	.LFB142:
1554:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1555:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1556:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Send Command to the FMC SDRAM bank
1557:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance
1558:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Command Pointer to SDRAM command structure   
1559:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timing Pointer to SDRAM Timing structure
1560:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Timeout Timeout wait value
1561:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL state
1562:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */  
1563:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Comman
1564:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1554              		.loc 1 1564 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 8
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              	.LVL151:
 1559 0000 70B5     		push	{r4, r5, r6, lr}
 1560              	.LCFI28:
 1561              		.cfi_def_cfa_offset 16
 1562              		.cfi_offset 4, -16
 1563              		.cfi_offset 5, -12
 1564              		.cfi_offset 6, -8
 1565              		.cfi_offset 14, -4
 1566 0002 82B0     		sub	sp, sp, #8
 1567              	.LCFI29:
 1568              		.cfi_def_cfa_offset 24
 1569 0004 0446     		mov	r4, r0
 1570 0006 1546     		mov	r5, r2
1565:HALLIB/Src/stm32f4xx_ll_fmc.c ****   __IO uint32_t tmpr = 0U;
 1571              		.loc 1 1565 0
 1572 0008 0023     		movs	r3, #0
 1573 000a 0193     		str	r3, [sp, #4]
 1574              	.LVL152:
1566:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tickstart = 0U;
1567:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1568:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1569:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1570:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_COMMAND_MODE(Command->CommandMode));
1571:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
1572:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
1573:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  
1574:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1575:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set command register */
1576:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tmpr = (uint32_t)((Command->CommandMode)                  |\
 1575              		.loc 1 1576 0
 1576 000c 0B68     		ldr	r3, [r1]
1577:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (Command->CommandTarget)                |\
 1577              		.loc 1 1577 0
 1578 000e 4A68     		ldr	r2, [r1, #4]
ARM GAS  /tmp/ccvY9scw.s 			page 58


 1579              	.LVL153:
1576:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (Command->CommandTarget)                |\
 1580              		.loc 1 1576 0
 1581 0010 1343     		orrs	r3, r3, r2
1578:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (((Command->AutoRefreshNumber)-1U) << 5U) |\
 1582              		.loc 1 1578 0
 1583 0012 8A68     		ldr	r2, [r1, #8]
 1584 0014 013A     		subs	r2, r2, #1
1577:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (Command->CommandTarget)                |\
 1585              		.loc 1 1577 0
 1586 0016 43EA4213 		orr	r3, r3, r2, lsl #5
1579:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     ((Command->ModeRegisterDefinition) << 9U)
 1587              		.loc 1 1579 0
 1588 001a CA68     		ldr	r2, [r1, #12]
1576:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     (Command->CommandTarget)                |\
 1589              		.loc 1 1576 0
 1590 001c 43EA4223 		orr	r3, r3, r2, lsl #9
 1591 0020 0193     		str	r3, [sp, #4]
1580:HALLIB/Src/stm32f4xx_ll_fmc.c ****                     );
1581:HALLIB/Src/stm32f4xx_ll_fmc.c ****     
1582:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDCMR = tmpr;
 1592              		.loc 1 1582 0
 1593 0022 019B     		ldr	r3, [sp, #4]
 1594 0024 0361     		str	r3, [r0, #16]
1583:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1584:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get tick */ 
1585:HALLIB/Src/stm32f4xx_ll_fmc.c ****   tickstart = HAL_GetTick();
 1595              		.loc 1 1585 0
 1596 0026 FFF7FEFF 		bl	HAL_GetTick
 1597              	.LVL154:
 1598 002a 0646     		mov	r6, r0
 1599              	.LVL155:
 1600              	.L104:
1586:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1587:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Wait until command is send */
1588:HALLIB/Src/stm32f4xx_ll_fmc.c ****   while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 1601              		.loc 1 1588 0
 1602 002c A369     		ldr	r3, [r4, #24]
 1603 002e 13F0200F 		tst	r3, #32
 1604 0032 0AD0     		beq	.L110
1589:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1590:HALLIB/Src/stm32f4xx_ll_fmc.c ****     /* Check for the Timeout */
1591:HALLIB/Src/stm32f4xx_ll_fmc.c ****     if(Timeout != HAL_MAX_DELAY)
 1605              		.loc 1 1591 0
 1606 0034 B5F1FF3F 		cmp	r5, #-1
 1607 0038 F8D0     		beq	.L104
1592:HALLIB/Src/stm32f4xx_ll_fmc.c ****     {
1593:HALLIB/Src/stm32f4xx_ll_fmc.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 1608              		.loc 1 1593 0
 1609 003a 4DB1     		cbz	r5, .L107
 1610              		.loc 1 1593 0 is_stmt 0 discriminator 1
 1611 003c FFF7FEFF 		bl	HAL_GetTick
 1612              	.LVL156:
 1613 0040 801B     		subs	r0, r0, r6
 1614 0042 8542     		cmp	r5, r0
 1615 0044 F2D2     		bcs	.L104
1594:HALLIB/Src/stm32f4xx_ll_fmc.c ****       {
ARM GAS  /tmp/ccvY9scw.s 			page 59


1595:HALLIB/Src/stm32f4xx_ll_fmc.c ****         return HAL_TIMEOUT;
 1616              		.loc 1 1595 0 is_stmt 1
 1617 0046 0320     		movs	r0, #3
 1618 0048 00E0     		b	.L105
 1619              	.L110:
1596:HALLIB/Src/stm32f4xx_ll_fmc.c ****       }
1597:HALLIB/Src/stm32f4xx_ll_fmc.c ****     }
1598:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1599:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1600:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;
 1620              		.loc 1 1600 0
 1621 004a 0020     		movs	r0, #0
 1622              	.L105:
1601:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1623              		.loc 1 1601 0
 1624 004c 02B0     		add	sp, sp, #8
 1625              	.LCFI30:
 1626              		.cfi_remember_state
 1627              		.cfi_def_cfa_offset 16
 1628              		@ sp needed
 1629 004e 70BD     		pop	{r4, r5, r6, pc}
 1630              	.LVL157:
 1631              	.L107:
 1632              	.LCFI31:
 1633              		.cfi_restore_state
1595:HALLIB/Src/stm32f4xx_ll_fmc.c ****       }
 1634              		.loc 1 1595 0
 1635 0050 0320     		movs	r0, #3
 1636 0052 FBE7     		b	.L105
 1637              		.cfi_endproc
 1638              	.LFE142:
 1640              		.section	.text.FMC_SDRAM_ProgramRefreshRate,"ax",%progbits
 1641              		.align	1
 1642              		.global	FMC_SDRAM_ProgramRefreshRate
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1646              		.fpu fpv4-sp-d16
 1648              	FMC_SDRAM_ProgramRefreshRate:
 1649              	.LFB143:
1602:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1603:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1604:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Program the SDRAM Memory Refresh rate.
1605:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance  
1606:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  RefreshRate The SDRAM refresh rate value.
1607:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval HAL state
1608:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1609:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
1610:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1650              		.loc 1 1610 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
 1655              	.LVL158:
1611:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1612:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
ARM GAS  /tmp/ccvY9scw.s 			page 60


1613:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
1614:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1615:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set the refresh rate in command register */
1616:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDRTR |= (RefreshRate<<1U);
 1656              		.loc 1 1616 0
 1657 0000 4369     		ldr	r3, [r0, #20]
 1658 0002 43EA4101 		orr	r1, r3, r1, lsl #1
 1659              	.LVL159:
 1660 0006 4161     		str	r1, [r0, #20]
1617:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1618:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;   
1619:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1661              		.loc 1 1619 0
 1662 0008 0020     		movs	r0, #0
 1663              	.LVL160:
 1664 000a 7047     		bx	lr
 1665              		.cfi_endproc
 1666              	.LFE143:
 1668              		.section	.text.FMC_SDRAM_SetAutoRefreshNumber,"ax",%progbits
 1669              		.align	1
 1670              		.global	FMC_SDRAM_SetAutoRefreshNumber
 1671              		.syntax unified
 1672              		.thumb
 1673              		.thumb_func
 1674              		.fpu fpv4-sp-d16
 1676              	FMC_SDRAM_SetAutoRefreshNumber:
 1677              	.LFB144:
1620:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1621:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1622:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Set the Number of consecutive SDRAM Memory auto Refresh commands.
1623:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance  
1624:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  AutoRefreshNumber Specifies the auto Refresh number.       
1625:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval None
1626:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1627:HALLIB/Src/stm32f4xx_ll_fmc.c **** HAL_StatusTypeDef FMC_SDRAM_SetAutoRefreshNumber(FMC_SDRAM_TypeDef *Device, uint32_t AutoRefreshNum
1628:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1678              		.loc 1 1628 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 0
 1681              		@ frame_needed = 0, uses_anonymous_args = 0
 1682              		@ link register save eliminated.
 1683              	.LVL161:
1629:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1630:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1631:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_AUTOREFRESH_NUMBER(AutoRefreshNumber));
1632:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1633:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Set the Auto-refresh number in command register */
1634:HALLIB/Src/stm32f4xx_ll_fmc.c ****   Device->SDCMR |= (AutoRefreshNumber << 5U); 
 1684              		.loc 1 1634 0
 1685 0000 0369     		ldr	r3, [r0, #16]
 1686 0002 43EA4111 		orr	r1, r3, r1, lsl #5
 1687              	.LVL162:
 1688 0006 0161     		str	r1, [r0, #16]
1635:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1636:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return HAL_OK;  
1637:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1689              		.loc 1 1637 0
ARM GAS  /tmp/ccvY9scw.s 			page 61


 1690 0008 0020     		movs	r0, #0
 1691              	.LVL163:
 1692 000a 7047     		bx	lr
 1693              		.cfi_endproc
 1694              	.LFE144:
 1696              		.section	.text.FMC_SDRAM_GetModeStatus,"ax",%progbits
 1697              		.align	1
 1698              		.global	FMC_SDRAM_GetModeStatus
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1702              		.fpu fpv4-sp-d16
 1704              	FMC_SDRAM_GetModeStatus:
 1705              	.LFB145:
1638:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1639:HALLIB/Src/stm32f4xx_ll_fmc.c **** /**
1640:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @brief  Returns the indicated FMC SDRAM bank mode status.
1641:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Device Pointer to SDRAM device instance  
1642:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @param  Bank Defines the FMC SDRAM bank. This parameter can be 
1643:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *                     FMC_Bank1_SDRAM or FMC_Bank2_SDRAM. 
1644:HALLIB/Src/stm32f4xx_ll_fmc.c ****   * @retval The FMC SDRAM bank mode status, could be on of the following values:
1645:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         FMC_SDRAM_NORMAL_MODE, FMC_SDRAM_SELF_REFRESH_MODE or 
1646:HALLIB/Src/stm32f4xx_ll_fmc.c ****   *         FMC_SDRAM_POWER_DOWN_MODE.           
1647:HALLIB/Src/stm32f4xx_ll_fmc.c ****   */
1648:HALLIB/Src/stm32f4xx_ll_fmc.c **** uint32_t FMC_SDRAM_GetModeStatus(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
1649:HALLIB/Src/stm32f4xx_ll_fmc.c **** {
 1706              		.loc 1 1649 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              		@ link register save eliminated.
 1711              	.LVL164:
1650:HALLIB/Src/stm32f4xx_ll_fmc.c ****   uint32_t tmpreg = 0U;
1651:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1652:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Check the parameters */
1653:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_DEVICE(Device));
1654:HALLIB/Src/stm32f4xx_ll_fmc.c ****   assert_param(IS_FMC_SDRAM_BANK(Bank));
1655:HALLIB/Src/stm32f4xx_ll_fmc.c **** 
1656:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Get the corresponding bank mode */
1657:HALLIB/Src/stm32f4xx_ll_fmc.c ****   if(Bank == FMC_SDRAM_BANK1)
 1712              		.loc 1 1657 0
 1713 0000 21B1     		cbz	r1, .L116
1658:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1659:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpreg = (uint32_t)(Device->SDSR & FMC_SDSR_MODES1); 
1660:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1661:HALLIB/Src/stm32f4xx_ll_fmc.c ****   else
1662:HALLIB/Src/stm32f4xx_ll_fmc.c ****   {
1663:HALLIB/Src/stm32f4xx_ll_fmc.c ****     tmpreg = ((uint32_t)(Device->SDSR & FMC_SDSR_MODES2) >> 2U);
 1714              		.loc 1 1663 0
 1715 0002 8069     		ldr	r0, [r0, #24]
 1716              	.LVL165:
 1717 0004 8008     		lsrs	r0, r0, #2
 1718 0006 00F00600 		and	r0, r0, #6
 1719              	.LVL166:
1664:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
1665:HALLIB/Src/stm32f4xx_ll_fmc.c ****   
1666:HALLIB/Src/stm32f4xx_ll_fmc.c ****   /* Return the mode status */
ARM GAS  /tmp/ccvY9scw.s 			page 62


1667:HALLIB/Src/stm32f4xx_ll_fmc.c ****   return tmpreg;
1668:HALLIB/Src/stm32f4xx_ll_fmc.c **** }
 1720              		.loc 1 1668 0
 1721 000a 7047     		bx	lr
 1722              	.LVL167:
 1723              	.L116:
1659:HALLIB/Src/stm32f4xx_ll_fmc.c ****   }
 1724              		.loc 1 1659 0
 1725 000c 8069     		ldr	r0, [r0, #24]
 1726              	.LVL168:
 1727 000e 00F00600 		and	r0, r0, #6
 1728              	.LVL169:
 1729 0012 7047     		bx	lr
 1730              		.cfi_endproc
 1731              	.LFE145:
 1733              		.text
 1734              	.Letext0:
 1735              		.file 2 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_types.h"
 1736              		.file 3 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1737              		.file 4 "CORE/core_cm4.h"
 1738              		.file 5 "USER/system_stm32f4xx.h"
 1739              		.file 6 "USER/stm32f429xx.h"
 1740              		.file 7 "USER/stm32f4xx.h"
 1741              		.file 8 "HALLIB/Inc/stm32f4xx_hal_def.h"
 1742              		.file 9 "HALLIB/Inc/stm32f4xx_ll_fmc.h"
 1743              		.file 10 "HALLIB/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccvY9scw.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_ll_fmc.c
     /tmp/ccvY9scw.s:18     .text.FMC_NORSRAM_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:25     .text.FMC_NORSRAM_Init:0000000000000000 FMC_NORSRAM_Init
     /tmp/ccvY9scw.s:153    .text.FMC_NORSRAM_Init:0000000000000070 $d
     /tmp/ccvY9scw.s:158    .text.FMC_NORSRAM_DeInit:0000000000000000 $t
     /tmp/ccvY9scw.s:165    .text.FMC_NORSRAM_DeInit:0000000000000000 FMC_NORSRAM_DeInit
     /tmp/ccvY9scw.s:214    .text.FMC_NORSRAM_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:221    .text.FMC_NORSRAM_Timing_Init:0000000000000000 FMC_NORSRAM_Timing_Init
     /tmp/ccvY9scw.s:307    .text.FMC_NORSRAM_Extended_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:314    .text.FMC_NORSRAM_Extended_Timing_Init:0000000000000000 FMC_NORSRAM_Extended_Timing_Init
     /tmp/ccvY9scw.s:384    .text.FMC_NORSRAM_Extended_Timing_Init:0000000000000040 $d
     /tmp/ccvY9scw.s:389    .text.FMC_NORSRAM_WriteOperation_Enable:0000000000000000 $t
     /tmp/ccvY9scw.s:396    .text.FMC_NORSRAM_WriteOperation_Enable:0000000000000000 FMC_NORSRAM_WriteOperation_Enable
     /tmp/ccvY9scw.s:416    .text.FMC_NORSRAM_WriteOperation_Disable:0000000000000000 $t
     /tmp/ccvY9scw.s:423    .text.FMC_NORSRAM_WriteOperation_Disable:0000000000000000 FMC_NORSRAM_WriteOperation_Disable
     /tmp/ccvY9scw.s:443    .text.FMC_NAND_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:450    .text.FMC_NAND_Init:0000000000000000 FMC_NAND_Init
     /tmp/ccvY9scw.s:534    .text.FMC_NAND_Init:0000000000000044 $d
     /tmp/ccvY9scw.s:539    .text.FMC_NAND_CommonSpace_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:546    .text.FMC_NAND_CommonSpace_Timing_Init:0000000000000000 FMC_NAND_CommonSpace_Timing_Init
     /tmp/ccvY9scw.s:614    .text.FMC_NAND_AttributeSpace_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:621    .text.FMC_NAND_AttributeSpace_Timing_Init:0000000000000000 FMC_NAND_AttributeSpace_Timing_Init
     /tmp/ccvY9scw.s:689    .text.FMC_NAND_DeInit:0000000000000000 $t
     /tmp/ccvY9scw.s:696    .text.FMC_NAND_DeInit:0000000000000000 FMC_NAND_DeInit
     /tmp/ccvY9scw.s:755    .text.FMC_NAND_ECC_Enable:0000000000000000 $t
     /tmp/ccvY9scw.s:762    .text.FMC_NAND_ECC_Enable:0000000000000000 FMC_NAND_ECC_Enable
     /tmp/ccvY9scw.s:793    .text.FMC_NAND_ECC_Disable:0000000000000000 $t
     /tmp/ccvY9scw.s:800    .text.FMC_NAND_ECC_Disable:0000000000000000 FMC_NAND_ECC_Disable
     /tmp/ccvY9scw.s:831    .text.FMC_NAND_GetECC:0000000000000000 $t
     /tmp/ccvY9scw.s:838    .text.FMC_NAND_GetECC:0000000000000000 FMC_NAND_GetECC
     /tmp/ccvY9scw.s:932    .text.FMC_PCCARD_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:939    .text.FMC_PCCARD_Init:0000000000000000 FMC_PCCARD_Init
     /tmp/ccvY9scw.s:989    .text.FMC_PCCARD_CommonSpace_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:996    .text.FMC_PCCARD_CommonSpace_Timing_Init:0000000000000000 FMC_PCCARD_CommonSpace_Timing_Init
     /tmp/ccvY9scw.s:1032   .text.FMC_PCCARD_AttributeSpace_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:1039   .text.FMC_PCCARD_AttributeSpace_Timing_Init:0000000000000000 FMC_PCCARD_AttributeSpace_Timing_Init
     /tmp/ccvY9scw.s:1075   .text.FMC_PCCARD_IOSpace_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:1082   .text.FMC_PCCARD_IOSpace_Timing_Init:0000000000000000 FMC_PCCARD_IOSpace_Timing_Init
     /tmp/ccvY9scw.s:1118   .text.FMC_PCCARD_DeInit:0000000000000000 $t
     /tmp/ccvY9scw.s:1125   .text.FMC_PCCARD_DeInit:0000000000000000 FMC_PCCARD_DeInit
     /tmp/ccvY9scw.s:1158   .text.FMC_SDRAM_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:1165   .text.FMC_SDRAM_Init:0000000000000000 FMC_SDRAM_Init
     /tmp/ccvY9scw.s:1309   .text.FMC_SDRAM_Timing_Init:0000000000000000 $t
     /tmp/ccvY9scw.s:1316   .text.FMC_SDRAM_Timing_Init:0000000000000000 FMC_SDRAM_Timing_Init
     /tmp/ccvY9scw.s:1453   .text.FMC_SDRAM_DeInit:0000000000000000 $t
     /tmp/ccvY9scw.s:1460   .text.FMC_SDRAM_DeInit:0000000000000000 FMC_SDRAM_DeInit
     /tmp/ccvY9scw.s:1491   .text.FMC_SDRAM_WriteProtection_Enable:0000000000000000 $t
     /tmp/ccvY9scw.s:1498   .text.FMC_SDRAM_WriteProtection_Enable:0000000000000000 FMC_SDRAM_WriteProtection_Enable
     /tmp/ccvY9scw.s:1518   .text.FMC_SDRAM_WriteProtection_Disable:0000000000000000 $t
     /tmp/ccvY9scw.s:1525   .text.FMC_SDRAM_WriteProtection_Disable:0000000000000000 FMC_SDRAM_WriteProtection_Disable
     /tmp/ccvY9scw.s:1545   .text.FMC_SDRAM_SendCommand:0000000000000000 $t
     /tmp/ccvY9scw.s:1552   .text.FMC_SDRAM_SendCommand:0000000000000000 FMC_SDRAM_SendCommand
     /tmp/ccvY9scw.s:1641   .text.FMC_SDRAM_ProgramRefreshRate:0000000000000000 $t
     /tmp/ccvY9scw.s:1648   .text.FMC_SDRAM_ProgramRefreshRate:0000000000000000 FMC_SDRAM_ProgramRefreshRate
     /tmp/ccvY9scw.s:1669   .text.FMC_SDRAM_SetAutoRefreshNumber:0000000000000000 $t
     /tmp/ccvY9scw.s:1676   .text.FMC_SDRAM_SetAutoRefreshNumber:0000000000000000 FMC_SDRAM_SetAutoRefreshNumber
ARM GAS  /tmp/ccvY9scw.s 			page 64


     /tmp/ccvY9scw.s:1697   .text.FMC_SDRAM_GetModeStatus:0000000000000000 $t
     /tmp/ccvY9scw.s:1704   .text.FMC_SDRAM_GetModeStatus:0000000000000000 FMC_SDRAM_GetModeStatus
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
